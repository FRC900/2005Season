MP2COD 3.90, COFF to COD File Converter
Copyright (c) 2004 Microchip Technology Inc.
Listing File Generated: Tue Mar 29 11:38:36 2005


Address  Value    Disassembly              Source                                                                           File
-------  -------  -----------------------  -------------------------------------------------------------------------------  -----
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\main.c
                                           * FILE NAME: main.c <FRC VERSION>                                                C:\first\v2.0\src\FRC2005\main.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\main.c
                                           * DESCRIPTION:                                                                   C:\first\v2.0\src\FRC2005\main.c
                                           *  This file contains the main program loop.                                     C:\first\v2.0\src\FRC2005\main.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\main.c
                                           * USAGE:                                                                         C:\first\v2.0\src\FRC2005\main.c
                                           *  You should not need to modify this file.                                      C:\first\v2.0\src\FRC2005\main.c
                                           *  Note the different loop speed for the two routines:                           C:\first\v2.0\src\FRC2005\main.c
                                           *     Process_Data_From_Master_uP                                                C:\first\v2.0\src\FRC2005\main.c
                                           *     Process_Data_From_Local_IO                                                 C:\first\v2.0\src\FRC2005\main.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\main.c
                                                                                                                            C:\first\v2.0\src\FRC2005\main.c
                                           #include "ifi_aliases.h"                                                         C:\first\v2.0\src\FRC2005\main.c
                                           #include "ifi_default.h"                                                         C:\first\v2.0\src\FRC2005\main.c
                                           #include "ifi_utilities.h"                                                       C:\first\v2.0\src\FRC2005\main.c
                                           #include "user_routines.h"                                                       C:\first\v2.0\src\FRC2005\main.c
                                                                                                                            C:\first\v2.0\src\FRC2005\main.c
                                           tx_data_record txdata;          /* DO NOT CHANGE! */                             C:\first\v2.0\src\FRC2005\main.c
                                           rx_data_record rxdata;          /* DO NOT CHANGE! */                             C:\first\v2.0\src\FRC2005\main.c
                                           packed_struct statusflag;       /* DO NOT CHANGE! */                             C:\first\v2.0\src\FRC2005\main.c
                                                                                                                            C:\first\v2.0\src\FRC2005\main.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\main.c
                                           * FUNCTION NAME: main                                                            C:\first\v2.0\src\FRC2005\main.c
                                           * PURPOSE:       Main program function.                                          C:\first\v2.0\src\FRC2005\main.c
                                           * CALLED FROM:   ifi_startup.c                                                   C:\first\v2.0\src\FRC2005\main.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\FRC2005\main.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\FRC2005\main.c
                                           * DO NOT DELETE THIS FUNCTION                                                    C:\first\v2.0\src\FRC2005\main.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\main.c
                                           void main (void)                                                                 C:\first\v2.0\src\FRC2005\main.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\main.c
                                           #ifdef UNCHANGEABLE_DEFINITION_AREA                                              C:\first\v2.0\src\FRC2005\main.c
0065da   ec2f     CALL      0x325e,0x0       IFI_Initialization ();        /* DO NOT CHANGE! */                             C:\first\v2.0\src\FRC2005\main.c
0065dc   f019                                                                                                               
                                           #endif                                                                           C:\first\v2.0\src\FRC2005\main.c
                                                                                                                            C:\first\v2.0\src\FRC2005\main.c
0065de   ece9     CALL      0x41d2,0x0       User_Initialization();        /* You edit this in user_routines.c */           C:\first\v2.0\src\FRC2005\main.c
0065e0   f020                                                                                                               
                                                                                                                            C:\first\v2.0\src\FRC2005\main.c
0065e2   0102     MOVLB     0x2              statusflag.NEW_SPI_DATA = 0;  /* DO NOT CHANGE! */                             C:\first\v2.0\src\FRC2005\main.c
0065e4   9182     BCF       0x82,0x0,0x1                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\main.c
0065fe   d7f3     BRA       0x65e6           while (1)   /* This loop will repeat indefinitely. */                          C:\first\v2.0\src\FRC2005\main.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\main.c
                                           #ifdef _SIMULATOR                                                                C:\first\v2.0\src\FRC2005\main.c
                                               statusflag.NEW_SPI_DATA = 1;                                                 C:\first\v2.0\src\FRC2005\main.c
                                           #endif                                                                           C:\first\v2.0\src\FRC2005\main.c
                                                                                                                            C:\first\v2.0\src\FRC2005\main.c
0065e6   0102     MOVLB     0x2                if (statusflag.NEW_SPI_DATA)      /* 26.2ms loop area */                     C:\first\v2.0\src\FRC2005\main.c
0065e8   a182     BTFSS     0x82,0x0,0x1                                                                                    
0065ea   d007     BRA       0x65fa                                                                                          
                                               {                                 /* I'm slow!  I only execute every 26.2ms because */ C:\first\v2.0\src\FRC2005\main.c
                                                                                 /* that's how fast the Master uP gives me data. */ C:\first\v2.0\src\FRC2005\main.c
0065ec   ec15     CALL      0x422a,0x0           Process_Data_From_Master_uP();  /* You edit this in user_routines.c */     C:\first\v2.0\src\FRC2005\main.c
0065ee   f021                                                                                                               
                                                                                                                            C:\first\v2.0\src\FRC2005\main.c
0065f0   0102     MOVLB     0x2                  if (autonomous_mode)            /* DO NOT CHANGE! */                       C:\first\v2.0\src\FRC2005\main.c
0065f2   ad63     BTFSS     0x63,0x6,0x1                                                                                    
0065f4   d002     BRA       0x65fa                                                                                          
                                                 {                                                                          C:\first\v2.0\src\FRC2005\main.c
0065f6   ec5d     CALL      0x66ba,0x0             User_Autonomous_Code();        /* You edit this in user_routines_fast.c */ C:\first\v2.0\src\FRC2005\main.c
0065f8   f033                                                                                                               
                                                 }                                                                          C:\first\v2.0\src\FRC2005\main.c
                                               }                                                                            C:\first\v2.0\src\FRC2005\main.c
0065fa   ec5e     CALL      0x66bc,0x0         Process_Data_From_Local_IO();     /* You edit this in user_routines_fast.c */ C:\first\v2.0\src\FRC2005\main.c
0065fc   f033                                                                                                               
                                                                                 /* I'm fast!  I execute during every loop.*/ C:\first\v2.0\src\FRC2005\main.c
                                             } /* while (1) */                                                              C:\first\v2.0\src\FRC2005\main.c
006600   0012     RETURN    0x0            }  /* END of Main */                                                             C:\first\v2.0\src\FRC2005\main.c
                                                                                                                            C:\first\v2.0\src\FRC2005\main.c
                                                                                                                            C:\first\v2.0\src\FRC2005\main.c
                                           /******************************************************************************/ C:\first\v2.0\src\FRC2005\main.c
                                           /******************************************************************************/ C:\first\v2.0\src\FRC2005\main.c
                                           /******************************************************************************/ C:\first\v2.0\src\FRC2005\main.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FILE NAME: user_serialdrv.c                                                    C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * DESCRIPTION:                                                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *  This file contains an unsupported serial device driver for the 18F8520        C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *  micro.                                                                        C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *  Once the driver is initialized (Serial_Driver_Initialize), it handles data    C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *  from both serial ports.  When a serial interrupt occurs, the interrupt service  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *  routine (InterruptHandlerLow) makes a call to CheckUartInts.  This routine    C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *  determines if it was a transmit or receive interrupt.  If transmit, then it will C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *  work off the transmit buffer a byte at a time.  If receive, then it will call  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *  the Handle_Panel_Data state machine until a full packet has been received (from C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *  the Breaker Panel).  You can put your own callback routine inside CheckUartInts.   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *  This will allow you to parse data from another device in real time.           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ASSUMPTION AND LIMITATIONS:                                                    C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *  A printf call now can be buffered by setting the USE_BUFFERED_PRINTF to one.  This C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *  enables the user to write non-blocking application code.  However, if two consecutive  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *  printfs are invoked, the second will be blocked until the first is complete. This C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *  can be resolved by adding a circular queue to the device status structure.    C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * USAGE:                                                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *  This driver may be modified to suit the needs of the user.                    C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           #include <string.h>                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           #include <usart.h>                                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           #include <string.h>                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           #include <stdio.h>                                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           #include "user_Serialdrv.h"                                                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           #include "ifi_default.h"                                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           #include "delays.h"                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           #define PRIORITY            0           // Always set to Low (0)                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * DeviceStatus - This stucture is used as a device control block (dcb) and       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * provides status information for the driver as well.                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           typedef struct                                                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             unsigned char portId;                                                          C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             unsigned char wtCount;                                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             unsigned char *wtbufr;                                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             unsigned char wtBufr[MAX_WT_BUFR_SIZE];                                        C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             unsigned char wtBufrIdx;                                                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             volatile near unsigned char *myRCREG;                                          C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             volatile near unsigned char *myTXREG;                                          C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           } DeviceStatus;                                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           typedef DeviceStatus *DeviceStatusPtr;                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           static char rom2ramBufr[MAX_RD_BUFR_SIZE];                                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           static PANEL_INPUT_RECORD  dataIn;     /* data input buffer (from Breaker Panel) */ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           static unsigned char IntState;                                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           static DeviceStatus dcb[TOTAL_SERIAL_PORTS];  /* device control block */         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           unsigned char aBreakerWasTripped;                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FUNCTION NAME: Reset_Control_Block                                             C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * PURPOSE:       Handles incomming data from PROGRAM_PORT and/or TTL_PORT.  It   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                also transmits data from an output buffer.                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * CALLED FROM:   Initialize_uart                                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ARGUMENTS:     1                                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     Argument       Type             IO   Description                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     --------       -------------    --   -----------                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     dcbPtr         DeviceStatusPtr  I    pointer to a dcb                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0046c2   cfd9     MOVFF     0xfd9,0xfe6    static void Reset_Control_Block(DeviceStatusPtr dcbPtr)                          C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0046c4   ffe6                                                                                                               
0046c6   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0046c8   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0046ca   9cf2     BCF       0xf2,0x6,0x0     INTCONbits.PEIE = 0;          /* Disable peripheral interrupt */               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0046cc   0efd     MOVLW     0xfd             dcbPtr->wtCount = 0;                                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0046ce   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0046d0   ffe9                                                                                                               
0046d2   0efe     MOVLW     0xfe                                                                                            
0046d4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0046d6   ffea                                                                                                               
0046d8   52ee     MOVF      0xee,0x1,0x0                                                                                    
0046da   6aef     CLRF      0xef,0x0                                                                                        
0046dc   0efd     MOVLW     0xfd             dcbPtr->wtBufrIdx = 0;                                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0046de   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0046e0   ffe9                                                                                                               
0046e2   0efe     MOVLW     0xfe                                                                                            
0046e4   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0046e6   ffea                                                                                                               
0046e8   0e54     MOVLW     0x54                                                                                            
0046ea   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0046ec   0e00     MOVLW     0x0                                                                                             
0046ee   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0046f0   6aef     CLRF      0xef,0x0                                                                                        
0046f2   8cf2     BSF       0xf2,0x6,0x0     INTCONbits.PEIE = 1;          /* Enable peripheral interrupts */               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0046f4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0046f6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0046f8   ffd9                                                                                                               
0046fa   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FUNCTION NAME: Initialize_uart                                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * PURPOSE:       Initializes the device control block and opens both serial ports. C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * CALLED FROM:   Serial_Driver_Initialize                                        C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0046fc   cfd9     MOVFF     0xfd9,0xfe6    static void Initialize_uart(void)                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0046fe   ffe6                                                                                                               
004700   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004702   ffd9                                                                                                               
004704   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             uword8 flush;                                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             /* Setup the device control block (dcb) */                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004706   0107     MOVLB     0x7              dcb[PROGRAM_PORT].myRCREG = &RCREG1;                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004708   0eae     MOVLW     0xae                                                                                            
00470a   6f7c     MOVWF     0x7c,0x1                                                                                        
00470c   0e0f     MOVLW     0xf                                                                                             
00470e   6f7d     MOVWF     0x7d,0x1                                                                                        
004710   0ead     MOVLW     0xad             dcb[PROGRAM_PORT].myTXREG = &TXREG1;                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004712   6f7e     MOVWF     0x7e,0x1                                                                                        
004714   0e0f     MOVLW     0xf                                                                                             
004716   6f7f     MOVWF     0x7f,0x1                                                                                        
004718   0e01     MOVLW     0x1              dcb[PROGRAM_PORT].portId = 1;         /* setup unique ID for PROGRAM_PORT */   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00471a   6f27     MOVWF     0x27,0x1                                                                                        
00471c   0e27     MOVLW     0x27             Reset_Control_Block(&dcb[PROGRAM_PORT]);                                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00471e   6ee6     MOVWF     0xe6,0x0                                                                                        
004720   0e07     MOVLW     0x7                                                                                             
004722   6ee6     MOVWF     0xe6,0x0                                                                                        
004724   dfce     RCALL     0x46c2                                                                                          
004726   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004728   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00472a   0107     MOVLB     0x7              dcb[TTL_PORT].myRCREG = &RCREG2;                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00472c   0e6e     MOVLW     0x6e                                                                                            
00472e   6fd5     MOVWF     0xd5,0x1                                                                                        
004730   0e0f     MOVLW     0xf                                                                                             
004732   6fd6     MOVWF     0xd6,0x1                                                                                        
004734   0e6d     MOVLW     0x6d             dcb[TTL_PORT].myTXREG = &TXREG2;                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004736   6fd7     MOVWF     0xd7,0x1                                                                                        
004738   0e0f     MOVLW     0xf                                                                                             
00473a   6fd8     MOVWF     0xd8,0x1                                                                                        
00473c   0e02     MOVLW     0x2              dcb[TTL_PORT].portId = 2;             /* setup unique ID for TTL_PORT */       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00473e   6f80     MOVWF     0x80,0x1                                                                                        
004740   0e80     MOVLW     0x80             Reset_Control_Block(&dcb[TTL_PORT]);                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004742   6ee6     MOVWF     0xe6,0x0                                                                                        
004744   0e07     MOVLW     0x7                                                                                             
004746   6ee6     MOVWF     0xe6,0x0                                                                                        
004748   dfbc     RCALL     0x46c2                                                                                          
00474a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00474c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             /* Initialize the PROGRAM_PORT port */                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           #if USE_BUFFERED_PRINTF                                                          C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             Open1USART(USART_TX_INT_ON & USART_RX_INT_ON & USART_ASYNCH_MODE &             C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00474e   0e15     MOVLW     0x15               USART_EIGHT_BIT & USART_CONT_RX & USART_BRGH_HIGH, baud_115);                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004750   6ee6     MOVWF     0xe6,0x0                                                                                        
004752   0efc     MOVLW     0xfc                                                                                            
004754   6ee6     MOVWF     0xe6,0x0                                                                                        
004756   ec15     CALL      0x642a,0x0                                                                                      
004758   f032                                                                                                               
00475a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00475c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #else                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             Open1USART(USART_TX_INT_OFF & USART_RX_INT_ON & USART_ASYNCH_MODE &            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                               USART_EIGHT_BIT & USART_CONT_RX & USART_BRGH_HIGH, baud_115);                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           #endif                                                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00475e   989f     BCF       0x9f,0x4,0x0     IPR1bits.TXIP = PRIORITY;                                                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004760   9a9f     BCF       0x9f,0x5,0x0     IPR1bits.RCIP = PRIORITY;                                                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004762   9c94     BCF       0x94,0x6,0x0     TRISCbits.TRISC6  = 0;        /*TX1 output*/                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004764   8e94     BSF       0x94,0x7,0x0     TRISCbits.TRISC7 = 1;         /*RX1 input */                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004766   50ae     MOVF      0xae,0x0,0x0     flush = RCREG1;               /* flush data */                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004768   6edf     MOVWF     0xdf,0x0                                                                                        
00476a   50ae     MOVF      0xae,0x0,0x0     flush = RCREG1;               /* flush data */                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00476c   6edf     MOVWF     0xdf,0x0                                                                                        
00476e   9a9e     BCF       0x9e,0x5,0x0     RXINTF = 0;                                                                    C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             /* Initialize the TTL_PORT port */                                             C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             Open2USART(USART_TX_INT_OFF & USART_RX_INT_ON & USART_ASYNCH_MODE &            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004770   0e15     MOVLW     0x15               USART_EIGHT_BIT & USART_CONT_RX & USART_BRGH_HIGH, baud_115);                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004772   6ee6     MOVWF     0xe6,0x0                                                                                        
004774   0e7c     MOVLW     0x7c                                                                                            
004776   6ee6     MOVWF     0xe6,0x0                                                                                        
004778   ece3     CALL      0x63c6,0x0                                                                                      
00477a   f031                                                                                                               
00477c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00477e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004780   9aa5     BCF       0xa5,0x5,0x0     IPR3bits.RC2IP = PRIORITY;                                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004782   98a5     BCF       0xa5,0x4,0x0     IPR3bits.TX2IP = PRIORITY;                                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004784   9298     BCF       0x98,0x1,0x0     TRISGbits.TRISG1 = 0;         /*TX2 output*/                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004786   8498     BSF       0x98,0x2,0x0     TRISGbits.TRISG2 = 1;         /*RX2 input */                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004788   506e     MOVF      0x6e,0x0,0x0     flush = RCREG2;               /* flush data */                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00478a   6edf     MOVWF     0xdf,0x0                                                                                        
00478c   506e     MOVF      0x6e,0x0,0x0     flush = RCREG2;               /* flush data */                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00478e   6edf     MOVWF     0xdf,0x0                                                                                        
004790   9aa4     BCF       0xa4,0x5,0x0     RXINTF2 = 0;                                                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004792   0107     MOVLB     0x7              aBreakerWasTripped = FALSE;                                                    C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004794   6bd9     CLRF      0xd9,0x1                                                                                        
004796   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004798   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00479a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00479c   ffd9                                                                                                               
00479e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FUNCTION NAME: EnableXmitInts                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * PURPOSE:       Enables transmit interrupt                                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * CALLED FROM:   CheckTXIntFlag                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ARGUMENTS:     1                                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     Argument       Type             IO   Description                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     --------       -------------    --   -----------                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     dcbPtr         DeviceStatusPtr  I    pointer to a dcb                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047a0   cfd9     MOVFF     0xfd9,0xfe6    static void EnableXmitInts(DeviceStatusPtr dcbPtr)                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047a2   ffe6                                                                                                               
0047a4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0047a6   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047a8   0efd     MOVLW     0xfd             if (dcbPtr->portId == 1)                                                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047aa   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0047ac   ffe9                                                                                                               
0047ae   0efe     MOVLW     0xfe                                                                                            
0047b0   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0047b2   ffea                                                                                                               
0047b4   04ef     DECF      0xef,0x0,0x0                                                                                    
0047b6   e102     BNZ       0x47bc                                                                                          
0047b8   889d     BSF       0x9d,0x4,0x0       TXINTE = 1;                                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047ba   d001     BRA       0x47be           else                                                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047bc   88a3     BSF       0xa3,0x4,0x0       TXINTE2 = 1;                                                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047be   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047c0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0047c2   ffd9                                                                                                               
0047c4   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FUNCTION NAME: CheckTXIntFlag                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * PURPOSE:       Check transmit interrupt flag                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * CALLED FROM:   Serial_Write_Bufr, Serial_Display_Char                          C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ARGUMENTS:     1                                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     Argument       Type             IO   Description                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     --------       -------------    --   -----------                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     port           Int              I    TTL_PORT or PROGRAM_PORT              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047c6   cfd9     MOVFF     0xfd9,0xfe6    static void CheckTXIntFlag(int port)                                             C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047c8   ffe6                                                                                                               
0047ca   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0047cc   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047ce   50d9     MOVF      0xd9,0x0,0x0     if (port == PROGRAM_PORT)                                                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047d0   0ffd     ADDLW     0xfd                                                                                            
0047d2   6ee9     MOVWF     0xe9,0x0                                                                                        
0047d4   0eff     MOVLW     0xff                                                                                            
0047d6   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0047d8   6eea     MOVWF     0xea,0x0                                                                                        
0047da   50ee     MOVF      0xee,0x0,0x0                                                                                    
0047dc   10ed     IORWF     0xed,0x0,0x0                                                                                    
0047de   e10a     BNZ       0x47f4                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047e0   a89e     BTFSS     0x9e,0x4,0x0       if (TXINTF)                                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047e2   d007     BRA       0x47f2                                                                                          
0047e4   0e27     MOVLW     0x27                 EnableXmitInts(&dcb[PROGRAM_PORT]);                                        C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047e6   6ee6     MOVWF     0xe6,0x0                                                                                        
0047e8   0e07     MOVLW     0x7                                                                                             
0047ea   6ee6     MOVWF     0xe6,0x0                                                                                        
0047ec   dfd9     RCALL     0x47a0                                                                                          
0047ee   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0047f0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047f2   d009     BRA       0x4806           else                                                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047f4   a8a4     BTFSS     0xa4,0x4,0x0       if (TXINTF2)                                                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047f6   d007     BRA       0x4806                                                                                          
0047f8   0e80     MOVLW     0x80                 EnableXmitInts(&dcb[TTL_PORT]);                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0047fa   6ee6     MOVWF     0xe6,0x0                                                                                        
0047fc   0e07     MOVLW     0x7                                                                                             
0047fe   6ee6     MOVWF     0xe6,0x0                                                                                        
004800   dfcf     RCALL     0x47a0                                                                                          
004802   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004804   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004806   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004808   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00480a   ffd9                                                                                                               
00480c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FUNCTION NAME: Serial_Resume_Port                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * PURPOSE:       Used to reenable a port that has been terminated due to an error. C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * CALLED FROM:   N/A                                                             C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ARGUMENTS:     1                                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     Argument       Type             IO   Description                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     --------       -------------    --   -----------                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     port           Int              I    TTL_PORT or PROGRAM_PORT              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00480e   cfd9     MOVFF     0xfd9,0xfe6    void Serial_Resume_Port(int port)                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004810   ffe6                                                                                                               
004812   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004814   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004816   50d9     MOVF      0xd9,0x0,0x0     if (port == PROGRAM_PORT)                                                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004818   0ffd     ADDLW     0xfd                                                                                            
00481a   6ee9     MOVWF     0xe9,0x0                                                                                        
00481c   0eff     MOVLW     0xff                                                                                            
00481e   20da     ADDWFC    0xda,0x0,0x0                                                                                    
004820   6eea     MOVWF     0xea,0x0                                                                                        
004822   50ee     MOVF      0xee,0x0,0x0                                                                                    
004824   10ed     IORWF     0xed,0x0,0x0                                                                                    
004826   e105     BNZ       0x4832                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004828   b2ab     BTFSC     0xab,0x1,0x0       if (RCSTA1bits.OERR)                                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00482a   98ab     BCF       0xab,0x4,0x0         RCSTA1bits.CREN = 0;                                                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00482c   88ab     BSF       0xab,0x4,0x0       RCSTA1bits.CREN = 1;                                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00482e   8a9d     BSF       0x9d,0x5,0x0       RXINTE = 1;                                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004830   d004     BRA       0x483a           else                                                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004832   b26b     BTFSC     0x6b,0x1,0x0       if (RCSTA2bits.OERR)                                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004834   986b     BCF       0x6b,0x4,0x0         RCSTA2bits.CREN = 0;                                                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004836   886b     BSF       0x6b,0x4,0x0       RCSTA2bits.CREN = 1;                                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004838   8aa3     BSF       0xa3,0x5,0x0       RXINTE2 = 1;                                                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00483a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00483c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00483e   ffd9                                                                                                               
004840   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           ***********************  Interrupt Routines  *********************************** C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FUNCTION NAME: DisableXmitInts                                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * PURPOSE:       Disables a transmit interrupt                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * CALLED FROM:   Process_TX                                                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ARGUMENTS:     1                                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     Argument       Type             IO   Description                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     --------       -------------    --   -----------                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     dcbPtr         DeviceStatusPtr  I    pointer to a dcb                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004842   cfd9     MOVFF     0xfd9,0xfe6    void DisableXmitInts(DeviceStatusPtr dcbPtr)                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004844   ffe6                                                                                                               
004846   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004848   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00484a   0efd     MOVLW     0xfd             if (dcbPtr->portId == 1)                                                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00484c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00484e   ffe9                                                                                                               
004850   0efe     MOVLW     0xfe                                                                                            
004852   cfdb     MOVFF     0xfdb,0xfea                                                                                     
004854   ffea                                                                                                               
004856   04ef     DECF      0xef,0x0,0x0                                                                                    
004858   e103     BNZ       0x4860                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00485a   989e     BCF       0x9e,0x4,0x0       TXINTF = 0;                                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00485c   989d     BCF       0x9d,0x4,0x0       TXINTE = 0;                                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00485e   d002     BRA       0x4864           else                                                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004860   98a4     BCF       0xa4,0x4,0x0       TXINTF2 = 0;                                                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004862   98a3     BCF       0xa3,0x4,0x0       TXINTE2 = 0;                                                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004864   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004866   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004868   ffd9                                                                                                               
00486a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FUNCTION NAME: Process_TX                                                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * PURPOSE:       Transmits an output buffer to the serial port.                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * CALLED FROM:   CheckUartInts                                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ARGUMENTS:     1                                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     Argument       Type             IO   Description                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     --------       -------------    --   -----------                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     dcbPtr         DeviceStatusPtr  I    pointer to a dcb                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00486c   cfd9     MOVFF     0xfd9,0xfe6    static void Process_TX(DeviceStatusPtr dcbPtr)                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00486e   ffe6                                                                                                               
004870   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004872   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004874   0efd     MOVLW     0xfd             if (dcbPtr->wtCount == 0)     /* if all data is transmitted, then disable TX */ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004876   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
004878   ffe9                                                                                                               
00487a   0efe     MOVLW     0xfe                                                                                            
00487c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00487e   ffea                                                                                                               
004880   52ee     MOVF      0xee,0x1,0x0                                                                                    
004882   50ef     MOVF      0xef,0x0,0x0                                                                                    
004884   e10a     BNZ       0x489a                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004886   0efd     MOVLW     0xfd               DisableXmitInts(dcbPtr);                                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004888   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00488a   ffe6                                                                                                               
00488c   0efe     MOVLW     0xfe                                                                                            
00488e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004890   ffe6                                                                                                               
004892   dfd7     RCALL     0x4842                                                                                          
004894   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004896   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004898   d02f     BRA       0x48f8             return;                                                                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00489a   0efd     MOVLW     0xfd             *dcbPtr->myTXREG = *dcbPtr->wtbufr++;  /* Load transmit register with data */  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00489c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00489e   ffe9                                                                                                               
0048a0   0efe     MOVLW     0xfe                                                                                            
0048a2   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0048a4   ffea                                                                                                               
0048a6   0e02     MOVLW     0x2                                                                                             
0048a8   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0048aa   0e00     MOVLW     0x0                                                                                             
0048ac   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0048ae   cfee     MOVFF     0xfee,0xff3                                                                                     
0048b0   fff3                                                                                                               
0048b2   cfed     MOVFF     0xfed,0xff4                                                                                     
0048b4   fff4                                                                                                               
0048b6   2aee     INCF      0xee,0x1,0x0                                                                                    
0048b8   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
0048ba   cff3     MOVFF     0xff3,0xfe9                                                                                     
0048bc   ffe9                                                                                                               
0048be   cff4     MOVFF     0xff4,0xfea                                                                                     
0048c0   ffea                                                                                                               
0048c2   50ef     MOVF      0xef,0x0,0x0                                                                                    
0048c4   6ee6     MOVWF     0xe6,0x0                                                                                        
0048c6   0efd     MOVLW     0xfd                                                                                            
0048c8   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0048ca   ffe9                                                                                                               
0048cc   0efe     MOVLW     0xfe                                                                                            
0048ce   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0048d0   ffea                                                                                                               
0048d2   0e57     MOVLW     0x57                                                                                            
0048d4   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
0048d6   0e00     MOVLW     0x0                                                                                             
0048d8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
0048da   50ee     MOVF      0xee,0x0,0x0                                                                                    
0048dc   cfef     MOVFF     0xfef,0xfea                                                                                     
0048de   ffea                                                                                                               
0048e0   6ee9     MOVWF     0xe9,0x0                                                                                        
0048e2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0048e4   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0048e6   6eef     MOVWF     0xef,0x0                                                                                        
0048e8   0efd     MOVLW     0xfd             dcbPtr->wtCount--;                     /* advance bufr counter */              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0048ea   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0048ec   ffe9                                                                                                               
0048ee   0efe     MOVLW     0xfe                                                                                            
0048f0   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0048f2   ffea                                                                                                               
0048f4   52ee     MOVF      0xee,0x1,0x0                                                                                    
0048f6   06ef     DECF      0xef,0x1,0x0                                                                                    
0048f8   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0048fa   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0048fc   ffd9                                                                                                               
0048fe   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FUNCTION NAME: Handle_Panel_Data                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * PURPOSE:       State machine for incomming Breaker Panel data.                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * NOTE:          Normally device specific code should reside in another file but C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                for the purpose of simplification we chose to put it here.      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * CALLED FROM:   CheckUartInts                                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ARGUMENTS:     1                                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     Argument       Type             IO   Description                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     --------       -------------    --   -----------                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     data           unsigned char    I    incoming data byte                    C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * LIMITATIONS:   The data from the breaker panel does not contain a checksum.    C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *				 See the breaker-panel-packet-definitions.pdf file for more info.           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004900   cfd9     MOVFF     0xfd9,0xfe6    void Handle_Panel_Data(unsigned char data)                                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004902   ffe6                                                                                                               
004904   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004906   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004908   0107     MOVLB     0x7              switch (IntState)                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00490a   5126     MOVF      0x26,0x0,0x1                                                                                    
00490c   0a05     XORLW     0x5                                                                                             
00490e   e039     BZ        0x4982                                                                                          
004910   0a01     XORLW     0x1                                                                                             
004912   e02f     BZ        0x4972                                                                                          
004914   0a07     XORLW     0x7                                                                                             
004916   e025     BZ        0x4962                                                                                          
004918   0a01     XORLW     0x1                                                                                             
00491a   e016     BZ        0x4948                                                                                          
00491c   0a03     XORLW     0x3                                                                                             
00491e   e00c     BZ        0x4938                                                                                          
004920   0a01     XORLW     0x1                                                                                             
004922   e002     BZ        0x4928                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                               case 0:  // 1st 0xC9                                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004928   6b26     CLRF      0x26,0x1             IntState = 0;                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00492a   0efe     MOVLW     0xfe                 if (data == 0xC9) IntState = 1;                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00492c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00492e   08c9     SUBLW     0xc9                                                                                            
004930   e102     BNZ       0x4936                                                                                          
004932   0e01     MOVLW     0x1                                                                                             
004934   6f26     MOVWF     0x26,0x1                                                                                        
004936   d02c     BRA       0x4990               break;                                                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                               case 1 : // 2nd 0x17                                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004938   6b26     CLRF      0x26,0x1             IntState = 0;                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00493a   0efe     MOVLW     0xfe                 if (data == 0x17) IntState = 2;                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00493c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00493e   0817     SUBLW     0x17                                                                                            
004940   e102     BNZ       0x4946                                                                                          
004942   0e02     MOVLW     0x2                                                                                             
004944   6f26     MOVWF     0x26,0x1                                                                                        
004946   d024     BRA       0x4990               break;                                                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                               case 2 : //get DATA1                                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004948   0efe     MOVLW     0xfe                 dataIn.data1Byte.allbits = data;                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00494a   cfdb     MOVFF     0xfdb,0x722                                                                                     
00494c   f722                                                                                                               
00494e   cfdb     MOVFF     0xfdb,0x25a          txdata.user_byte3 = data;                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004950   f25a                                                                                                               
004952   5122     MOVF      0x22,0x0,0x1         aBreakerWasTripped = (int) dataIn.data1Byte.bitselect.tripped;             C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004954   0b80     ANDLW     0x80                                                                                            
004956   e001     BZ        0x495a                                                                                          
004958   0e01     MOVLW     0x1                                                                                             
00495a   6fd9     MOVWF     0xd9,0x1                                                                                        
00495c   0e03     MOVLW     0x3                  IntState = 3;                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00495e   6f26     MOVWF     0x26,0x1                                                                                        
004960   d017     BRA       0x4990               break;                                                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                               case 3 : //get DATA2                                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004962   0efe     MOVLW     0xfe                 dataIn.data2 = data;                                                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004964   cfdb     MOVFF     0xfdb,0x723                                                                                     
004966   f723                                                                                                               
004968   cfdb     MOVFF     0xfdb,0x25b          txdata.user_byte4 = data;                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00496a   f25b                                                                                                               
00496c   0e04     MOVLW     0x4                  IntState = 4;                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00496e   6f26     MOVWF     0x26,0x1                                                                                        
004970   d00f     BRA       0x4990               break;                                                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                               case 4 : //get DATA3                                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004972   0efe     MOVLW     0xfe                 dataIn.data3 = data;                                                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004974   cfdb     MOVFF     0xfdb,0x724                                                                                     
004976   f724                                                                                                               
004978   cfdb     MOVFF     0xfdb,0x25c          txdata.user_byte5 = data;                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00497a   f25c                                                                                                               
00497c   0e05     MOVLW     0x5                  IntState = 5;                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00497e   6f26     MOVWF     0x26,0x1                                                                                        
004980   d007     BRA       0x4990               break;                                                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                               case 5 : //get DATA4                                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004982   0efe     MOVLW     0xfe                 dataIn.data4 = data;                                                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004984   cfdb     MOVFF     0xfdb,0x725                                                                                     
004986   f725                                                                                                               
004988   cfdb     MOVFF     0xfdb,0x25d          txdata.user_byte6 = data;                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00498a   f25d                                                                                                               
00498c   6b26     CLRF      0x26,0x1             IntState = 0;                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00498e   d000     BRA       0x4990               break;                                                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                               default:                                                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004924   6b26     CLRF      0x26,0x1             IntState= 0;                                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004926   d034     BRA       0x4990               break;                                                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004990   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004992   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004994   ffd9                                                                                                               
004996   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FUNCTION NAME: CheckUartInts                                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * PURPOSE:       Handles incoming data from PROGRAM_PORT and/or TTL_PORT.  It    C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                also transmits data from an output buffer.                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * CALLED FROM:   InterruptHandlerLow                                             C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           void CheckUartInts ()                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004998   aa9e     BTFSS     0x9e,0x5,0x0     if (RXINTF)                                                                    C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00499a   d00a     BRA       0x49b0                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00499c   9a9e     BCF       0x9e,0x5,0x0       RXINTF = 0;                                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
00499e   c77c     MOVFF     0x77c,0xfe9        Handle_Panel_Data(*dcb[BREAKER_PANEL_PORT].myRCREG);                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049a0   ffe9                                                                                                               
0049a2   c77d     MOVFF     0x77d,0xfea                                                                                     
0049a4   ffea                                                                                                               
0049a6   50ef     MOVF      0xef,0x0,0x0                                                                                    
0049a8   6ee6     MOVWF     0xe6,0x0                                                                                        
0049aa   dfaa     RCALL     0x4900                                                                                          
0049ac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0049ae   d01f     BRA       0x49ee             return;                                                                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049b0   a89e     BTFSS     0x9e,0x4,0x0     if (TXINTF)       //data is being transferred one byte at a time               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049b2   d007     BRA       0x49c2                                                                                          
0049b4   0e27     MOVLW     0x27               Process_TX(&dcb[PROGRAM_PORT]);                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049b6   6ee6     MOVWF     0xe6,0x0                                                                                        
0049b8   0e07     MOVLW     0x7                                                                                             
0049ba   6ee6     MOVWF     0xe6,0x0                                                                                        
0049bc   df57     RCALL     0x486c                                                                                          
0049be   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0049c0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049c2   aaa4     BTFSS     0xa4,0x5,0x0     if (RXINTF2)                                                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049c4   d00b     BRA       0x49dc                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049c6   9aa4     BCF       0xa4,0x5,0x0       RXINTF2 = 0;                                                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                               /* If you want to handle RX data on the program port, you could provide a    C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                  callback routine to parse data.                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                  Example :                                                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                  Serial_Char_Callback(*dcb[TTL_PORT].myRCREG);                             C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                  You must supply the body of this routine in a file of your choice.        C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                               */                                                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049c8   c7d5     MOVFF     0x7d5,0xfe9        Serial_Char_Callback(*dcb[TTL_PORT].myRCREG);                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049ca   ffe9                                                                                                               
0049cc   c7d6     MOVFF     0x7d6,0xfea                                                                                     
0049ce   ffea                                                                                                               
0049d0   50ef     MOVF      0xef,0x0,0x0                                                                                    
0049d2   6ee6     MOVWF     0xe6,0x0                                                                                        
0049d4   ec5f     CALL      0x66be,0x0                                                                                      
0049d6   f033                                                                                                               
0049d8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0049da   d009     BRA       0x49ee             return;                                                                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049dc   a8a4     BTFSS     0xa4,0x4,0x0     if (TXINTF2)      //data is being transferred one byte at a time               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049de   d007     BRA       0x49ee                                                                                          
0049e0   0e80     MOVLW     0x80               Process_TX(&dcb[TTL_PORT]);                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049e2   6ee6     MOVWF     0xe6,0x0                                                                                        
0049e4   0e07     MOVLW     0x7                                                                                             
0049e6   6ee6     MOVWF     0xe6,0x0                                                                                        
0049e8   df41     RCALL     0x486c                                                                                          
0049ea   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0049ec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049ee   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *****************************  Service Routines  ******************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FUNCTION NAME: Serial_Driver_Initialize                                        C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * PURPOSE:       Initializes the device driver                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * CALLED FROM:   User application layer                                          C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           void Serial_Driver_Initialize(void)                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049f0   ef7e     GOTO      0x46fc           Initialize_uart();                                                             C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049f2   f023                                                                                                               
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FUNCTION NAME: Serial_Write_Bufr                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * PURPOSE:       Writes a buffer to the specified serial port.                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * CALLED FROM:   Serial_Write or any application layer routine                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ARGUMENTS:     3                                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     Argument       Type             IO   Description                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     --------       -------------    --   -----------                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     port           int              I    TTL_PORT or PROGRAM_PORT              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     ch_out         unsigned char *  I    output buffer                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     len            sword16          I    number of bytes to transmit           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049f4   cfd9     MOVFF     0xfd9,0xfe6    void Serial_Write_Bufr(int port,unsigned char *ch_out, sword16 len)              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049f6   ffe6                                                                                                               
0049f8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0049fa   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             static DeviceStatusPtr dcbPtr;                                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049fc   0e59     MOVLW     0x59             dcbPtr = &dcb[port];                                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
0049fe   6e1d     MOVWF     0x1d,0x0                                                                                        
004a00   6a1e     CLRF      0x1e,0x0                                                                                        
004a02   0efd     MOVLW     0xfd                                                                                            
004a04   cfdb     MOVFF     0xfdb,0x22                                                                                      
004a06   f022                                                                                                               
004a08   0efe     MOVLW     0xfe                                                                                            
004a0a   cfdb     MOVFF     0xfdb,0x23                                                                                      
004a0c   f023                                                                                                               
004a0e   ec06     CALL      0x600c,0x0                                                                                      
004a10   f030                                                                                                               
004a12   c01b     MOVFF     0x1b,0x7da                                                                                      
004a14   f7da                                                                                                               
004a16   c01c     MOVFF     0x1c,0x7db                                                                                      
004a18   f7db                                                                                                               
004a1a   0e27     MOVLW     0x27                                                                                            
004a1c   0107     MOVLB     0x7                                                                                             
004a1e   27da     ADDWF     0xda,0x1,0x1                                                                                    
004a20   0e07     MOVLW     0x7                                                                                             
004a22   23db     ADDWFC    0xdb,0x1,0x1                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004a24   9cf2     BCF       0xf2,0x6,0x0     INTCONbits.PEIE = 0;    //Disable peripheral interrupt                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004a26   c7da     MOVFF     0x7da,0xfe9      dcbPtr->wtbufr = ch_out;                                                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004a28   ffe9                                                                                                               
004a2a   c7db     MOVFF     0x7db,0xfea                                                                                     
004a2c   ffea                                                                                                               
004a2e   0e02     MOVLW     0x2                                                                                             
004a30   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
004a32   0e00     MOVLW     0x0                                                                                             
004a34   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004a36   0efb     MOVLW     0xfb                                                                                            
004a38   cfdb     MOVFF     0xfdb,0xfee                                                                                     
004a3a   ffee                                                                                                               
004a3c   0efc     MOVLW     0xfc                                                                                            
004a3e   cfdb     MOVFF     0xfdb,0xfed                                                                                     
004a40   ffed                                                                                                               
004a42   c7da     MOVFF     0x7da,0xfe9      dcbPtr->wtCount = (unsigned char) len;                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004a44   ffe9                                                                                                               
004a46   c7db     MOVFF     0x7db,0xfea                                                                                     
004a48   ffea                                                                                                               
004a4a   52ee     MOVF      0xee,0x1,0x0                                                                                    
004a4c   0ef9     MOVLW     0xf9                                                                                            
004a4e   cfdb     MOVFF     0xfdb,0xfef                                                                                     
004a50   ffef                                                                                                               
004a52   8cf2     BSF       0xf2,0x6,0x0     INTCONbits.PEIE = 1;    //Enable peripheral interrupt                          C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004a54   0efd     MOVLW     0xfd             CheckTXIntFlag(port);                                                          C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004a56   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004a58   ffe6                                                                                                               
004a5a   0efe     MOVLW     0xfe                                                                                            
004a5c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004a5e   ffe6                                                                                                               
004a60   deb2     RCALL     0x47c6                                                                                          
004a62   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004a64   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004a66   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004a68   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004a6a   ffd9                                                                                                               
004a6c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FUNCTION NAME: Serial_Write                                                    C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * PURPOSE:       Prepares a data buffer to be written to a serial port.          C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * CALLED FROM:   User application layer                                          C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ARGUMENTS:     3                                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     Argument       Type             IO   Description                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     --------       -------------    --   -----------                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     port           int              I    TTL_PORT or PROGRAM_PORT              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     obufr          rom const char   I    output buffer                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     len            sword16          I    number of bytes to transmit           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004a6e   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Serial_Write(int port,rom const char *obufr,sword16 len)           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004a70   ffe6                                                                                                               
004a72   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004a74   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004a76   0efd     MOVLW     0xfd             while (dcb[port].wtCount > 0);  /* wait till done writing */                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004a78   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
004a7a   ffe9                                                                                                               
004a7c   0efe     MOVLW     0xfe                                                                                            
004a7e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
004a80   ffea                                                                                                               
004a82   0e59     MOVLW     0x59                                                                                            
004a84   02ea     MULWF     0xea,0x0                                                                                        
004a86   cff3     MOVFF     0xff3,0xfea                                                                                     
004a88   ffea                                                                                                               
004a8a   02e9     MULWF     0xe9,0x0                                                                                        
004a8c   cff3     MOVFF     0xff3,0xfe9                                                                                     
004a8e   ffe9                                                                                                               
004a90   50f4     MOVF      0xf4,0x0,0x0                                                                                    
004a92   26ea     ADDWF     0xea,0x1,0x0                                                                                    
004a94   0e27     MOVLW     0x27                                                                                            
004a96   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
004a98   0e07     MOVLW     0x7                                                                                             
004a9a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004a9c   52ee     MOVF      0xee,0x1,0x0                                                                                    
004a9e   50ef     MOVF      0xef,0x0,0x0                                                                                    
004aa0   0800     SUBLW     0x0                                                                                             
004aa2   e201     BC        0x4aa6                                                                                          
004aa4   d7e8     BRA       0x4a76                                                                                          
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004aa6   0ef9     MOVLW     0xf9             if (len > MAX_WT_BUFR_SIZE) len = MAX_WT_BUFR_SIZE;                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004aa8   cfdb     MOVFF     0xfdb,0x2b                                                                                      
004aaa   f02b                                                                                                               
004aac   0efa     MOVLW     0xfa                                                                                            
004aae   cfdb     MOVFF     0xfdb,0x2c                                                                                      
004ab0   f02c                                                                                                               
004ab2   342c     RLCF      0x2c,0x0,0x0                                                                                    
004ab4   e204     BC        0x4abe                                                                                          
004ab6   502b     MOVF      0x2b,0x0,0x0                                                                                    
004ab8   0850     SUBLW     0x50                                                                                            
004aba   0e00     MOVLW     0x0                                                                                             
004abc   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
004abe   e207     BC        0x4ace                                                                                          
004ac0   0e50     MOVLW     0x50                                                                                            
004ac2   6ef3     MOVWF     0xf3,0x0                                                                                        
004ac4   0ef9     MOVLW     0xf9                                                                                            
004ac6   cff3     MOVFF     0xff3,0xfdb                                                                                     
004ac8   ffdb                                                                                                               
004aca   0efa     MOVLW     0xfa                                                                                            
004acc   6adb     CLRF      0xdb,0x0                                                                                        
004ace   0efb     MOVLW     0xfb             strcpypgm2ram(rom2ramBufr,(rom char *) obufr);                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004ad0   cfdb     MOVFF     0xfdb,0x2b                                                                                      
004ad2   f02b                                                                                                               
004ad4   0efc     MOVLW     0xfc                                                                                            
004ad6   cfdb     MOVFF     0xfdb,0x2c                                                                                      
004ad8   f02c                                                                                                               
004ada   6a2d     CLRF      0x2d,0x0                                                                                        
004adc   c02b     MOVFF     0x2b,0xfe6                                                                                      
004ade   ffe6                                                                                                               
004ae0   c02c     MOVFF     0x2c,0xfe6                                                                                      
004ae2   ffe6                                                                                                               
004ae4   c02d     MOVFF     0x2d,0xfe6                                                                                      
004ae6   ffe6                                                                                                               
004ae8   0e00     MOVLW     0x0                                                                                             
004aea   6ee6     MOVWF     0xe6,0x0                                                                                        
004aec   0e07     MOVLW     0x7                                                                                             
004aee   6ee6     MOVWF     0xe6,0x0                                                                                        
004af0   eca0     CALL      0x6140,0x0                                                                                      
004af2   f030                                                                                                               
004af4   6ef5     MOVWF     0xf5,0x0                                                                                        
004af6   0e05     MOVLW     0x5                                                                                             
004af8   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004afa   50f5     MOVF      0xf5,0x0,0x0                                                                                    
004afc   0ef9     MOVLW     0xf9             Serial_Write_Bufr(port,(unsigned char *)rom2ramBufr,len);                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004afe   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004b00   ffe6                                                                                                               
004b02   0efa     MOVLW     0xfa                                                                                            
004b04   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004b06   ffe6                                                                                                               
004b08   0e00     MOVLW     0x0                                                                                             
004b0a   6ee6     MOVWF     0xe6,0x0                                                                                        
004b0c   0e07     MOVLW     0x7                                                                                             
004b0e   6ee6     MOVWF     0xe6,0x0                                                                                        
004b10   0efd     MOVLW     0xfd                                                                                            
004b12   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004b14   ffe6                                                                                                               
004b16   0efe     MOVLW     0xfe                                                                                            
004b18   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
004b1a   ffe6                                                                                                               
004b1c   df6b     RCALL     0x49f4                                                                                          
004b1e   6ef5     MOVWF     0xf5,0x0                                                                                        
004b20   0e06     MOVLW     0x6                                                                                             
004b22   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
004b24   50f5     MOVF      0xf5,0x0,0x0                                                                                    
004b26   0e00     MOVLW     0x0              return 0;                                                                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004b28   d000     BRA       0x4b2a                                                                                          
004b2a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004b2c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004b2e   ffd9                                                                                                               
004b30   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FUNCTION NAME: Serial_Write_Char                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * PURPOSE:       Write a byte to a specified serial port.                        C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * CALLED FROM:   User application layer                                          C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ARGUMENTS:     2                                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     Argument       Type             IO   Description                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     --------       -------------    --   -----------                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     port           int              I    TTL_PORT or PROGRAM_PORT              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     ch_out         int              I    output character                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004b32   cfd9     MOVFF     0xfd9,0xfe6    void Serial_Write_Char(int port,int ch_out)                                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004b34   ffe6                                                                                                               
004b36   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004b38   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             static DeviceStatusPtr dcbPtr;                                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004b3a   0e59     MOVLW     0x59             dcbPtr = &dcb[port];                                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004b3c   6e1d     MOVWF     0x1d,0x0                                                                                        
004b3e   6a1e     CLRF      0x1e,0x0                                                                                        
004b40   0efd     MOVLW     0xfd                                                                                            
004b42   cfdb     MOVFF     0xfdb,0x22                                                                                      
004b44   f022                                                                                                               
004b46   0efe     MOVLW     0xfe                                                                                            
004b48   cfdb     MOVFF     0xfdb,0x23                                                                                      
004b4a   f023                                                                                                               
004b4c   ec06     CALL      0x600c,0x0                                                                                      
004b4e   f030                                                                                                               
004b50   c01b     MOVFF     0x1b,0x7dc                                                                                      
004b52   f7dc                                                                                                               
004b54   c01c     MOVFF     0x1c,0x7dd                                                                                      
004b56   f7dd                                                                                                               
004b58   0e27     MOVLW     0x27                                                                                            
004b5a   0107     MOVLB     0x7                                                                                             
004b5c   27dc     ADDWF     0xdc,0x1,0x1                                                                                    
004b5e   0e07     MOVLW     0x7                                                                                             
004b60   23dd     ADDWFC    0xdd,0x1,0x1                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004b62   c7dc     MOVFF     0x7dc,0xfe9      *dcbPtr->myTXREG = (unsigned char) ch_out;  /* Load transmit register with data */ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004b64   ffe9                                                                                                               
004b66   c7dd     MOVFF     0x7dd,0xfea                                                                                     
004b68   ffea                                                                                                               
004b6a   0e57     MOVLW     0x57                                                                                            
004b6c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
004b6e   0e00     MOVLW     0x0                                                                                             
004b70   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004b72   50ee     MOVF      0xee,0x0,0x0                                                                                    
004b74   cfef     MOVFF     0xfef,0xfea                                                                                     
004b76   ffea                                                                                                               
004b78   6ee9     MOVWF     0xe9,0x0                                                                                        
004b7a   0efb     MOVLW     0xfb                                                                                            
004b7c   cfdb     MOVFF     0xfdb,0xfef                                                                                     
004b7e   ffef                                                                                                               
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004b80   50d9     MOVF      0xd9,0x0,0x0     if (port == PROGRAM_PORT)                                                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004b82   0ffd     ADDLW     0xfd                                                                                            
004b84   6ee9     MOVWF     0xe9,0x0                                                                                        
004b86   0eff     MOVLW     0xff                                                                                            
004b88   20da     ADDWFC    0xda,0x0,0x0                                                                                    
004b8a   6eea     MOVWF     0xea,0x0                                                                                        
004b8c   50ee     MOVF      0xee,0x0,0x0                                                                                    
004b8e   10ed     IORWF     0xed,0x0,0x0                                                                                    
004b90   e103     BNZ       0x4b98                                                                                          
004b92   a89e     BTFSS     0x9e,0x4,0x0       while (!TXINTF);                                                             C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004b94   d7fe     BRA       0x4b92                                                                                          
004b96   d002     BRA       0x4b9c           else                                                                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004b98   a8a4     BTFSS     0xa4,0x4,0x0       while (!TXINTF2);                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004b9a   d7fe     BRA       0x4b98                                                                                          
004b9c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004b9e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004ba0   ffd9                                                                                                               
004ba2   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FUNCTION NAME: Serial_Display_Char                                             C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * PURPOSE:       Buffers data until a '\r' is seen or MAX_WT_BUFR_SIZE is reached. C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                Once either condition is met, the transmission is started.      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * CALLED FROM:   User application layer (Write_Byte_To_Uart)                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ARGUMENTS:     1                                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     Argument       Type             IO   Description                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     --------       -------------    --   -----------                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     data           unsigned char    I    data to be buffered                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004ba4   cfd9     MOVFF     0xfd9,0xfe6    void Serial_Display_Char(unsigned char data)                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004ba6   ffe6                                                                                                               
004ba8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004baa   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004bac   0107     MOVLB     0x7              while (dcb[PRINTF_PORT].wtCount > 0);  /* wait till done writing */            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004bae   5128     MOVF      0x28,0x0,0x1                                                                                    
004bb0   0800     SUBLW     0x0                                                                                             
004bb2   e201     BC        0x4bb6                                                                                          
004bb4   d7fb     BRA       0x4bac                                                                                          
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004bb6   517b     MOVF      0x7b,0x0,0x1     dcb[PRINTF_PORT].wtBufr[dcb[PRINTF_PORT].wtBufrIdx++] = data;                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004bb8   2b7b     INCF      0x7b,0x1,0x1                                                                                    
004bba   6aea     CLRF      0xea,0x0                                                                                        
004bbc   0f2b     ADDLW     0x2b                                                                                            
004bbe   6ee9     MOVWF     0xe9,0x0                                                                                        
004bc0   0e07     MOVLW     0x7                                                                                             
004bc2   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
004bc4   0efe     MOVLW     0xfe                                                                                            
004bc6   cfdb     MOVFF     0xfdb,0xfef                                                                                     
004bc8   ffef                                                                                                               
004bca   50db     MOVF      0xdb,0x0,0x0     if ((data == '\r') || (dcb[PRINTF_PORT].wtBufrIdx >= MAX_WT_BUFR_SIZE) )       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004bcc   080d     SUBLW     0xd                                                                                             
004bce   e003     BZ        0x4bd6                                                                                          
004bd0   0e50     MOVLW     0x50                                                                                            
004bd2   5d7b     SUBWF     0x7b,0x0,0x1                                                                                    
004bd4   e30f     BNC       0x4bf4                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004bd6   9cf2     BCF       0xf2,0x6,0x0       INTCONbits.PEIE = 0;    //Disable peripheral interrupt                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004bd8   0e2b     MOVLW     0x2b               dcb[PRINTF_PORT].wtbufr = &dcb[PRINTF_PORT].wtBufr[0];                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004bda   6f29     MOVWF     0x29,0x1                                                                                        
004bdc   0e07     MOVLW     0x7                                                                                             
004bde   6f2a     MOVWF     0x2a,0x1                                                                                        
004be0   c77b     MOVFF     0x77b,0x728        dcb[PRINTF_PORT].wtCount = dcb[PRINTF_PORT].wtBufrIdx;                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004be2   f728                                                                                                               
004be4   8cf2     BSF       0xf2,0x6,0x0       INTCONbits.PEIE = 1;    //Enable peripheral interrupt                        C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004be6   6b7b     CLRF      0x7b,0x1           dcb[PRINTF_PORT].wtBufrIdx = 0;                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004be8   0e00     MOVLW     0x0                CheckTXIntFlag(PRINTF_PORT);                                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004bea   6ee6     MOVWF     0xe6,0x0                                                                                        
004bec   6ae6     CLRF      0xe6,0x0                                                                                        
004bee   ddeb     RCALL     0x47c6                                                                                          
004bf0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004bf2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004bf4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004bf6   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004bf8   ffd9                                                                                                               
004bfa   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * FUNCTION NAME: Breaker_Tripped                                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * PURPOSE:       This routine determines the tripped breaker(s) using the data   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                from the breaker panel.                                         C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * NOTE:          Normally device specific code should reside in another file but C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                for the purpose of simplification we chose to put it here.      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * CALLED FROM:   CheckUartInts                                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           * ARGUMENTS:     1                                                               C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     Argument       Type             IO   Description                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     --------       -------------    --   -----------                           C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *     id             unsigned char    I    breaker id number                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004bfc   cfd9     MOVFF     0xfd9,0xfe6    unsigned char Breaker_Tripped(unsigned char id)                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004bfe   ffe6                                                                                                               
004c00   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004c02   ffd9                                                                                                               
004c04   0e02     MOVLW     0x2                                                                                             
004c06   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             unsigned char bit2check;                                                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             unsigned char retn;                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004c08   0e01     MOVLW     0x1              retn = FALSE;                                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004c0a   6adb     CLRF      0xdb,0x0                                                                                        
004c0c   0e09     MOVLW     0x9              if (id < 9)         //Check breakers 1-8                                       C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004c0e   6ef3     MOVWF     0xf3,0x0                                                                                        
004c10   0efe     MOVLW     0xfe                                                                                            
004c12   cfdb     MOVFF     0xfdb,0xff4                                                                                     
004c14   fff4                                                                                                               
004c16   50f3     MOVF      0xf3,0x0,0x0                                                                                    
004c18   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
004c1a   e213     BC        0x4c42                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004c1c   0efe     MOVLW     0xfe               bit2check = 1 << (id - 1);                                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004c1e   04db     DECF      0xdb,0x0,0x0                                                                                    
004c20   6e2b     MOVWF     0x2b,0x0                                                                                        
004c22   0e01     MOVLW     0x1                                                                                             
004c24   522b     MOVF      0x2b,0x1,0x0                                                                                    
004c26   e004     BZ        0x4c30                                                                                          
004c28   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
004c2a   0bfe     ANDLW     0xfe                                                                                            
004c2c   062b     DECF      0x2b,0x1,0x0                                                                                    
004c2e   e1fc     BNZ       0x4c28                                                                                          
004c30   6edf     MOVWF     0xdf,0x0                                                                                        
004c32   50df     MOVF      0xdf,0x0,0x0       retn = dataIn.data4 & bit2check;                                             C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004c34   0107     MOVLB     0x7                                                                                             
004c36   1525     ANDWF     0x25,0x0,0x1                                                                                    
004c38   6ee7     MOVWF     0xe7,0x0                                                                                        
004c3a   0e01     MOVLW     0x1                                                                                             
004c3c   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
004c3e   ffdb                                                                                                               
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004c40   d04b     BRA       0x4cd8           else if (id < 17)   //Check breakers 9-16                                      C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004c42   0e11     MOVLW     0x11                                                                                            
004c44   6ef3     MOVWF     0xf3,0x0                                                                                        
004c46   0efe     MOVLW     0xfe                                                                                            
004c48   cfdb     MOVFF     0xfdb,0xff4                                                                                     
004c4a   fff4                                                                                                               
004c4c   50f3     MOVF      0xf3,0x0,0x0                                                                                    
004c4e   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
004c50   e214     BC        0x4c7a                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004c52   0efe     MOVLW     0xfe               bit2check = 1 << (id - 9);                                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004c54   50db     MOVF      0xdb,0x0,0x0                                                                                    
004c56   0ff7     ADDLW     0xf7                                                                                            
004c58   6e2b     MOVWF     0x2b,0x0                                                                                        
004c5a   0e01     MOVLW     0x1                                                                                             
004c5c   522b     MOVF      0x2b,0x1,0x0                                                                                    
004c5e   e004     BZ        0x4c68                                                                                          
004c60   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
004c62   0bfe     ANDLW     0xfe                                                                                            
004c64   062b     DECF      0x2b,0x1,0x0                                                                                    
004c66   e1fc     BNZ       0x4c60                                                                                          
004c68   6edf     MOVWF     0xdf,0x0                                                                                        
004c6a   50df     MOVF      0xdf,0x0,0x0       retn = dataIn.data3 & bit2check;                                             C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004c6c   0107     MOVLB     0x7                                                                                             
004c6e   1524     ANDWF     0x24,0x0,0x1                                                                                    
004c70   6ee7     MOVWF     0xe7,0x0                                                                                        
004c72   0e01     MOVLW     0x1                                                                                             
004c74   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
004c76   ffdb                                                                                                               
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004c78   d02f     BRA       0x4cd8           else if (id < 25)   //Check breakers 17-24                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004c7a   0e19     MOVLW     0x19                                                                                            
004c7c   6ef3     MOVWF     0xf3,0x0                                                                                        
004c7e   0efe     MOVLW     0xfe                                                                                            
004c80   cfdb     MOVFF     0xfdb,0xff4                                                                                     
004c82   fff4                                                                                                               
004c84   50f3     MOVF      0xf3,0x0,0x0                                                                                    
004c86   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
004c88   e214     BC        0x4cb2                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004c8a   0efe     MOVLW     0xfe               bit2check = 1 << (id - 17);                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004c8c   50db     MOVF      0xdb,0x0,0x0                                                                                    
004c8e   0fef     ADDLW     0xef                                                                                            
004c90   6e2b     MOVWF     0x2b,0x0                                                                                        
004c92   0e01     MOVLW     0x1                                                                                             
004c94   522b     MOVF      0x2b,0x1,0x0                                                                                    
004c96   e004     BZ        0x4ca0                                                                                          
004c98   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
004c9a   0bfe     ANDLW     0xfe                                                                                            
004c9c   062b     DECF      0x2b,0x1,0x0                                                                                    
004c9e   e1fc     BNZ       0x4c98                                                                                          
004ca0   6edf     MOVWF     0xdf,0x0                                                                                        
004ca2   50df     MOVF      0xdf,0x0,0x0       retn = dataIn.data2 & bit2check;                                             C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004ca4   0107     MOVLB     0x7                                                                                             
004ca6   1523     ANDWF     0x23,0x0,0x1                                                                                    
004ca8   6ee7     MOVWF     0xe7,0x0                                                                                        
004caa   0e01     MOVLW     0x1                                                                                             
004cac   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
004cae   ffdb                                                                                                               
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004cb0   d013     BRA       0x4cd8           else                //Check breakers 25-28                                     C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004cb2   0efe     MOVLW     0xfe               bit2check = 1 << (id - 25);                                                  C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004cb4   50db     MOVF      0xdb,0x0,0x0                                                                                    
004cb6   0fe7     ADDLW     0xe7                                                                                            
004cb8   6e2b     MOVWF     0x2b,0x0                                                                                        
004cba   0e01     MOVLW     0x1                                                                                             
004cbc   522b     MOVF      0x2b,0x1,0x0                                                                                    
004cbe   e004     BZ        0x4cc8                                                                                          
004cc0   46e8     RLNCF     0xe8,0x1,0x0                                                                                    
004cc2   0bfe     ANDLW     0xfe                                                                                            
004cc4   062b     DECF      0x2b,0x1,0x0                                                                                    
004cc6   e1fc     BNZ       0x4cc0                                                                                          
004cc8   6edf     MOVWF     0xdf,0x0                                                                                        
004cca   50df     MOVF      0xdf,0x0,0x0       retn = dataIn.data1Byte.allbits & bit2check;                                 C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004ccc   0107     MOVLB     0x7                                                                                             
004cce   1522     ANDWF     0x22,0x0,0x1                                                                                    
004cd0   6ee7     MOVWF     0xe7,0x0                                                                                        
004cd2   0e01     MOVLW     0x1                                                                                             
004cd4   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
004cd6   ffdb                                                                                                               
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004cd8   50db     MOVF      0xdb,0x0,0x0     return retn;                                                                   C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004cda   d000     BRA       0x4cdc                                                                                          
004cdc   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\FRC2005\user_SerialDrv.c
004cde   ffe1                                                                                                               
004ce0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ce2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004ce4   ffd9                                                                                                               
004ce6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\user_SerialDrv.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_routines.c
                                           * FILE NAME: user_routines.c <FRC VERSION>                                       C:\first\v2.0\src\FRC2005\user_routines.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                           * DESCRIPTION:                                                                   C:\first\v2.0\src\FRC2005\user_routines.c
                                           *  This file contains the default mappings of inputs                             C:\first\v2.0\src\FRC2005\user_routines.c
                                           *  (like switches, joysticks, and buttons) to outputs on the RC.                 C:\first\v2.0\src\FRC2005\user_routines.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                           * USAGE:                                                                         C:\first\v2.0\src\FRC2005\user_routines.c
                                           *  You can either modify this file to fit your needs, or remove it from your     C:\first\v2.0\src\FRC2005\user_routines.c
                                           *  project and replace it with a modified copy.                                  C:\first\v2.0\src\FRC2005\user_routines.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           #ifndef _FRC2004_                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                             #include "user_Serialdrv.h"                                                    C:\first\v2.0\src\FRC2005\user_routines.c
                                             #include <stdio.h>                                                             C:\first\v2.0\src\FRC2005\user_routines.c
                                           #else                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                             #include "printf_lib.h"                                                        C:\first\v2.0\src\FRC2005\user_routines.c
                                           #endif                                                                           C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           #include "ifi_aliases.h"                                                         C:\first\v2.0\src\FRC2005\user_routines.c
                                           #include "ifi_default.h"                                                         C:\first\v2.0\src\FRC2005\user_routines.c
                                           #include "ifi_utilities.h"                                                       C:\first\v2.0\src\FRC2005\user_routines.c
                                           #include "user_routines.h"                                                       C:\first\v2.0\src\FRC2005\user_routines.c
                                           #include "NCSSM/interrupts.h"                                                    C:\first\v2.0\src\FRC2005\user_routines.c
                                           #include "NCSSM/speedometer.h"                                                   C:\first\v2.0\src\FRC2005\user_routines.c
                                           #include "NCSSM/wheels.h"                                                        C:\first\v2.0\src\FRC2005\user_routines.c
                                           #include "NCSSM/arm.h"                                                           C:\first\v2.0\src\FRC2005\user_routines.c
                                           #include "NCSSM/armOutput.h"                                                     C:\first\v2.0\src\FRC2005\user_routines.c
                                           #include "NCSSM/aut1.h"                                                          C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           #define MID_COUNTER_VALUE 50                                                     C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           // analog values corresponding to each position on the aut mode selector         C:\first\v2.0\src\FRC2005\user_routines.c
                                           #define AMODE1 102                                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                           #define AMODE2 308                                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                           #define AMODE3 512                                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                           #define AMODE4 716                                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                           #define AMODE5 923                                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           static unsigned int midCounter = MID_COUNTER_VALUE;                              C:\first\v2.0\src\FRC2005\user_routines.c
                                           user_struct ur_data;                                                             C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           void SetupSystem( void ) {                                                       C:\first\v2.0\src\FRC2005\user_routines.c
004022   0ef0     MOVLW     0xf0             Set_Number_of_Analog_Channels(SIXTEEN_ANALOG);    /* DO NOT CHANGE! */         C:\first\v2.0\src\FRC2005\user_routines.c
004024   6ee6     MOVWF     0xe6,0x0                                                                                        
004026   ec5f     CALL      0x5cbe,0x0                                                                                      
004028   f02e                                                                                                               
00402a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           /* FIRST: Set up the I/O pins you want to use as digital INPUTS. */              C:\first\v2.0\src\FRC2005\user_routines.c
00402c   8a93     BSF       0x93,0x5,0x0     digital_io_01 = digital_io_02 = digital_io_03 = digital_io_04 = INPUT;         C:\first\v2.0\src\FRC2005\user_routines.c
00402e   8893     BSF       0x93,0x4,0x0                                                                                    
004030   8693     BSF       0x93,0x3,0x0                                                                                    
004032   8493     BSF       0x93,0x2,0x0                                                                                    
004034   8299     BSF       0x99,0x1,0x0     digital_io_05 = digital_io_06 = digital_io_07 = digital_io_08 = INPUT;         C:\first\v2.0\src\FRC2005\user_routines.c
004036   8099     BSF       0x99,0x0,0x0                                                                                    
004038   8e93     BSF       0x93,0x7,0x0                                                                                    
00403a   8c93     BSF       0x93,0x6,0x0                                                                                    
00403c   849a     BSF       0x9a,0x2,0x0     digital_io_09 = digital_io_10 = digital_io_11 = digital_io_12 = INPUT;         C:\first\v2.0\src\FRC2005\user_routines.c
00403e   829a     BSF       0x9a,0x1,0x0                                                                                    
004040   8699     BSF       0x99,0x3,0x0                                                                                    
004042   8499     BSF       0x99,0x2,0x0                                                                                    
004044   8a9a     BSF       0x9a,0x5,0x0     digital_io_13 = digital_io_14 = digital_io_15 = digital_io_16 = INPUT;         C:\first\v2.0\src\FRC2005\user_routines.c
004046   889a     BSF       0x9a,0x4,0x0                                                                                    
004048   8094     BSF       0x94,0x0,0x0                                                                                    
00404a   869a     BSF       0x9a,0x3,0x0                                                                                    
00404c   8e9a     BSF       0x9a,0x7,0x0     digital_io_18 = INPUT;  /* Used for pneumatic pressure switch. */              C:\first\v2.0\src\FRC2005\user_routines.c
                                               /*                                                                           C:\first\v2.0\src\FRC2005\user_routines.c
                                                Note: digital_io_01 = digital_io_02 = ... digital_io_04 = INPUT;            C:\first\v2.0\src\FRC2005\user_routines.c
                                                      is the same as the following:                                         C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                                      digital_io_01 = INPUT;                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                                      digital_io_02 = INPUT;                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                                      ...                                                                   C:\first\v2.0\src\FRC2005\user_routines.c
                                                      digital_io_04 = INPUT;                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                               */                                                                           C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           /* SECOND: Set up the I/O pins you want to use as digital OUTPUTS. */            C:\first\v2.0\src\FRC2005\user_routines.c
00404e   9c9a     BCF       0x9a,0x6,0x0     digital_io_17 = OUTPUT;    /* Example - Not used in Default Code. */           C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           /* THIRD: Initialize the values on the digital outputs. */                       C:\first\v2.0\src\FRC2005\user_routines.c
004050   9c91     BCF       0x91,0x6,0x0     rc_dig_out17 = 0;                                                              C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           /* FOURTH: Set your initial PWM values.  Neutral is 127. */                      C:\first\v2.0\src\FRC2005\user_routines.c
004052   0102     MOVLB     0x2              pwm01 = pwm02 = pwm03 = pwm04 = pwm05 = pwm06 = pwm07 = pwm08 = 127;           C:\first\v2.0\src\FRC2005\user_routines.c
004054   0e7f     MOVLW     0x7f                                                                                            
004056   6f4d     MOVWF     0x4d,0x1                                                                                        
004058   c24d     MOVFF     0x24d,0x24c                                                                                     
00405a   f24c                                                                                                               
00405c   c24d     MOVFF     0x24d,0x24b                                                                                     
00405e   f24b                                                                                                               
004060   c24d     MOVFF     0x24d,0x24a                                                                                     
004062   f24a                                                                                                               
004064   c24d     MOVFF     0x24d,0x249                                                                                     
004066   f249                                                                                                               
004068   c24d     MOVFF     0x24d,0x248                                                                                     
00406a   f248                                                                                                               
00406c   c24d     MOVFF     0x24d,0x247                                                                                     
00406e   f247                                                                                                               
004070   c24d     MOVFF     0x24d,0x246                                                                                     
004072   f246                                                                                                               
004074   6f55     MOVWF     0x55,0x1         pwm09 = pwm10 = pwm11 = pwm12 = pwm13 = pwm14 = pwm15 = pwm16 = 127;           C:\first\v2.0\src\FRC2005\user_routines.c
004076   c255     MOVFF     0x255,0x254                                                                                     
004078   f254                                                                                                               
00407a   c255     MOVFF     0x255,0x253                                                                                     
00407c   f253                                                                                                               
00407e   c255     MOVFF     0x255,0x252                                                                                     
004080   f252                                                                                                               
004082   c255     MOVFF     0x255,0x251                                                                                     
004084   f251                                                                                                               
004086   c255     MOVFF     0x255,0x250                                                                                     
004088   f250                                                                                                               
00408a   c255     MOVFF     0x255,0x24f                                                                                     
00408c   f24f                                                                                                               
00408e   c255     MOVFF     0x255,0x24e                                                                                     
004090   f24e                                                                                                               
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           /* FIFTH: Set your PWM output types for PWM OUTPUTS 13-16.                       C:\first\v2.0\src\FRC2005\user_routines.c
                                             /*   Choose from these parameters for PWM 13-16 respectively:               */ C:\first\v2.0\src\FRC2005\user_routines.c
                                             /*     IFI_PWM  - Standard IFI PWM output generated with Generate_Pwms(...) */ C:\first\v2.0\src\FRC2005\user_routines.c
                                             /*     USER_CCP - User can use PWM pin as digital I/O or CCP pin.           */ C:\first\v2.0\src\FRC2005\user_routines.c
004092   0e00     MOVLW     0x0              Setup_PWM_Output_Type(IFI_PWM,IFI_PWM,IFI_PWM,IFI_PWM);                        C:\first\v2.0\src\FRC2005\user_routines.c
004094   6ee6     MOVWF     0xe6,0x0                                                                                        
004096   6ae6     CLRF      0xe6,0x0                                                                                        
004098   6ee6     MOVWF     0xe6,0x0                                                                                        
00409a   6ae6     CLRF      0xe6,0x0                                                                                        
00409c   6ee6     MOVWF     0xe6,0x0                                                                                        
00409e   6ae6     CLRF      0xe6,0x0                                                                                        
0040a0   6ee6     MOVWF     0xe6,0x0                                                                                        
0040a2   6ae6     CLRF      0xe6,0x0                                                                                        
0040a4   ec45     CALL      0x348a,0x0                                                                                      
0040a6   f01a                                                                                                               
0040a8   6ef5     MOVWF     0xf5,0x0                                                                                        
0040aa   0e08     MOVLW     0x8                                                                                             
0040ac   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0040ae   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                             /*                                                                             C:\first\v2.0\src\FRC2005\user_routines.c
                                                Example: The following would generate a 40KHz PWM with a 50% duty cycle on the CCP2 pin: C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                                    CCP2CON = 0x3C;                                                         C:\first\v2.0\src\FRC2005\user_routines.c
                                                    PR2 = 0xF9;                                                             C:\first\v2.0\src\FRC2005\user_routines.c
                                                    CCPR2L = 0x7F;                                                          C:\first\v2.0\src\FRC2005\user_routines.c
                                                    T2CON = 0;                                                              C:\first\v2.0\src\FRC2005\user_routines.c
                                                    T2CONbits.TMR2ON = 1;                                                   C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                                    Setup_PWM_Output_Type(USER_CCP,IFI_PWM,IFI_PWM,IFI_PWM);                C:\first\v2.0\src\FRC2005\user_routines.c
                                             */                                                                             C:\first\v2.0\src\FRC2005\user_routines.c
0040b0   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           void SetupSystemModules( void ) {                                                C:\first\v2.0\src\FRC2005\user_routines.c
0040b2   0e08     MOVLW     0x8            	printf("initializing system modules...\r");                                     C:\first\v2.0\src\FRC2005\user_routines.c
0040b4   6e2b     MOVWF     0x2b,0x0                                                                                        
0040b6   0e56     MOVLW     0x56                                                                                            
0040b8   6e2c     MOVWF     0x2c,0x0                                                                                        
0040ba   6a2d     CLRF      0x2d,0x0                                                                                        
0040bc   c02b     MOVFF     0x2b,0xfe6                                                                                      
0040be   ffe6                                                                                                               
0040c0   c02c     MOVFF     0x2c,0xfe6                                                                                      
0040c2   ffe6                                                                                                               
0040c4   c02d     MOVFF     0x2d,0xfe6                                                                                      
0040c6   ffe6                                                                                                               
0040c8   ecec     CALL      0x61d8,0x0                                                                                      
0040ca   f030                                                                                                               
0040cc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0040ce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0040d0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
0040d2   ec82     CALL      0x5f04,0x0     	interrupts_moduleInitialize();                                                  C:\first\v2.0\src\FRC2005\user_routines.c
0040d4   f02f                                                                                                               
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
0040d6   0eeb     MOVLW     0xeb           	printf("system modules initialized.\r");                                        C:\first\v2.0\src\FRC2005\user_routines.c
0040d8   6e2b     MOVWF     0x2b,0x0                                                                                        
0040da   0e55     MOVLW     0x55                                                                                            
0040dc   6e2c     MOVWF     0x2c,0x0                                                                                        
0040de   6a2d     CLRF      0x2d,0x0                                                                                        
0040e0   c02b     MOVFF     0x2b,0xfe6                                                                                      
0040e2   ffe6                                                                                                               
0040e4   c02c     MOVFF     0x2c,0xfe6                                                                                      
0040e6   ffe6                                                                                                               
0040e8   c02d     MOVFF     0x2d,0xfe6                                                                                      
0040ea   ffe6                                                                                                               
0040ec   ecec     CALL      0x61d8,0x0                                                                                      
0040ee   f030                                                                                                               
0040f0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0040f2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0040f4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0040f6   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           void SetupDriverModules( void ) {                                                C:\first\v2.0\src\FRC2005\user_routines.c
0040f8   0ecb     MOVLW     0xcb           	printf("initializing driver modules...\r");                                     C:\first\v2.0\src\FRC2005\user_routines.c
0040fa   6e2b     MOVWF     0x2b,0x0                                                                                        
0040fc   0e55     MOVLW     0x55                                                                                            
0040fe   6e2c     MOVWF     0x2c,0x0                                                                                        
004100   6a2d     CLRF      0x2d,0x0                                                                                        
004102   c02b     MOVFF     0x2b,0xfe6                                                                                      
004104   ffe6                                                                                                               
004106   c02c     MOVFF     0x2c,0xfe6                                                                                      
004108   ffe6                                                                                                               
00410a   c02d     MOVFF     0x2d,0xfe6                                                                                      
00410c   ffe6                                                                                                               
00410e   ecec     CALL      0x61d8,0x0                                                                                      
004110   f030                                                                                                               
004112   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004114   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004116   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           #ifndef _USE_AVGSPEED                                                            C:\first\v2.0\src\FRC2005\user_routines.c
004118   ecf4     CALL      0x2be8,0x0     	speedometer_moduleInitialize();                                                 C:\first\v2.0\src\FRC2005\user_routines.c
00411a   f015                                                                                                               
                                           #else                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           	avgSpeed_moduleInitialize();                                                    C:\first\v2.0\src\FRC2005\user_routines.c
                                           #endif                                                                           C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
00411c   ec94     CALL      0x1d28,0x0     	wheels_moduleInitialize();                                                      C:\first\v2.0\src\FRC2005\user_routines.c
00411e   f00e                                                                                                               
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
004120   ec07     CALL      0x400e,0x0     	arm_moduleInitialize();                                                         C:\first\v2.0\src\FRC2005\user_routines.c
004122   f020                                                                                                               
004124   ec45     CALL      0x588a,0x0     	armOutput_moduleInitialize();                                                   C:\first\v2.0\src\FRC2005\user_routines.c
004126   f02c                                                                                                               
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
004128   0eae     MOVLW     0xae           	printf("driver modules initialized.\r");                                        C:\first\v2.0\src\FRC2005\user_routines.c
00412a   6e2b     MOVWF     0x2b,0x0                                                                                        
00412c   0e55     MOVLW     0x55                                                                                            
00412e   6e2c     MOVWF     0x2c,0x0                                                                                        
004130   6a2d     CLRF      0x2d,0x0                                                                                        
004132   c02b     MOVFF     0x2b,0xfe6                                                                                      
004134   ffe6                                                                                                               
004136   c02c     MOVFF     0x2c,0xfe6                                                                                      
004138   ffe6                                                                                                               
00413a   c02d     MOVFF     0x2d,0xfe6                                                                                      
00413c   ffe6                                                                                                               
00413e   ecec     CALL      0x61d8,0x0                                                                                      
004140   f030                                                                                                               
004142   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004144   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004146   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004148   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           void SetupControllerModules( void ) {                                            C:\first\v2.0\src\FRC2005\user_routines.c
00414a   0e8c     MOVLW     0x8c           	printf("setting up controller modules...\r");                                   C:\first\v2.0\src\FRC2005\user_routines.c
00414c   6e2b     MOVWF     0x2b,0x0                                                                                        
00414e   0e55     MOVLW     0x55                                                                                            
004150   6e2c     MOVWF     0x2c,0x0                                                                                        
004152   6a2d     CLRF      0x2d,0x0                                                                                        
004154   c02b     MOVFF     0x2b,0xfe6                                                                                      
004156   ffe6                                                                                                               
004158   c02c     MOVFF     0x2c,0xfe6                                                                                      
00415a   ffe6                                                                                                               
00415c   c02d     MOVFF     0x2d,0xfe6                                                                                      
00415e   ffe6                                                                                                               
004160   ecec     CALL      0x61d8,0x0                                                                                      
004162   f030                                                                                                               
004164   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004166   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004168   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
00416a   0e6b     MOVLW     0x6b           	printf("controller modules initialized.\r");                                    C:\first\v2.0\src\FRC2005\user_routines.c
00416c   6e2b     MOVWF     0x2b,0x0                                                                                        
00416e   0e55     MOVLW     0x55                                                                                            
004170   6e2c     MOVWF     0x2c,0x0                                                                                        
004172   6a2d     CLRF      0x2d,0x0                                                                                        
004174   c02b     MOVFF     0x2b,0xfe6                                                                                      
004176   ffe6                                                                                                               
004178   c02c     MOVFF     0x2c,0xfe6                                                                                      
00417a   ffe6                                                                                                               
00417c   c02d     MOVFF     0x2d,0xfe6                                                                                      
00417e   ffe6                                                                                                               
004180   ecec     CALL      0x61d8,0x0                                                                                      
004182   f030                                                                                                               
004184   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004186   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004188   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00418a   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           void EnableSystem( void ) {                                                      C:\first\v2.0\src\FRC2005\user_routines.c
00418c   0e57     MOVLW     0x57           	printf("enabling system...\r");                                                 C:\first\v2.0\src\FRC2005\user_routines.c
00418e   6e2b     MOVWF     0x2b,0x0                                                                                        
004190   0e55     MOVLW     0x55                                                                                            
004192   6e2c     MOVWF     0x2c,0x0                                                                                        
004194   6a2d     CLRF      0x2d,0x0                                                                                        
004196   c02b     MOVFF     0x2b,0xfe6                                                                                      
004198   ffe6                                                                                                               
00419a   c02c     MOVFF     0x2c,0xfe6                                                                                      
00419c   ffe6                                                                                                               
00419e   c02d     MOVFF     0x2d,0xfe6                                                                                      
0041a0   ffe6                                                                                                               
0041a2   ecec     CALL      0x61d8,0x0                                                                                      
0041a4   f030                                                                                                               
0041a6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0041a8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0041aa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
0041ac   eca6     CALL      0x5f4c,0x0     	interrupts_enable();                                                            C:\first\v2.0\src\FRC2005\user_routines.c
0041ae   f02f                                                                                                               
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
0041b0   0e46     MOVLW     0x46           	printf("system enabled.\r");                                                    C:\first\v2.0\src\FRC2005\user_routines.c
0041b2   6e2b     MOVWF     0x2b,0x0                                                                                        
0041b4   0e55     MOVLW     0x55                                                                                            
0041b6   6e2c     MOVWF     0x2c,0x0                                                                                        
0041b8   6a2d     CLRF      0x2d,0x0                                                                                        
0041ba   c02b     MOVFF     0x2b,0xfe6                                                                                      
0041bc   ffe6                                                                                                               
0041be   c02c     MOVFF     0x2c,0xfe6                                                                                      
0041c0   ffe6                                                                                                               
0041c2   c02d     MOVFF     0x2d,0xfe6                                                                                      
0041c4   ffe6                                                                                                               
0041c6   ecec     CALL      0x61d8,0x0                                                                                      
0041c8   f030                                                                                                               
0041ca   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0041cc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0041ce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0041d0   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_routines.c
                                           * FUNCTION NAME: User_Initialization                                             C:\first\v2.0\src\FRC2005\user_routines.c
                                           * PURPOSE:       This routine is called first (and only once) in the Main function.   C:\first\v2.0\src\FRC2005\user_routines.c
                                           *                You may modify and add to this function.                        C:\first\v2.0\src\FRC2005\user_routines.c
                                           * CALLED FROM:   main.c                                                          C:\first\v2.0\src\FRC2005\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_routines.c
                                           void User_Initialization (void)                                                  C:\first\v2.0\src\FRC2005\user_routines.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                           	/*** must call SetupSystem first ***/                                           C:\first\v2.0\src\FRC2005\user_routines.c
0041d2   df27     RCALL     0x4022         	SetupSystem();                                                                  C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
0041d4   df6e     RCALL     0x40b2         	SetupSystemModules();                                                           C:\first\v2.0\src\FRC2005\user_routines.c
0041d6   df90     RCALL     0x40f8         	SetupDriverModules();                                                           C:\first\v2.0\src\FRC2005\user_routines.c
0041d8   dfb8     RCALL     0x414a         	SetupControllerModules();                                                       C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           	/* Add any other initialization code here. */                                   C:\first\v2.0\src\FRC2005\user_routines.c
                                           	                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
0041da   dfd8     RCALL     0x418c         	EnableSystem();                                                                 C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           	/* Add any other initialization code below here. */                             C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           	// initial gear is low                                                          C:\first\v2.0\src\FRC2005\user_routines.c
0041dc   908d     BCF       0x8d,0x0,0x0   	relay1_fwd = 0;                                                                 C:\first\v2.0\src\FRC2005\user_routines.c
0041de   828d     BSF       0x8d,0x1,0x0   	relay2_fwd = 1;                                                                 C:\first\v2.0\src\FRC2005\user_routines.c
0041e0   908c     BCF       0x8c,0x0,0x0   	relay1_rev = 0;                                                                 C:\first\v2.0\src\FRC2005\user_routines.c
0041e2   928c     BCF       0x8c,0x1,0x0   	relay2_rev = 0;                                                                 C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           	// initialize ur_data                                                           C:\first\v2.0\src\FRC2005\user_routines.c
                                           	// set aut_enable = 0 to disable all autonomous code                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           	// set simulate_aut = 1 to simulate autonomous during normal mode operation     C:\first\v2.0\src\FRC2005\user_routines.c
0041e4   0101     MOVLB     0x1            	ur_data.aut_enable = 0;                                                         C:\first\v2.0\src\FRC2005\user_routines.c
0041e6   91f0     BCF       0xf0,0x0,0x1                                                                                    
0041e8   93f0     BCF       0xf0,0x1,0x1   	ur_data.simulate_aut = 0;                                                       C:\first\v2.0\src\FRC2005\user_routines.c
0041ea   85f0     BSF       0xf0,0x2,0x1   	ur_data.aut_reset = 1;                                                          C:\first\v2.0\src\FRC2005\user_routines.c
0041ec   0e58     MOVLW     0x58           	ur_data.finger_preset_timer = 88;                                               C:\first\v2.0\src\FRC2005\user_routines.c
0041ee   6ff1     MOVWF     0xf1,0x1                                                                                        
0041f0   6bf2     CLRF      0xf2,0x1                                                                                        
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           	/* Add any other initialization code above here. */                             C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                             /*** required system setup code... place no user code below this line ***/     C:\first\v2.0\src\FRC2005\user_routines.c
0041f2   0e42     MOVLW     0x42             Putdata(&txdata);             /* DO NOT CHANGE! */                             C:\first\v2.0\src\FRC2005\user_routines.c
0041f4   6ee6     MOVWF     0xe6,0x0                                                                                        
0041f6   0e02     MOVLW     0x2                                                                                             
0041f8   6ee6     MOVWF     0xe6,0x0                                                                                        
0041fa   ec02     CALL      0x3404,0x0                                                                                      
0041fc   f01a                                                                                                               
0041fe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004200   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           #ifndef _FRC2004_                                                                C:\first\v2.0\src\FRC2005\user_routines.c
004202   ecf8     CALL      0x49f0,0x0       Serial_Driver_Initialize();                                                    C:\first\v2.0\src\FRC2005\user_routines.c
004204   f024                                                                                                               
                                           #endif                                                                           C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
004206   0e1a     MOVLW     0x1a             printf("\r\rIFI 2005 User Processor Initialized ...\r\r");  /* Optional - Print initialization message. */ C:\first\v2.0\src\FRC2005\user_routines.c
004208   6e2b     MOVWF     0x2b,0x0                                                                                        
00420a   0e55     MOVLW     0x55                                                                                            
00420c   6e2c     MOVWF     0x2c,0x0                                                                                        
00420e   6a2d     CLRF      0x2d,0x0                                                                                        
004210   c02b     MOVFF     0x2b,0xfe6                                                                                      
004212   ffe6                                                                                                               
004214   c02c     MOVFF     0x2c,0xfe6                                                                                      
004216   ffe6                                                                                                               
004218   c02d     MOVFF     0x2d,0xfe6                                                                                      
00421a   ffe6                                                                                                               
00421c   ecec     CALL      0x61d8,0x0                                                                                      
00421e   f030                                                                                                               
004220   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004222   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004224   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004226   ef7f     GOTO      0x32fe           User_Proc_Is_Ready();         /* DO NOT CHANGE! - last line of User_Initialization */ C:\first\v2.0\src\FRC2005\user_routines.c
004228   f019                                                                                                               
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_routines.c
                                           * FUNCTION NAME: Process_Data_From_Master_uP                                     C:\first\v2.0\src\FRC2005\user_routines.c
                                           * PURPOSE:       Executes every 26.2ms when it gets new data from the master     C:\first\v2.0\src\FRC2005\user_routines.c
                                           *                microprocessor.                                                 C:\first\v2.0\src\FRC2005\user_routines.c
                                           * CALLED FROM:   main.c                                                          C:\first\v2.0\src\FRC2005\user_routines.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_routines.c
00422a   cfd9     MOVFF     0xfd9,0xfe6    void Process_Data_From_Master_uP(void)                                           C:\first\v2.0\src\FRC2005\user_routines.c
00422c   ffe6                                                                                                               
00422e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004230   ffd9                                                                                                               
004232   0e06     MOVLW     0x6                                                                                             
004234   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                           	static char initialPressure = 0;                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                           	static char autMode = 0;                                                        C:\first\v2.0\src\FRC2005\user_routines.c
                                           	int autModeSelector;                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           	static char state = 0;                                                          C:\first\v2.0\src\FRC2005\user_routines.c
                                           	int sMaxLimitTemp;                                                              C:\first\v2.0\src\FRC2005\user_routines.c
                                           	int sMinLimitTemp;                                                              C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
004236   0e62     MOVLW     0x62           	Getdata(&rxdata);   /* Get fresh data from the master microprocessor. */        C:\first\v2.0\src\FRC2005\user_routines.c
004238   6ee6     MOVWF     0xe6,0x0                                                                                        
00423a   0e02     MOVLW     0x2                                                                                             
00423c   6ee6     MOVWF     0xe6,0x0                                                                                        
00423e   ece9     CALL      0x33d2,0x0                                                                                      
004240   f019                                                                                                               
004242   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004244   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           	/* Add code here that you want to be executed every program loop. */            C:\first\v2.0\src\FRC2005\user_routines.c
                                           	                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
004246   0e87     MOVLW     0x87           	arm_setShoulderSensor( Get_Analog_Value( ADC_CH0 ));                            C:\first\v2.0\src\FRC2005\user_routines.c
004248   6ee6     MOVWF     0xe6,0x0                                                                                        
00424a   ec6a     CALL      0x5cd4,0x0                                                                                      
00424c   f02e                                                                                                               
00424e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004250   cff3     MOVFF     0xff3,0x2b                                                                                      
004252   f02b                                                                                                               
004254   cff4     MOVFF     0xff4,0x2c                                                                                      
004256   f02c                                                                                                               
004258   c02b     MOVFF     0x2b,0xfe6                                                                                      
00425a   ffe6                                                                                                               
00425c   c02c     MOVFF     0x2c,0xfe6                                                                                      
00425e   ffe6                                                                                                               
004260   eca9     CALL      0x3952,0x0                                                                                      
004262   f01c                                                                                                               
004264   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004266   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
004268   0101     MOVLB     0x1            	switch( state ) {                                                               C:\first\v2.0\src\FRC2005\user_routines.c
00426a   51e7     MOVF      0xe7,0x0,0x1                                                                                    
00426c   0a02     XORLW     0x2                                                                                             
00426e   e101     BNZ       0x4272                                                                                          
004270   d0ee     BRA       0x444e                                                                                          
004272   0a03     XORLW     0x3                                                                                             
004274   e020     BZ        0x42b6                                                                                          
004276   0a01     XORLW     0x1                                                                                             
004278   e001     BZ        0x427c                                                                                          
00427a   d16e     BRA       0x4558                                                                                          
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           		case 0:                                                                        C:\first\v2.0\src\FRC2005\user_routines.c
                                           			// reset state.                                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
00427c   ec09     CALL      0x4012,0x0     			arm_reset();                                                                  C:\first\v2.0\src\FRC2005\user_routines.c
00427e   f020                                                                                                               
004280   ec35     CALL      0x586a,0x0     			armOutput_reset();                                                            C:\first\v2.0\src\FRC2005\user_routines.c
004282   f02c                                                                                                               
004284   0e00     MOVLW     0x0            			wheels_setDriveSpeed(0);                                                      C:\first\v2.0\src\FRC2005\user_routines.c
004286   6ee6     MOVWF     0xe6,0x0                                                                                        
004288   6ae6     CLRF      0xe6,0x0                                                                                        
00428a   ecc5     CALL      0x138a,0x0                                                                                      
00428c   f009                                                                                                               
00428e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004290   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004292   0e00     MOVLW     0x0            			wheels_setTurningSpeed(0);                                                    C:\first\v2.0\src\FRC2005\user_routines.c
004294   6ee6     MOVWF     0xe6,0x0                                                                                        
004296   6ae6     CLRF      0xe6,0x0                                                                                        
004298   ecad     CALL      0x155a,0x0                                                                                      
00429a   f00a                                                                                                               
00429c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00429e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
0042a0   0102     MOVLB     0x2            			if( autonomous_mode ) {                                                       C:\first\v2.0\src\FRC2005\user_routines.c
0042a2   ad63     BTFSS     0x63,0x6,0x1                                                                                    
0042a4   d004     BRA       0x42ae                                                                                          
0042a6   0101     MOVLB     0x1            				state = 1;                                                                   C:\first\v2.0\src\FRC2005\user_routines.c
0042a8   0e01     MOVLW     0x1                                                                                             
0042aa   6fe7     MOVWF     0xe7,0x1                                                                                        
0042ac   d003     BRA       0x42b4         			} else {                                                                      C:\first\v2.0\src\FRC2005\user_routines.c
0042ae   0101     MOVLB     0x1            				state = 2;                                                                   C:\first\v2.0\src\FRC2005\user_routines.c
0042b0   0e02     MOVLW     0x2                                                                                             
0042b2   6fe7     MOVWF     0xe7,0x1                                                                                        
                                           			}                                                                             C:\first\v2.0\src\FRC2005\user_routines.c
0042b4   d152     BRA       0x455a         		break;                                                                         C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           		case 1:                                                                        C:\first\v2.0\src\FRC2005\user_routines.c
0042b6   0102     MOVLB     0x2            		if( autonomous_mode ) {                                                        C:\first\v2.0\src\FRC2005\user_routines.c
0042b8   ad63     BTFSS     0x63,0x6,0x1                                                                                    
0042ba   d0c6     BRA       0x4448                                                                                          
                                           				// autonomous state                                                          C:\first\v2.0\src\FRC2005\user_routines.c
0042bc   0101     MOVLB     0x1            			if( ur_data.finger_preset_timer != 0 ) {                                      C:\first\v2.0\src\FRC2005\user_routines.c
0042be   51f1     MOVF      0xf1,0x0,0x1                                                                                    
0042c0   11f2     IORWF     0xf2,0x0,0x1                                                                                    
0042c2   e00a     BZ        0x42d8                                                                                          
                                           				// set the finger.                                                           C:\first\v2.0\src\FRC2005\user_routines.c
                                           	                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
0042c4   0101     MOVLB     0x1            				if( initialPressure ) {                                                      C:\first\v2.0\src\FRC2005\user_routines.c
0042c6   51e5     MOVF      0xe5,0x0,0x1                                                                                    
0042c8   e006     BZ        0x42d6                                                                                          
0042ca   0101     MOVLB     0x1            					--(ur_data.finger_preset_timer);                                            C:\first\v2.0\src\FRC2005\user_routines.c
0042cc   07f1     DECF      0xf1,0x1,0x1                                                                                    
0042ce   0e00     MOVLW     0x0                                                                                             
0042d0   5bf2     SUBWFB    0xf2,0x1,0x1                                                                                    
0042d2   ec25     CALL      0x584a,0x0     					armOutput_moveFingerDown();                                                 C:\first\v2.0\src\FRC2005\user_routines.c
0042d4   f02c                                                                                                               
                                           				}                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
0042d6   d0b7     BRA       0x4446         			} else {                                                                      C:\first\v2.0\src\FRC2005\user_routines.c
0042d8   ec2d     CALL      0x585a,0x0     				armOutput_stopFinger();                                                      C:\first\v2.0\src\FRC2005\user_routines.c
0042da   f02c                                                                                                               
0042dc   0101     MOVLB     0x1            				if( autMode == 0 ) {                                                         C:\first\v2.0\src\FRC2005\user_routines.c
0042de   51e6     MOVF      0xe6,0x0,0x1                                                                                    
0042e0   e001     BZ        0x42e4                                                                                          
0042e2   d09e     BRA       0x4420                                                                                          
0042e4   0e8f     MOVLW     0x8f           					autModeSelector = Get_Analog_Value( ADC_CH1 );                              C:\first\v2.0\src\FRC2005\user_routines.c
0042e6   6ee6     MOVWF     0xe6,0x0                                                                                        
0042e8   ec6a     CALL      0x5cd4,0x0                                                                                      
0042ea   f02e                                                                                                               
0042ec   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0042ee   cff3     MOVFF     0xff3,0xfde                                                                                     
0042f0   ffde                                                                                                               
0042f2   cff4     MOVFF     0xff4,0xfdd                                                                                     
0042f4   ffdd                                                                                                               
0042f6   cfde     MOVFF     0xfde,0x2b     					if( autModeSelector <= AMODE1 ) {                                           C:\first\v2.0\src\FRC2005\user_routines.c
0042f8   f02b                                                                                                               
0042fa   cfdd     MOVFF     0xfdd,0x2c                                                                                      
0042fc   f02c                                                                                                               
0042fe   342c     RLCF      0x2c,0x0,0x0                                                                                    
004300   e204     BC        0x430a                                                                                          
004302   502b     MOVF      0x2b,0x0,0x0                                                                                    
004304   0866     SUBLW     0x66                                                                                            
004306   0e00     MOVLW     0x0                                                                                             
004308   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
00430a   e304     BNC       0x4314                                                                                          
00430c   0101     MOVLB     0x1            						autMode = 1;                                                               C:\first\v2.0\src\FRC2005\user_routines.c
00430e   0e01     MOVLW     0x1                                                                                             
004310   6fe6     MOVWF     0xe6,0x1                                                                                        
004312   d06b     BRA       0x43ea         					} else if( autModeSelector > AMODE1 && autModeSelector <= AMODE2 ) {        C:\first\v2.0\src\FRC2005\user_routines.c
004314   cfde     MOVFF     0xfde,0x2b                                                                                      
004316   f02b                                                                                                               
004318   cfdd     MOVFF     0xfdd,0x2c                                                                                      
00431a   f02c                                                                                                               
00431c   342c     RLCF      0x2c,0x0,0x0                                                                                    
00431e   e204     BC        0x4328                                                                                          
004320   502b     MOVF      0x2b,0x0,0x0                                                                                    
004322   0866     SUBLW     0x66                                                                                            
004324   0e00     MOVLW     0x0                                                                                             
004326   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
004328   e20f     BC        0x4348                                                                                          
00432a   cfde     MOVFF     0xfde,0x2d                                                                                      
00432c   f02d                                                                                                               
00432e   cfdd     MOVFF     0xfdd,0x2e                                                                                      
004330   f02e                                                                                                               
004332   342e     RLCF      0x2e,0x0,0x0                                                                                    
004334   e204     BC        0x433e                                                                                          
004336   502d     MOVF      0x2d,0x0,0x0                                                                                    
004338   0834     SUBLW     0x34                                                                                            
00433a   0e01     MOVLW     0x1                                                                                             
00433c   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
00433e   e304     BNC       0x4348                                                                                          
004340   0101     MOVLB     0x1            						autMode = 2;                                                               C:\first\v2.0\src\FRC2005\user_routines.c
004342   0e02     MOVLW     0x2                                                                                             
004344   6fe6     MOVWF     0xe6,0x1                                                                                        
004346   d051     BRA       0x43ea         					} else if( autModeSelector > AMODE2 && autModeSelector <= AMODE3 ) {        C:\first\v2.0\src\FRC2005\user_routines.c
004348   cfde     MOVFF     0xfde,0x2b                                                                                      
00434a   f02b                                                                                                               
00434c   cfdd     MOVFF     0xfdd,0x2c                                                                                      
00434e   f02c                                                                                                               
004350   342c     RLCF      0x2c,0x0,0x0                                                                                    
004352   e204     BC        0x435c                                                                                          
004354   502b     MOVF      0x2b,0x0,0x0                                                                                    
004356   0834     SUBLW     0x34                                                                                            
004358   0e01     MOVLW     0x1                                                                                             
00435a   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
00435c   e20f     BC        0x437c                                                                                          
00435e   cfde     MOVFF     0xfde,0x2d                                                                                      
004360   f02d                                                                                                               
004362   cfdd     MOVFF     0xfdd,0x2e                                                                                      
004364   f02e                                                                                                               
004366   342e     RLCF      0x2e,0x0,0x0                                                                                    
004368   e204     BC        0x4372                                                                                          
00436a   502d     MOVF      0x2d,0x0,0x0                                                                                    
00436c   0800     SUBLW     0x0                                                                                             
00436e   0e02     MOVLW     0x2                                                                                             
004370   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
004372   e304     BNC       0x437c                                                                                          
004374   0101     MOVLB     0x1            						autMode = 3;                                                               C:\first\v2.0\src\FRC2005\user_routines.c
004376   0e03     MOVLW     0x3                                                                                             
004378   6fe6     MOVWF     0xe6,0x1                                                                                        
00437a   d037     BRA       0x43ea         					} else if( autModeSelector > AMODE3 && autModeSelector <= AMODE4 ) {        C:\first\v2.0\src\FRC2005\user_routines.c
00437c   cfde     MOVFF     0xfde,0x2b                                                                                      
00437e   f02b                                                                                                               
004380   cfdd     MOVFF     0xfdd,0x2c                                                                                      
004382   f02c                                                                                                               
004384   342c     RLCF      0x2c,0x0,0x0                                                                                    
004386   e204     BC        0x4390                                                                                          
004388   502b     MOVF      0x2b,0x0,0x0                                                                                    
00438a   0800     SUBLW     0x0                                                                                             
00438c   0e02     MOVLW     0x2                                                                                             
00438e   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
004390   e20f     BC        0x43b0                                                                                          
004392   cfde     MOVFF     0xfde,0x2d                                                                                      
004394   f02d                                                                                                               
004396   cfdd     MOVFF     0xfdd,0x2e                                                                                      
004398   f02e                                                                                                               
00439a   342e     RLCF      0x2e,0x0,0x0                                                                                    
00439c   e204     BC        0x43a6                                                                                          
00439e   502d     MOVF      0x2d,0x0,0x0                                                                                    
0043a0   08cc     SUBLW     0xcc                                                                                            
0043a2   0e02     MOVLW     0x2                                                                                             
0043a4   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
0043a6   e304     BNC       0x43b0                                                                                          
0043a8   0101     MOVLB     0x1            						autMode = 4;                                                               C:\first\v2.0\src\FRC2005\user_routines.c
0043aa   0e04     MOVLW     0x4                                                                                             
0043ac   6fe6     MOVWF     0xe6,0x1                                                                                        
0043ae   d01d     BRA       0x43ea         					} else if( autModeSelector > AMODE4 && autModeSelector <= AMODE5 ) {        C:\first\v2.0\src\FRC2005\user_routines.c
0043b0   cfde     MOVFF     0xfde,0x2b                                                                                      
0043b2   f02b                                                                                                               
0043b4   cfdd     MOVFF     0xfdd,0x2c                                                                                      
0043b6   f02c                                                                                                               
0043b8   342c     RLCF      0x2c,0x0,0x0                                                                                    
0043ba   e204     BC        0x43c4                                                                                          
0043bc   502b     MOVF      0x2b,0x0,0x0                                                                                    
0043be   08cc     SUBLW     0xcc                                                                                            
0043c0   0e02     MOVLW     0x2                                                                                             
0043c2   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
0043c4   e20f     BC        0x43e4                                                                                          
0043c6   cfde     MOVFF     0xfde,0x2d                                                                                      
0043c8   f02d                                                                                                               
0043ca   cfdd     MOVFF     0xfdd,0x2e                                                                                      
0043cc   f02e                                                                                                               
0043ce   342e     RLCF      0x2e,0x0,0x0                                                                                    
0043d0   e204     BC        0x43da                                                                                          
0043d2   502d     MOVF      0x2d,0x0,0x0                                                                                    
0043d4   089b     SUBLW     0x9b                                                                                            
0043d6   0e03     MOVLW     0x3                                                                                             
0043d8   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
0043da   e304     BNC       0x43e4                                                                                          
0043dc   0101     MOVLB     0x1            						autMode = 5;                                                               C:\first\v2.0\src\FRC2005\user_routines.c
0043de   0e05     MOVLW     0x5                                                                                             
0043e0   6fe6     MOVWF     0xe6,0x1                                                                                        
0043e2   d003     BRA       0x43ea         					} else {                                                                    C:\first\v2.0\src\FRC2005\user_routines.c
0043e4   0101     MOVLB     0x1            						autMode = 6;                                                               C:\first\v2.0\src\FRC2005\user_routines.c
0043e6   0e06     MOVLW     0x6                                                                                             
0043e8   6fe6     MOVWF     0xe6,0x1                                                                                        
                                           					}                                                                           C:\first\v2.0\src\FRC2005\user_routines.c
0043ea   c1e6     MOVFF     0x1e6,0x2b     					printf("selected aut mode: %d", autMode);                                   C:\first\v2.0\src\FRC2005\user_routines.c
0043ec   f02b                                                                                                               
0043ee   6a2c     CLRF      0x2c,0x0                                                                                        
0043f0   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
0043f2   682c     SETF      0x2c,0x0                                                                                        
0043f4   c02b     MOVFF     0x2b,0xfe6                                                                                      
0043f6   ffe6                                                                                                               
0043f8   c02c     MOVFF     0x2c,0xfe6                                                                                      
0043fa   ffe6                                                                                                               
0043fc   0e04     MOVLW     0x4                                                                                             
0043fe   6e2d     MOVWF     0x2d,0x0                                                                                        
004400   0e55     MOVLW     0x55                                                                                            
004402   6e2e     MOVWF     0x2e,0x0                                                                                        
004404   6a2f     CLRF      0x2f,0x0                                                                                        
004406   c02d     MOVFF     0x2d,0xfe6                                                                                      
004408   ffe6                                                                                                               
00440a   c02e     MOVFF     0x2e,0xfe6                                                                                      
00440c   ffe6                                                                                                               
00440e   c02f     MOVFF     0x2f,0xfe6                                                                                      
004410   ffe6                                                                                                               
004412   ecec     CALL      0x61d8,0x0                                                                                      
004414   f030                                                                                                               
004416   6ef5     MOVWF     0xf5,0x0                                                                                        
004418   0e05     MOVLW     0x5                                                                                             
00441a   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00441c   50f5     MOVF      0xf5,0x0,0x0                                                                                    
00441e   d013     BRA       0x4446         				} else {                                                                     C:\first\v2.0\src\FRC2005\user_routines.c
004420   51e6     MOVF      0xe6,0x0,0x1   					switch( autMode ) {                                                         C:\first\v2.0\src\FRC2005\user_routines.c
004422   0a05     XORLW     0x5                                                                                             
004424   e00f     BZ        0x4444                                                                                          
004426   0a01     XORLW     0x1                                                                                             
004428   e00c     BZ        0x4442                                                                                          
00442a   0a07     XORLW     0x7                                                                                             
00442c   e009     BZ        0x4440                                                                                          
00442e   0a01     XORLW     0x1                                                                                             
004430   e006     BZ        0x443e                                                                                          
004432   0a03     XORLW     0x3                                                                                             
004434   e001     BZ        0x4438                                                                                          
004436   d007     BRA       0x4446                                                                                          
                                           						case 1:                                                                    C:\first\v2.0\src\FRC2005\user_routines.c
004438   ec32     CALL      0x5064,0x0     							aut1_doMain();                                                            C:\first\v2.0\src\FRC2005\user_routines.c
00443a   f028                                                                                                               
00443c   d004     BRA       0x4446         							break;                                                                    C:\first\v2.0\src\FRC2005\user_routines.c
                                           	                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                           						case 2:                                                                    C:\first\v2.0\src\FRC2005\user_routines.c
                                           	//						aut2_doMain();                                                          C:\first\v2.0\src\FRC2005\user_routines.c
00443e   d003     BRA       0x4446         							break;                                                                    C:\first\v2.0\src\FRC2005\user_routines.c
                                           	                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                           						case 3:                                                                    C:\first\v2.0\src\FRC2005\user_routines.c
                                           	//						aut3_doMain();                                                          C:\first\v2.0\src\FRC2005\user_routines.c
004440   d002     BRA       0x4446         							break;                                                                    C:\first\v2.0\src\FRC2005\user_routines.c
                                           	                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                           						case 4:                                                                    C:\first\v2.0\src\FRC2005\user_routines.c
                                           	//						aut4_doMain();                                                          C:\first\v2.0\src\FRC2005\user_routines.c
004442   d001     BRA       0x4446         							break;                                                                    C:\first\v2.0\src\FRC2005\user_routines.c
                                           	                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                           						case 5:                                                                    C:\first\v2.0\src\FRC2005\user_routines.c
                                           	//						aut5_doMain();                                                          C:\first\v2.0\src\FRC2005\user_routines.c
004444   d000     BRA       0x4446         							break;                                                                    C:\first\v2.0\src\FRC2005\user_routines.c
                                           					}                                                                           C:\first\v2.0\src\FRC2005\user_routines.c
                                           				}                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           			}                                                                             C:\first\v2.0\src\FRC2005\user_routines.c
004446   d002     BRA       0x444c         		} else {                                                                       C:\first\v2.0\src\FRC2005\user_routines.c
004448   0101     MOVLB     0x1            			state = 0;                                                                    C:\first\v2.0\src\FRC2005\user_routines.c
00444a   6be7     CLRF      0xe7,0x1                                                                                        
                                           		}                                                                              C:\first\v2.0\src\FRC2005\user_routines.c
00444c   d086     BRA       0x455a         		break;                                                                         C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           		case 2:                                                                        C:\first\v2.0\src\FRC2005\user_routines.c
00444e   0102     MOVLB     0x2            		if( !autonomous_mode ) {                                                       C:\first\v2.0\src\FRC2005\user_routines.c
004450   bd63     BTFSC     0x63,0x6,0x1                                                                                    
004452   d07f     BRA       0x4552                                                                                          
004454   0101     MOVLB     0x1            			autMode = 0;                                                                  C:\first\v2.0\src\FRC2005\user_routines.c
004456   6be6     CLRF      0xe6,0x1                                                                                        
                                           			// manual state                                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                           			// do user-mode input                                                         C:\first\v2.0\src\FRC2005\user_routines.c
                                           	                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
004458   0e01     MOVLW     0x1            			wheels_oneStickDriver( p1_x, p1_y, 1 );                                       C:\first\v2.0\src\FRC2005\user_routines.c
00445a   6ee6     MOVWF     0xe6,0x0                                                                                        
00445c   c268     MOVFF     0x268,0xfe6                                                                                     
00445e   ffe6                                                                                                               
004460   c26c     MOVFF     0x26c,0xfe6                                                                                     
004462   ffe6                                                                                                               
004464   ecbb     CALL      0x1576,0x0                                                                                      
004466   f00a                                                                                                               
004468   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00446a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00446c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                           			/**                                                                           C:\first\v2.0\src\FRC2005\user_routines.c
                                           			* using the following pins for arm and preset inputs                          C:\first\v2.0\src\FRC2005\user_routines.c
                                           			*  shoulder:                                                                  C:\first\v2.0\src\FRC2005\user_routines.c
                                           			*    toggle up - (p2_y > 140) - thumbpad up                                   C:\first\v2.0\src\FRC2005\user_routines.c
                                           		    *    toggle down - (p2_y < 100) - thumbpad down                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           		    *  finger:                                                                 C:\first\v2.0\src\FRC2005\user_routines.c
                                           		    *    toggle up - (p2_wheel >140) - button 5                                C:\first\v2.0\src\FRC2005\user_routines.c
                                           		    *    toggle down - (p2_aux >140) - button 6                                C:\first\v2.0\src\FRC2005\user_routines.c
                                           		    *  presets:                                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                           		    *    P1 - p2_sw_trig - button 1                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           		    *    p2 - p2_sw_top  - button 2                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           			*    P3 - p2_sw_aux1 - button 3                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                           			*    P4 - P2_sw_aux2 - button 4                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                           			**/                                                                           C:\first\v2.0\src\FRC2005\user_routines.c
                                           			arm_doShoulderOI(                                                             C:\first\v2.0\src\FRC2005\user_routines.c
00449c   0e64     MOVLW     0x64           				(p2_y > 140), (p2_y < 100),                                                  C:\first\v2.0\src\FRC2005\user_routines.c
00449e   5d69     SUBWF     0x69,0x0,0x1                                                                                    
0044a0   e302     BNC       0x44a6                                                                                          
0044a2   0e00     MOVLW     0x0                                                                                             
0044a4   d001     BRA       0x44a8                                                                                          
0044a6   0e01     MOVLW     0x1                                                                                             
0044a8   6e2b     MOVWF     0x2b,0x0                                                                                        
0044aa   6a2c     CLRF      0x2c,0x0                                                                                        
0044ac   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
0044ae   682c     SETF      0x2c,0x0                                                                                        
0044b0   c02b     MOVFF     0x2b,0xfe6                                                                                      
0044b2   ffe6                                                                                                               
0044b4   c02c     MOVFF     0x2c,0xfe6                                                                                      
0044b6   ffe6                                                                                                               
0044b8   5169     MOVF      0x69,0x0,0x1                                                                                    
0044ba   6e2f     MOVWF     0x2f,0x0                                                                                        
0044bc   6a30     CLRF      0x30,0x0                                                                                        
0044be   3430     RLCF      0x30,0x0,0x0                                                                                    
0044c0   e204     BC        0x44ca                                                                                          
0044c2   502f     MOVF      0x2f,0x0,0x0                                                                                    
0044c4   088c     SUBLW     0x8c                                                                                            
0044c6   0e00     MOVLW     0x0                                                                                             
0044c8   5430     SUBFWB    0x30,0x0,0x0                                                                                    
0044ca   e302     BNC       0x44d0                                                                                          
0044cc   0e00     MOVLW     0x0                                                                                             
0044ce   d001     BRA       0x44d2                                                                                          
0044d0   0e01     MOVLW     0x1                                                                                             
0044d2   6e2d     MOVWF     0x2d,0x0                                                                                        
0044d4   6a2e     CLRF      0x2e,0x0                                                                                        
0044d6   be2d     BTFSC     0x2d,0x7,0x0                                                                                    
0044d8   682e     SETF      0x2e,0x0                                                                                        
0044da   c02d     MOVFF     0x2d,0xfe6                                                                                      
0044dc   ffe6                                                                                                               
0044de   c02e     MOVFF     0x2e,0xfe6                                                                                      
0044e0   ffe6                                                                                                               
00446e   0102     MOVLB     0x2            				p2_sw_trig, p2_sw_top, p2_sw_aux1, p2_sw_aux2                                C:\first\v2.0\src\FRC2005\user_routines.c
004470   5165     MOVF      0x65,0x0,0x1                                                                                    
004472   0b08     ANDLW     0x8                                                                                             
004474   e001     BZ        0x4478                                                                                          
004476   0e01     MOVLW     0x1                                                                                             
00447c   5165     MOVF      0x65,0x0,0x1                                                                                    
00447e   0b04     ANDLW     0x4                                                                                             
004480   e001     BZ        0x4484                                                                                          
004482   0e01     MOVLW     0x1                                                                                             
004484   6ee6     MOVWF     0xe6,0x0                                                                                        
004486   6ae6     CLRF      0xe6,0x0                                                                                        
004488   5165     MOVF      0x65,0x0,0x1                                                                                    
00448a   0b02     ANDLW     0x2                                                                                             
00448c   e001     BZ        0x4490                                                                                          
00448e   0e01     MOVLW     0x1                                                                                             
004490   6ee6     MOVWF     0xe6,0x0                                                                                        
004492   6ae6     CLRF      0xe6,0x0                                                                                        
004494   5165     MOVF      0x65,0x0,0x1                                                                                    
004496   0b01     ANDLW     0x1                                                                                             
004498   6ee6     MOVWF     0xe6,0x0                                                                                        
00449a   6ae6     CLRF      0xe6,0x0                                                                                        
004478   6ee6     MOVWF     0xe6,0x0       			);                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
00447a   6ae6     CLRF      0xe6,0x0                                                                                        
0044e2   ecc2     CALL      0x3b84,0x0                                                                                      
0044e4   f01d                                                                                                               
0044e6   6ef5     MOVWF     0xf5,0x0                                                                                        
0044e8   0e0c     MOVLW     0xc                                                                                             
0044ea   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0044ec   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           		                                                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                           			arm_doFingerOI(                                                               C:\first\v2.0\src\FRC2005\user_routines.c
0044ee   0102     MOVLB     0x2            				(p2_wheel > 140), (p2_aux > 140)                                             C:\first\v2.0\src\FRC2005\user_routines.c
0044f0   5175     MOVF      0x75,0x0,0x1                                                                                    
0044f2   6e2d     MOVWF     0x2d,0x0                                                                                        
0044f4   6a2e     CLRF      0x2e,0x0                                                                                        
0044f6   342e     RLCF      0x2e,0x0,0x0                                                                                    
0044f8   e204     BC        0x4502                                                                                          
0044fa   502d     MOVF      0x2d,0x0,0x0                                                                                    
0044fc   088c     SUBLW     0x8c                                                                                            
0044fe   0e00     MOVLW     0x0                                                                                             
004500   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
004502   e302     BNC       0x4508                                                                                          
004504   0e00     MOVLW     0x0                                                                                             
004506   d001     BRA       0x450a                                                                                          
004508   0e01     MOVLW     0x1                                                                                             
00450a   6e2b     MOVWF     0x2b,0x0                                                                                        
00451a   5171     MOVF      0x71,0x0,0x1                                                                                    
00451c   6e31     MOVWF     0x31,0x0                                                                                        
00451e   6a32     CLRF      0x32,0x0                                                                                        
004520   3432     RLCF      0x32,0x0,0x0                                                                                    
004522   e204     BC        0x452c                                                                                          
004524   5031     MOVF      0x31,0x0,0x0                                                                                    
004526   088c     SUBLW     0x8c                                                                                            
004528   0e00     MOVLW     0x0                                                                                             
00452a   5432     SUBFWB    0x32,0x0,0x0                                                                                    
00452c   e302     BNC       0x4532                                                                                          
00452e   0e00     MOVLW     0x0                                                                                             
004530   d001     BRA       0x4534                                                                                          
004532   0e01     MOVLW     0x1                                                                                             
004534   6e2f     MOVWF     0x2f,0x0                                                                                        
004536   6a30     CLRF      0x30,0x0                                                                                        
004538   be2f     BTFSC     0x2f,0x7,0x0                                                                                    
00453a   6830     SETF      0x30,0x0                                                                                        
00453c   c02f     MOVFF     0x2f,0xfe6                                                                                      
00453e   ffe6                                                                                                               
004540   c030     MOVFF     0x30,0xfe6                                                                                      
004542   ffe6                                                                                                               
00450c   6a2c     CLRF      0x2c,0x0       			);                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
00450e   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
004510   682c     SETF      0x2c,0x0                                                                                        
004512   c02b     MOVFF     0x2b,0xfe6                                                                                      
004514   ffe6                                                                                                               
004516   c02c     MOVFF     0x2c,0xfe6                                                                                      
004518   ffe6                                                                                                               
004544   ece5     CALL      0x3fca,0x0                                                                                      
004546   f01f                                                                                                               
004548   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00454a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00454c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00454e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
004550   d002     BRA       0x4556         		} else {                                                                       C:\first\v2.0\src\FRC2005\user_routines.c
004552   0101     MOVLB     0x1            			state = 0;                                                                    C:\first\v2.0\src\FRC2005\user_routines.c
004554   6be7     CLRF      0xe7,0x1                                                                                        
                                           		}                                                                              C:\first\v2.0\src\FRC2005\user_routines.c
004556   d001     BRA       0x455a         		break;                                                                         C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           		default:                                                                       C:\first\v2.0\src\FRC2005\user_routines.c
004558   6be7     CLRF      0xe7,0x1       			state = 0;                                                                    C:\first\v2.0\src\FRC2005\user_routines.c
                                           	}                                                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           	// do output sequences...                                                       C:\first\v2.0\src\FRC2005\user_routines.c
00455a   ec47     CALL      0x588e,0x0     	armOutput_doShoulderOutput();                                                   C:\first\v2.0\src\FRC2005\user_routines.c
00455c   f02c                                                                                                               
00455e   ecf4     CALL      0x59e8,0x0     	armOutput_doFingerOutput();                                                     C:\first\v2.0\src\FRC2005\user_routines.c
004560   f02c                                                                                                               
004562   ec6b     CALL      0xcd6,0x0      	wheels_doMain();                                                                C:\first\v2.0\src\FRC2005\user_routines.c
004564   f006                                                                                                               
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           // Compressor code                                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                           	/**                                                                             C:\first\v2.0\src\FRC2005\user_routines.c
                                           	 * rc_dig_in03 - signals low pressure in system                                 C:\first\v2.0\src\FRC2005\user_routines.c
                                           	 * relay3_fwd - turns on compressor                                             C:\first\v2.0\src\FRC2005\user_routines.c
                                           	 */                                                                             C:\first\v2.0\src\FRC2005\user_routines.c
004566   b881     BTFSC     0x81,0x4,0x0   	if(!rc_dig_in03)                                                                C:\first\v2.0\src\FRC2005\user_routines.c
004568   d003     BRA       0x4570                                                                                          
                                           	{                                                                               C:\first\v2.0\src\FRC2005\user_routines.c
00456a   848d     BSF       0x8d,0x2,0x0   		relay3_fwd=1;                                                                  C:\first\v2.0\src\FRC2005\user_routines.c
00456c   948c     BCF       0x8c,0x2,0x0   		relay3_rev=0;	                                                                 C:\first\v2.0\src\FRC2005\user_routines.c
                                           	}                                                                               C:\first\v2.0\src\FRC2005\user_routines.c
00456e   d005     BRA       0x457a         	else                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           	{                                                                               C:\first\v2.0\src\FRC2005\user_routines.c
004570   0101     MOVLB     0x1            		initialPressure = 1;                                                           C:\first\v2.0\src\FRC2005\user_routines.c
004572   0e01     MOVLW     0x1                                                                                             
004574   6fe5     MOVWF     0xe5,0x1                                                                                        
004576   948d     BCF       0x8d,0x2,0x0   		relay3_fwd=0;                                                                  C:\first\v2.0\src\FRC2005\user_routines.c
004578   948c     BCF       0x8c,0x2,0x0   		relay3_rev=0;                                                                  C:\first\v2.0\src\FRC2005\user_routines.c
                                           	}                                                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                           // end Compressor Code                                                           C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
00457a   0101     MOVLB     0x1            	if( midCounter == 0 ) {                                                         C:\first\v2.0\src\FRC2005\user_routines.c
00457c   51e3     MOVF      0xe3,0x0,0x1                                                                                    
00457e   11e4     IORWF     0xe4,0x0,0x1                                                                                    
004580   e001     BZ        0x4584                                                                                          
004582   d086     BRA       0x4690                                                                                          
                                           		/** This runs every (MID_COUNTER_VALUE*26.6)ms                                 C:\first\v2.0\src\FRC2005\user_routines.c
                                           		 * you can put print statements in here, and anything                          C:\first\v2.0\src\FRC2005\user_routines.c
                                           		 * else that you want to run periodically                                      C:\first\v2.0\src\FRC2005\user_routines.c
                                           		 */                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           		/** P2 controller printouts **/                                                C:\first\v2.0\src\FRC2005\user_routines.c
                                           //		printf("(x,y) %d,%d\r", (unsigned int)p2_x, (unsigned int)p2_y);             C:\first\v2.0\src\FRC2005\user_routines.c
                                           /**		printf("(wheel) %d\r", (unsigned int)p2_wheel);                             C:\first\v2.0\src\FRC2005\user_routines.c
                                           		printf("(aux, sw_aux1, sw_aux2) %d,%d,%d\r", (unsigned int)p2_aux, (unsigned int)p2_sw_aux1, (unsigned int)p2_sw_aux2); C:\first\v2.0\src\FRC2005\user_routines.c
                                           		printf("(sw_trig, sw_top) %d, %d\r\r", (unsigned int)p2_sw_trig, (unsigned int)p2_sw_top); C:\first\v2.0\src\FRC2005\user_routines.c
                                           */                                                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
004584   0101     MOVLB     0x1            		sMaxLimitTemp = (int)shoulderMaxLimit;                                         C:\first\v2.0\src\FRC2005\user_routines.c
004586   35d5     RLCF      0xd5,0x0,0x1                                                                                    
004588   e204     BC        0x4592                                                                                          
00458a   51d4     MOVF      0xd4,0x0,0x1                                                                                    
00458c   08a7     SUBLW     0xa7                                                                                            
00458e   0e01     MOVLW     0x1                                                                                             
004590   55d5     SUBFWB    0xd5,0x0,0x1                                                                                    
004592   e202     BC        0x4598                                                                                          
004594   0e00     MOVLW     0x0                                                                                             
004596   d001     BRA       0x459a                                                                                          
004598   0e01     MOVLW     0x1                                                                                             
00459a   6e2b     MOVWF     0x2b,0x0                                                                                        
00459c   6a2c     CLRF      0x2c,0x0                                                                                        
00459e   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
0045a0   682c     SETF      0x2c,0x0                                                                                        
0045a2   0e02     MOVLW     0x2                                                                                             
0045a4   c02b     MOVFF     0x2b,0xfdb                                                                                      
0045a6   ffdb                                                                                                               
0045a8   0e03     MOVLW     0x3                                                                                             
0045aa   c02c     MOVFF     0x2c,0xfdb                                                                                      
0045ac   ffdb                                                                                                               
0045ae   90d8     BCF       0xd8,0x0,0x0   		sMinLimitTemp = (int)shoulderMinLimit;                                         C:\first\v2.0\src\FRC2005\user_routines.c
0045b0   51d5     MOVF      0xd5,0x0,0x1                                                                                    
0045b2   e604     BN        0x45bc                                                                                          
0045b4   0ea3     MOVLW     0xa3                                                                                            
0045b6   5dd4     SUBWF     0xd4,0x0,0x1                                                                                    
0045b8   0e02     MOVLW     0x2                                                                                             
0045ba   59d5     SUBWFB    0xd5,0x0,0x1                                                                                    
0045bc   e202     BC        0x45c2                                                                                          
0045be   0e00     MOVLW     0x0                                                                                             
0045c0   d001     BRA       0x45c4                                                                                          
0045c2   0e01     MOVLW     0x1                                                                                             
0045c4   6e2b     MOVWF     0x2b,0x0                                                                                        
0045c6   6a2c     CLRF      0x2c,0x0                                                                                        
0045c8   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
0045ca   682c     SETF      0x2c,0x0                                                                                        
0045cc   0e04     MOVLW     0x4                                                                                             
0045ce   c02b     MOVFF     0x2b,0xfdb                                                                                      
0045d0   ffdb                                                                                                               
0045d2   0e05     MOVLW     0x5                                                                                             
0045d4   c02c     MOVFF     0x2c,0xfdb                                                                                      
0045d6   ffdb                                                                                                               
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           		/** SHOULDER PRINTOUTS **/                                                     C:\first\v2.0\src\FRC2005\user_routines.c
0045d8   0e04     MOVLW     0x4            		printf("S: PWM,Pos[Sens],[l/u], [L+,L-]: \r   %d, %d[%d] [%d/%d] [%d,%d]\r", (int)pwm03, (int)arm_getShoulderPosition(), (int)shoulderPosSensor, (unsigned int)relay4_fwd, (unsigned int)relay5_fwd, sMaxLimitTemp, sMinLimitTemp); C:\first\v2.0\src\FRC2005\user_routines.c
0045da   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0045dc   ffe6                                                                                                               
0045de   0e05     MOVLW     0x5                                                                                             
0045e0   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0045e2   ffe6                                                                                                               
0045e4   0e02     MOVLW     0x2                                                                                             
0045e6   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0045e8   ffe6                                                                                                               
0045ea   0e03     MOVLW     0x3                                                                                             
0045ec   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0045ee   ffe6                                                                                                               
0045f0   508d     MOVF      0x8d,0x0,0x0                                                                                    
0045f2   0b10     ANDLW     0x10                                                                                            
0045f4   e001     BZ        0x45f8                                                                                          
0045f6   0e01     MOVLW     0x1                                                                                             
0045f8   6ee6     MOVWF     0xe6,0x0                                                                                        
0045fa   6ae6     CLRF      0xe6,0x0                                                                                        
0045fc   508d     MOVF      0x8d,0x0,0x0                                                                                    
0045fe   0b08     ANDLW     0x8                                                                                             
004600   e001     BZ        0x4604                                                                                          
004602   0e01     MOVLW     0x1                                                                                             
004604   6ee6     MOVWF     0xe6,0x0                                                                                        
004606   6ae6     CLRF      0xe6,0x0                                                                                        
004608   c1d4     MOVFF     0x1d4,0xfe6                                                                                     
00460a   ffe6                                                                                                               
00460c   c1d5     MOVFF     0x1d5,0xfe6                                                                                     
00460e   ffe6                                                                                                               
004610   ecb7     CALL      0x396e,0x0                                                                                      
004612   f01c                                                                                                               
004614   cff3     MOVFF     0xff3,0x2b                                                                                      
004616   f02b                                                                                                               
004618   cff4     MOVFF     0xff4,0x2c                                                                                      
00461a   f02c                                                                                                               
00461c   c02b     MOVFF     0x2b,0xfe6                                                                                      
00461e   ffe6                                                                                                               
004620   c02c     MOVFF     0x2c,0xfe6                                                                                      
004622   ffe6                                                                                                               
004624   0102     MOVLB     0x2                                                                                             
004626   5148     MOVF      0x48,0x0,0x1                                                                                    
004628   6ee6     MOVWF     0xe6,0x0                                                                                        
00462a   6ae6     CLRF      0xe6,0x0                                                                                        
00462c   0ec3     MOVLW     0xc3                                                                                            
00462e   6e2d     MOVWF     0x2d,0x0                                                                                        
004630   0e54     MOVLW     0x54                                                                                            
004632   6e2e     MOVWF     0x2e,0x0                                                                                        
004634   6a2f     CLRF      0x2f,0x0                                                                                        
004636   c02d     MOVFF     0x2d,0xfe6                                                                                      
004638   ffe6                                                                                                               
00463a   c02e     MOVFF     0x2e,0xfe6                                                                                      
00463c   ffe6                                                                                                               
00463e   c02f     MOVFF     0x2f,0xfe6                                                                                      
004640   ffe6                                                                                                               
004642   ecec     CALL      0x61d8,0x0                                                                                      
004644   f030                                                                                                               
004646   6ef5     MOVWF     0xf5,0x0                                                                                        
004648   0e11     MOVLW     0x11                                                                                            
00464a   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00464c   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           		/** FINGER PRINTOUTS **/                                                       C:\first\v2.0\src\FRC2005\user_routines.c
00464e   508d     MOVF      0x8d,0x0,0x0   		printf("F: PWM [l/u]:\r   %d [%d/%d]\r", (int)pwm04, (unsigned int)relay6_fwd, (unsigned int)relay7_fwd); C:\first\v2.0\src\FRC2005\user_routines.c
004650   0b40     ANDLW     0x40                                                                                            
004652   e001     BZ        0x4656                                                                                          
004654   0e01     MOVLW     0x1                                                                                             
004656   6ee6     MOVWF     0xe6,0x0                                                                                        
004658   6ae6     CLRF      0xe6,0x0                                                                                        
00465a   508d     MOVF      0x8d,0x0,0x0                                                                                    
00465c   0b20     ANDLW     0x20                                                                                            
00465e   e001     BZ        0x4662                                                                                          
004660   0e01     MOVLW     0x1                                                                                             
004662   6ee6     MOVWF     0xe6,0x0                                                                                        
004664   6ae6     CLRF      0xe6,0x0                                                                                        
004666   0102     MOVLB     0x2                                                                                             
004668   5149     MOVF      0x49,0x0,0x1                                                                                    
00466a   6ee6     MOVWF     0xe6,0x0                                                                                        
00466c   6ae6     CLRF      0xe6,0x0                                                                                        
00466e   0ea6     MOVLW     0xa6                                                                                            
004670   6e2b     MOVWF     0x2b,0x0                                                                                        
004672   0e54     MOVLW     0x54                                                                                            
004674   6e2c     MOVWF     0x2c,0x0                                                                                        
004676   6a2d     CLRF      0x2d,0x0                                                                                        
004678   c02b     MOVFF     0x2b,0xfe6                                                                                      
00467a   ffe6                                                                                                               
00467c   c02c     MOVFF     0x2c,0xfe6                                                                                      
00467e   ffe6                                                                                                               
004680   c02d     MOVFF     0x2d,0xfe6                                                                                      
004682   ffe6                                                                                                               
004684   ecec     CALL      0x61d8,0x0                                                                                      
004686   f030                                                                                                               
004688   6ef5     MOVWF     0xf5,0x0                                                                                        
00468a   0e09     MOVLW     0x9                                                                                             
00468c   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00468e   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           		//printf("speed: (l,r) %d, %d", (int)speedometer_getSpeed(&speedometer_left), (int)speedometer_getSpeed(&speedometer_right)); C:\first\v2.0\src\FRC2005\user_routines.c
                                           	}                                                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           	// MID COUNTER                                                                  C:\first\v2.0\src\FRC2005\user_routines.c
004690   0101     MOVLB     0x1            	if( midCounter == 0 ) {                                                         C:\first\v2.0\src\FRC2005\user_routines.c
004692   51e3     MOVF      0xe3,0x0,0x1                                                                                    
004694   11e4     IORWF     0xe4,0x0,0x1                                                                                    
004696   e104     BNZ       0x46a0                                                                                          
004698   0e32     MOVLW     0x32           		midCounter = MID_COUNTER_VALUE;                                                C:\first\v2.0\src\FRC2005\user_routines.c
00469a   6fe3     MOVWF     0xe3,0x1                                                                                        
00469c   6be4     CLRF      0xe4,0x1                                                                                        
00469e   d003     BRA       0x46a6         	} else {                                                                        C:\first\v2.0\src\FRC2005\user_routines.c
0046a0   07e3     DECF      0xe3,0x1,0x1   		--midCounter;                                                                  C:\first\v2.0\src\FRC2005\user_routines.c
0046a2   0e00     MOVLW     0x0                                                                                             
0046a4   5be4     SUBWFB    0xe4,0x1,0x1                                                                                    
                                           	}                                                                               C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
0046a6   0e42     MOVLW     0x42           	Putdata(&txdata);             /* DO NOT CHANGE! */                              C:\first\v2.0\src\FRC2005\user_routines.c
0046a8   6ee6     MOVWF     0xe6,0x0                                                                                        
0046aa   0e02     MOVLW     0x2                                                                                             
0046ac   6ee6     MOVWF     0xe6,0x0                                                                                        
0046ae   ec02     CALL      0x3404,0x0                                                                                      
0046b0   f01a                                                                                                               
0046b2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0046b4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0046b6   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\FRC2005\user_routines.c
0046b8   ffe1                                                                                                               
0046ba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0046bc   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0046be   ffd9                                                                                                               
0046c0   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * FILE NAME: user_routines_fast.c <FRC VERSION>                                  C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * DESCRIPTION:                                                                   C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           *  This file is where the user can add their custom code within the framework    C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           *  of the routines below.                                                        C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * USAGE:                                                                         C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           *  You can either modify this file to fit your needs, or remove it from your     C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           *  project and replace it with a modified copy.                                  C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * OPTIONS:  Interrupts are disabled and not used by default.                     C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           #include "ifi_aliases.h"                                                         C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           #include "ifi_default.h"                                                         C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           #include "ifi_utilities.h"                                                       C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           #include "user_routines.h"                                                       C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           #include <timers.h>                                                              C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           #include <stdio.h>                                                               C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           #include "NCSSM/driverClock.h"                                                   C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           #include "NCSSM/wheels.h"                                                        C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           #include "NCSSM/speedometer.h"                                                   C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           #include "NCSSM/aut1.h"                                                          C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           #include "NCSSM/armOutput.h"                                                     C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           #ifndef _FRC2004_                                                                C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                             #include "user_Serialdrv.h"                                                    C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           #endif                                                                           C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * FUNCTION NAME: User_Autonomous_Code                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * PURPOSE:       Execute user's code during autonomous robot operation.          C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * You should modify this routine by adding code which you wish to run in         C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * autonomous mode.  It will be executed every program loop, and not              C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * wait for or use any data from the Operator Interface.                          C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * CALLED FROM:   main.c file, main() routine when in Autonomous mode             C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           void User_Autonomous_Code(void)                                                  C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           	// DON'T PUT AUTONOMOUS CODE HERE...                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                               // instead, put it in a module, and call it                                  C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                               // from user_routines.c, if autonomous_mode is enabled.                      C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           	// see user_routines.c, for example.                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
0066ba   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * FUNCTION NAME: Process_Data_From_Local_IO                                      C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * PURPOSE:       Execute user's realtime code.                                   C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * You should modify this routine by adding code which you wish to run fast.      C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * It will be executed every program loop, and not wait for fresh data            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * from the Operator Interface.                                                   C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * CALLED FROM:   main.c                                                          C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           void Process_Data_From_Local_IO(void)                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_routines_fast.c
0066bc   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * FUNCTION NAME: Serial_Char_Callback                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * PURPOSE:       Interrupt handler for the TTL_PORT.                             C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * CALLED FROM:   user_SerialDrv.c                                                C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * ARGUMENTS:                                                                     C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           *     Argument             Type    IO   Description                              C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           *     --------             ----    --   -----------                              C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           *     data        unsigned char    I    Data received from the TTL_PORT          C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
0066be   cfd9     MOVFF     0xfd9,0xfe6    void Serial_Char_Callback(unsigned char tmp)                                     C:\first\v2.0\src\FRC2005\user_routines_fast.c
0066c0   ffe6                                                                                                               
0066c2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0066c4   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                             /* Add code to handle incomming data (remember, interrupts are still active) */ C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
0066c6   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\user_routines_fast.c
0066c8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0066ca   ffd9                                                                                                               
0066cc   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           /******************************************************************************/ C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           /******************************************************************************/ C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           /******************************************************************************/ C:\first\v2.0\src\FRC2005\user_routines_fast.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * FILE NAME: ifi_utilities.c                                                     C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * DESCRIPTION:                                                                   C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *  This file contains some useful functions that you can call in your program.   C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * USAGE:                                                                         C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *  The user should NOT modify this file, so that if a new version is released    C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *  by Innovation First then it can be easily replaced.                           C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *  The user should add their own functions to either user_routines.c or another  C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *  custom file.                                                                  C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           #include <usart.h>                                                               C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           #include <spi.h>                                                                 C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           #include <adc.h>                                                                 C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           #include <capture.h>                                                             C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           #include <timers.h>                                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           #include <string.h>                                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           #include <pwm.h>                                                                 C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           #include "delays.h"       /*defined locally*/                                    C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           #include "ifi_aliases.h"                                                         C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           #include "ifi_default.h"                                                         C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           #include "ifi_utilities.h"                                                       C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           #include "user_routines.h"                                                       C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           int             ifi_packet_num1 = 0;                                             C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           int             ifi_last_packet1 = 0;                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           char            ifi_printfBufr[80];                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           unsigned char   *ptr;                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           unsigned char   ifi_count;                                                       C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           unsigned char   ifi_analog_channels;                                             C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * FUNCTION NAME: Wait4TXEmpty                                                    C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * PURPOSE:       Wait for serial transmit buffer to be empty.                    C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           /* Used when transmitting data serially.  It waits for each byte to finish.   */ C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           void Wait4TXEmpty(void)                                                          C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           #ifndef _SIMULATOR                                                               C:\first\v2.0\src\FRC2005\ifi_utilities.c
005ada   b89e     BTFSC     0x9e,0x4,0x0     while (!TXINTF)                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005adc   d002     BRA       0x5ae2                                                                                          
005ae0   d7fc     BRA       0x5ada                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
005ade   d7fd     BRA       0x5ada             continue;                                                                    C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           #endif                                                                           C:\first\v2.0\src\FRC2005\ifi_utilities.c
005ae2   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * FUNCTION NAME: PrintByte                                                       C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * PURPOSE:       A simple way to print a byte of data to the serial port.        C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     odata          unsigned char    I    byte of data to be transmitted        C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\ifi_utilities.c
005ae4   cfd9     MOVFF     0xfd9,0xfe6    void PrintByte(unsigned char odata)                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
005ae6   ffe6                                                                                                               
005ae8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005aea   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005aec   0efe     MOVLW     0xfe             Hex_output((unsigned char) odata);                                             C:\first\v2.0\src\FRC2005\ifi_utilities.c
005aee   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
005af0   ffe6                                                                                                               
005af2   ec9a     CALL      0x5134,0x0                                                                                      
005af4   f028                                                                                                               
005af6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005af8   0e0d     MOVLW     0xd              TXREG = 13;  /* a carriage return */                                           C:\first\v2.0\src\FRC2005\ifi_utilities.c
005afa   6ead     MOVWF     0xad,0x0                                                                                        
005afc   dfee     RCALL     0x5ada           Wait4TXEmpty();                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005afe   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005b00   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005b02   ffd9                                                                                                               
005b04   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * FUNCTION NAME: PrintWord                                                       C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * PURPOSE:       A simple way to print a word of data to the serial port.        C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     odata          unsigned int     I    word of data to be transmitted        C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\ifi_utilities.c
005b06   cfd9     MOVFF     0xfd9,0xfe6    void PrintWord(unsigned int odata)                                               C:\first\v2.0\src\FRC2005\ifi_utilities.c
005b08   ffe6                                                                                                               
005b0a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005b0c   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005b0e   0101     MOVLB     0x1              ptr = (unsigned char *) &odata;                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005b10   50d9     MOVF      0xd9,0x0,0x0                                                                                    
005b12   0ffd     ADDLW     0xfd                                                                                            
005b14   6fba     MOVWF     0xba,0x1                                                                                        
005b16   0eff     MOVLW     0xff                                                                                            
005b18   20da     ADDWFC    0xda,0x0,0x0                                                                                    
005b1a   6fbb     MOVWF     0xbb,0x1                                                                                        
005b1c   0e01     MOVLW     0x1              Hex_output(ptr[1]);                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005b1e   6aea     CLRF      0xea,0x0                                                                                        
005b20   25ba     ADDWF     0xba,0x0,0x1                                                                                    
005b22   6ee9     MOVWF     0xe9,0x0                                                                                        
005b24   51bb     MOVF      0xbb,0x0,0x1                                                                                    
005b26   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
005b28   50ef     MOVF      0xef,0x0,0x0                                                                                    
005b2a   6ee6     MOVWF     0xe6,0x0                                                                                        
005b2c   ec9a     CALL      0x5134,0x0                                                                                      
005b2e   f028                                                                                                               
005b30   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005b32   c1ba     MOVFF     0x1ba,0xfe9      Hex_output(ptr[0]);                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005b34   ffe9                                                                                                               
005b36   c1bb     MOVFF     0x1bb,0xfea                                                                                     
005b38   ffea                                                                                                               
005b3a   50ef     MOVF      0xef,0x0,0x0                                                                                    
005b3c   6ee6     MOVWF     0xe6,0x0                                                                                        
005b3e   ec9a     CALL      0x5134,0x0                                                                                      
005b40   f028                                                                                                               
005b42   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005b44   0e0d     MOVLW     0xd              TXREG = 13;  /* add a carriage return */                                       C:\first\v2.0\src\FRC2005\ifi_utilities.c
005b46   6ead     MOVWF     0xad,0x0                                                                                        
005b48   dfc8     RCALL     0x5ada           Wait4TXEmpty();                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005b4a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005b4c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005b4e   ffd9                                                                                                               
005b50   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * FUNCTION NAME: PrintString                                                     C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * PURPOSE:       Prints a string to the serial port.                             C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     Argument       Type             IO   Description                           C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     --------       -------------    --   -----------                           C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     bufr           pointer          I    word of data to be transmitted        C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\ifi_utilities.c
005b52   cfd9     MOVFF     0xfd9,0xfe6    void PrintString(char *bufr)                                                     C:\first\v2.0\src\FRC2005\ifi_utilities.c
005b54   ffe6                                                                                                               
005b56   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005b58   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                             static int len,I;                                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005b5a   0efd     MOVLW     0xfd             strcpypgm2ram (ifi_printfBufr,(rom char *) bufr); /*Move from flash to ram*/   C:\first\v2.0\src\FRC2005\ifi_utilities.c
005b5c   cfdb     MOVFF     0xfdb,0x2b                                                                                      
005b5e   f02b                                                                                                               
005b60   0efe     MOVLW     0xfe                                                                                            
005b62   cfdb     MOVFF     0xfdb,0x2c                                                                                      
005b64   f02c                                                                                                               
005b66   6a2d     CLRF      0x2d,0x0                                                                                        
005b68   c02b     MOVFF     0x2b,0xfe6                                                                                      
005b6a   ffe6                                                                                                               
005b6c   c02c     MOVFF     0x2c,0xfe6                                                                                      
005b6e   ffe6                                                                                                               
005b70   c02d     MOVFF     0x2d,0xfe6                                                                                      
005b72   ffe6                                                                                                               
005b74   0e6a     MOVLW     0x6a                                                                                            
005b76   6ee6     MOVWF     0xe6,0x0                                                                                        
005b78   0e01     MOVLW     0x1                                                                                             
005b7a   6ee6     MOVWF     0xe6,0x0                                                                                        
005b7c   eca0     CALL      0x6140,0x0                                                                                      
005b7e   f030                                                                                                               
005b80   6ef5     MOVWF     0xf5,0x0                                                                                        
005b82   0e05     MOVLW     0x5                                                                                             
005b84   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
005b86   50f5     MOVF      0xf5,0x0,0x0                                                                                    
005b88   0e6a     MOVLW     0x6a             len = (int) strlen((const char *)ifi_printfBufr);                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
005b8a   6ee6     MOVWF     0xe6,0x0                                                                                        
005b8c   0e01     MOVLW     0x1                                                                                             
005b8e   6ee6     MOVWF     0xe6,0x0                                                                                        
005b90   ecb9     CALL      0x6172,0x0                                                                                      
005b92   f030                                                                                                               
005b94   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005b96   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005b98   cff3     MOVFF     0xff3,0x1be                                                                                     
005b9a   f1be                                                                                                               
005b9c   cff4     MOVFF     0xff4,0x1bf                                                                                     
005b9e   f1bf                                                                                                               
005ba0   0101     MOVLB     0x1              if (len > 80) len = 80;                                                        C:\first\v2.0\src\FRC2005\ifi_utilities.c
005ba2   35bf     RLCF      0xbf,0x0,0x1                                                                                    
005ba4   e204     BC        0x5bae                                                                                          
005ba6   51be     MOVF      0xbe,0x0,0x1                                                                                    
005ba8   0850     SUBLW     0x50                                                                                            
005baa   0e00     MOVLW     0x0                                                                                             
005bac   55bf     SUBFWB    0xbf,0x0,0x1                                                                                    
005bae   e203     BC        0x5bb6                                                                                          
005bb0   0e50     MOVLW     0x50                                                                                            
005bb2   6fbe     MOVWF     0xbe,0x1                                                                                        
005bb4   6bbf     CLRF      0xbf,0x1                                                                                        
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005bb6   6bc0     CLRF      0xc0,0x1         for (I=0;I<len;I++)                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005bb8   6bc1     CLRF      0xc1,0x1                                                                                        
005bba   51c1     MOVF      0xc1,0x0,0x1                                                                                    
005bbc   19bf     XORWF     0xbf,0x0,0x1                                                                                    
005bbe   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
005bc0   d002     BRA       0x5bc6                                                                                          
005bc2   35bf     RLCF      0xbf,0x0,0x1                                                                                    
005bc4   d004     BRA       0x5bce                                                                                          
005bc6   51be     MOVF      0xbe,0x0,0x1                                                                                    
005bc8   5dc0     SUBWF     0xc0,0x0,0x1                                                                                    
005bca   51bf     MOVF      0xbf,0x0,0x1                                                                                    
005bcc   59c1     SUBWFB    0xc1,0x0,0x1                                                                                    
005bce   e20e     BC        0x5bec                                                                                          
005be2   0101     MOVLB     0x1                                                                                             
005be4   2bc0     INCF      0xc0,0x1,0x1                                                                                    
005be6   0e00     MOVLW     0x0                                                                                             
005be8   23c1     ADDWFC    0xc1,0x1,0x1                                                                                    
005bea   d7e7     BRA       0x5bba                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
005bd0   0e6a     MOVLW     0x6a               TXREG = ifi_printfBufr[I];                                                   C:\first\v2.0\src\FRC2005\ifi_utilities.c
005bd2   25c0     ADDWF     0xc0,0x0,0x1                                                                                    
005bd4   6ee9     MOVWF     0xe9,0x0                                                                                        
005bd6   0e01     MOVLW     0x1                                                                                             
005bd8   21c1     ADDWFC    0xc1,0x0,0x1                                                                                    
005bda   6eea     MOVWF     0xea,0x0                                                                                        
005bdc   50ef     MOVF      0xef,0x0,0x0                                                                                    
005bde   6ead     MOVWF     0xad,0x0                                                                                        
005be0   df7c     RCALL     0x5ada             Wait4TXEmpty();                                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
005bec   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005bee   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005bf0   ffd9                                                                                                               
005bf2   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * FUNCTION NAME: DisplayBufr                                                     C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * PURPOSE:       Print the entire transmit or receive buffer over the serial     C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *                port for viewing in a terminal program on your PC.              C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     Argument       Type        IO   Description                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     --------       --------    --   -----------                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     *bufr          pointer     I    points to beginning of buffer to transmit  C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\ifi_utilities.c
005bf4   cfd9     MOVFF     0xfd9,0xfe6    void DisplayBufr(unsigned char *bufr)                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005bf6   ffe6                                                                                                               
005bf8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005bfa   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005bfc   0101     MOVLB     0x1              for (ifi_count=0;ifi_count<26;ifi_count++)                                     C:\first\v2.0\src\FRC2005\ifi_utilities.c
005bfe   6bbc     CLRF      0xbc,0x1                                                                                        
005c00   0e1a     MOVLW     0x1a                                                                                            
005c02   5dbc     SUBWF     0xbc,0x0,0x1                                                                                    
005c04   e211     BC        0x5c28                                                                                          
005c22   0101     MOVLB     0x1                                                                                             
005c24   2bbc     INCF      0xbc,0x1,0x1                                                                                    
005c26   d7ec     BRA       0x5c00                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c06   0efd     MOVLW     0xfd               Hex_output((unsigned char) *bufr++);                                         C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c08   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
005c0a   ffe9                                                                                                               
005c0c   2adb     INCF      0xdb,0x1,0x0                                                                                    
005c0e   0efe     MOVLW     0xfe                                                                                            
005c10   cfdb     MOVFF     0xfdb,0xfea                                                                                     
005c12   ffea                                                                                                               
005c14   e301     BNC       0x5c18                                                                                          
005c16   2adb     INCF      0xdb,0x1,0x0                                                                                    
005c18   50ef     MOVF      0xef,0x0,0x0                                                                                    
005c1a   6ee6     MOVWF     0xe6,0x0                                                                                        
005c1c   ec9a     CALL      0x5134,0x0                                                                                      
005c1e   f028                                                                                                               
005c20   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                             }                                                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c28   0e0d     MOVLW     0xd              TXREG = 13;  /* add a carriage return */                                       C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c2a   6ead     MOVWF     0xad,0x0                                                                                        
005c2c   df56     RCALL     0x5ada           Wait4TXEmpty();                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c2e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c30   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005c32   ffd9                                                                                                               
005c34   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * FUNCTION NAME: PacketNum_Check                                                 C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * PURPOSE:       Print the packet number over the serial port if a packet gets   C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *                dropped.  Handy for seeing if you are dropping data.            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * CALLED FROM:   anywhere                                                        C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           void PacketNum_Check(void)                                                       C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                             /*    to print only the 10th (packet num) byte*/                               C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c36   0101     MOVLB     0x1              ptr = (unsigned char *) &rxdata.packet_num;                                    C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c38   0e62     MOVLW     0x62                                                                                            
005c3a   6fba     MOVWF     0xba,0x1                                                                                        
005c3c   0e02     MOVLW     0x2                                                                                             
005c3e   6fbb     MOVWF     0xbb,0x1                                                                                        
005c40   0102     MOVLB     0x2              ifi_packet_num1 = (int) rxdata.packet_num;                                     C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c42   5162     MOVF      0x62,0x0,0x1                                                                                    
005c44   0101     MOVLB     0x1                                                                                             
005c46   6fe8     MOVWF     0xe8,0x1                                                                                        
005c48   6be9     CLRF      0xe9,0x1                                                                                        
005c4a   51ea     MOVF      0xea,0x0,0x1     if (ifi_packet_num1 != ifi_last_packet1)                                       C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c4c   19e8     XORWF     0xe8,0x0,0x1                                                                                    
005c4e   e102     BNZ       0x5c54                                                                                          
005c50   51eb     MOVF      0xeb,0x0,0x1                                                                                    
005c52   19e9     XORWF     0xe9,0x0,0x1                                                                                    
005c54   e018     BZ        0x5c86                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c56   0102     MOVLB     0x2                if (statusflag.FIRST_TIME == 1)                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c58   a582     BTFSS     0x82,0x2,0x1                                                                                    
005c5a   d002     BRA       0x5c60                                                                                          
                                               {                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c5c   9582     BCF       0x82,0x2,0x1         statusflag.FIRST_TIME = 0;                                                 C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                               }                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c5e   d00f     BRA       0x5c7e             else                                                                         C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                               {                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c60   c1ea     MOVFF     0x1ea,0xfe6          Hex_output((unsigned char) ifi_last_packet1);                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c62   ffe6                                                                                                               
005c64   ec9a     CALL      0x5134,0x0                                                                                      
005c66   f028                                                                                                               
005c68   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005c6a   c1e8     MOVFF     0x1e8,0xfe6          Hex_output((unsigned char) ifi_packet_num1);                               C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c6c   ffe6                                                                                                               
005c6e   ec9a     CALL      0x5134,0x0                                                                                      
005c70   f028                                                                                                               
005c72   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005c74   0e0d     MOVLW     0xd                  TXREG = 13;                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c76   6ead     MOVWF     0xad,0x0                                                                                        
005c78   df30     RCALL     0x5ada               Wait4TXEmpty();                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c7a   0102     MOVLB     0x2                  statusflag.FIRST_TIME = 0;                                                 C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c7c   9582     BCF       0x82,0x2,0x1                                                                                    
                                               }                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c7e   c1e8     MOVFF     0x1e8,0x1ea        ifi_last_packet1 = ifi_packet_num1;                                          C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c80   f1ea                                                                                                               
005c82   c1e9     MOVFF     0x1e9,0x1eb                                                                                     
005c84   f1eb                                                                                                               
                                             }/*   if (ifi_packet_num1 != ifi_last_packet1)*/                               C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c86   0101     MOVLB     0x1              ifi_last_packet1++;                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c88   2bea     INCF      0xea,0x1,0x1                                                                                    
005c8a   0e00     MOVLW     0x0                                                                                             
005c8c   23eb     ADDWFC    0xeb,0x1,0x1                                                                                    
005c8e   35eb     RLCF      0xeb,0x0,0x1     if (ifi_last_packet1 > 255)                                                    C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c90   e204     BC        0x5c9a                                                                                          
005c92   51ea     MOVF      0xea,0x0,0x1                                                                                    
005c94   08ff     SUBLW     0xff                                                                                            
005c96   0e00     MOVLW     0x0                                                                                             
005c98   55eb     SUBFWB    0xeb,0x0,0x1                                                                                    
005c9a   e202     BC        0x5ca0                                                                                          
                                             {                                                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c9c   6bea     CLRF      0xea,0x1           ifi_last_packet1 = 0;                                                        C:\first\v2.0\src\FRC2005\ifi_utilities.c
005c9e   6beb     CLRF      0xeb,0x1                                                                                        
                                             }                                                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
005ca0   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * FUNCTION NAME: Initialize_Serial_Comms                                         C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * PURPOSE:       Opens the serial port 1 for communicating with your PC at       C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *                115k baud, 8 bits, no parity, one stop bit, and no flow control. C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c                                                 C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           void Initialize_Serial_Comms (void)                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                             OpenUSART(USART_TX_INT_OFF &                                                   C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                               USART_RX_INT_OFF &                                                           C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                               USART_ASYNCH_MODE &                                                          C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                               USART_EIGHT_BIT &                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                               USART_CONT_RX &                                                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
005ca6   0e3c     MOVLW     0x3c               USART_BRGH_HIGH,                                                             C:\first\v2.0\src\FRC2005\ifi_utilities.c
005ca8   6ee6     MOVWF     0xe6,0x0                                                                                        
005ca2   0e15     MOVLW     0x15               baud_115);                                                                   C:\first\v2.0\src\FRC2005\ifi_utilities.c
005ca4   6ee6     MOVWF     0xe6,0x0                                                                                        
005caa   ec15     CALL      0x642a,0x0                                                                                      
005cac   f032                                                                                                               
005cae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005cb0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005cb2   0e32     MOVLW     0x32             Delay1KTCYx( 50 ); /* Settling time */                                         C:\first\v2.0\src\FRC2005\ifi_utilities.c
005cb4   6ee6     MOVWF     0xe6,0x0                                                                                        
005cb6   ec34     CALL      0x6668,0x0                                                                                      
005cb8   f033                                                                                                               
005cba   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005cbc   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * FUNCTION NAME: Set_Number_of_Analog_Channels                                   C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * PURPOSE:       Sets the variable used in Get_Analog_Value routine (below)      C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *                to the number of analog channels desired by the user.           C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c initialization, typically                       C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *      Argument            Type    IO   Description                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     -----------          -----   --   -----------                              C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     number_of_channels   alias   I    choose alias from ifi_aliases.h          C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\ifi_utilities.c
005cbe   cfd9     MOVFF     0xfd9,0xfe6    void Set_Number_of_Analog_Channels (unsigned char number_of_channels)            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005cc0   ffe6                                                                                                               
005cc2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005cc4   ffd9                                                                                                               
                                           {                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005cc6   0efe     MOVLW     0xfe             ifi_analog_channels = number_of_channels;                                      C:\first\v2.0\src\FRC2005\ifi_utilities.c
005cc8   cfdb     MOVFF     0xfdb,0x1bd                                                                                     
005cca   f1bd                                                                                                               
005ccc   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005cce   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005cd0   ffd9                                                                                                               
005cd2   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * FUNCTION NAME: Get_Analog_Value                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * PURPOSE:       Reads the analog voltage on an A/D port and returns the         C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *                10-bit value read stored in an unsigned int.                    C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * CALLED FROM:   user_routines.c, typically                                      C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * ARGUMENTS:                                                                     C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *      Argument         Type        IO   Description                             C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     -----------   -------------   --   -----------                             C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *     ADC_channel       alias       I    alias found in ifi_aliases.h            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           * RETURNS:       unsigned int                                                    C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\ifi_utilities.c
005cd4   cfd9     MOVFF     0xfd9,0xfe6    unsigned int Get_Analog_Value (unsigned char ADC_channel)                        C:\first\v2.0\src\FRC2005\ifi_utilities.c
005cd6   ffe6                                                                                                               
005cd8   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005cda   ffd9                                                                                                               
005cdc   0e02     MOVLW     0x2                                                                                             
005cde   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                             unsigned int result;                                                           C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005cec   c1bd     MOVFF     0x1bd,0xfe6      OpenADC( ADC_FOSC_RC & ADC_RIGHT_JUST & ifi_analog_channels,                   C:\first\v2.0\src\FRC2005\ifi_utilities.c
005cee   ffe6                                                                                                               
005ce0   0efe     MOVLW     0xfe                     ADC_channel & ADC_INT_OFF & ADC_VREFPLUS_VDD & ADC_VREFMINUS_VSS );    C:\first\v2.0\src\FRC2005\ifi_utilities.c
005ce2   50db     MOVF      0xdb,0x0,0x0                                                                                    
005ce4   0b7f     ANDLW     0x7f                                                                                            
005ce6   0bfe     ANDLW     0xfe                                                                                            
005ce8   0bfd     ANDLW     0xfd                                                                                            
005cea   6ee6     MOVWF     0xe6,0x0                                                                                        
005cf0   ec47     CALL      0x648e,0x0                                                                                      
005cf2   f032                                                                                                               
005cf4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005cf6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005cf8   0e0a     MOVLW     0xa              Delay10TCYx( 10 );                                                             C:\first\v2.0\src\FRC2005\ifi_utilities.c
005cfa   6ee6     MOVWF     0xe6,0x0                                                                                        
005cfc   ec52     CALL      0x66a4,0x0                                                                                      
005cfe   f033                                                                                                               
005d00   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005d02   ec73     CALL      0x66e6,0x0       ConvertADC();                                                                  C:\first\v2.0\src\FRC2005\ifi_utilities.c
005d04   f033                                                                                                               
005d06   ec07     CALL      0x80e,0x0        while( BusyADC() );                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
005d08   f004                                                                                                               
005d0a   0900     IORLW     0x0                                                                                             
005d0c   e001     BZ        0x5d10                                                                                          
005d0e   d7fb     BRA       0x5d06                                                                                          
005d10   ec9c     CALL      0x6538,0x0       ReadADC();                                                                     C:\first\v2.0\src\FRC2005\ifi_utilities.c
005d12   f032                                                                                                               
005d14   ec70     CALL      0x66e0,0x0       CloseADC();                                                                    C:\first\v2.0\src\FRC2005\ifi_utilities.c
005d16   f033                                                                                                               
005d18   50c4     MOVF      0xc4,0x0,0x0     result = (int) ADRESH << 8 | ADRESL;                                           C:\first\v2.0\src\FRC2005\ifi_utilities.c
005d1a   6e2d     MOVWF     0x2d,0x0                                                                                        
005d1c   c02d     MOVFF     0x2d,0x2e                                                                                       
005d1e   f02e                                                                                                               
005d20   6a2d     CLRF      0x2d,0x0                                                                                        
005d22   50c3     MOVF      0xc3,0x0,0x0                                                                                    
005d24   0100     MOVLB     0x0                                                                                             
005d26   102d     IORWF     0x2d,0x0,0x0                                                                                    
005d28   6e2b     MOVWF     0x2b,0x0                                                                                        
005d2a   c02e     MOVFF     0x2e,0x2c                                                                                       
005d2c   f02c                                                                                                               
005d2e   c02b     MOVFF     0x2b,0xfde                                                                                      
005d30   ffde                                                                                                               
005d32   c02c     MOVFF     0x2c,0xfdd                                                                                      
005d34   ffdd                                                                                                               
005d36   cfde     MOVFF     0xfde,0x2b       return result;                                                                 C:\first\v2.0\src\FRC2005\ifi_utilities.c
005d38   f02b                                                                                                               
005d3a   cfdd     MOVFF     0xfdd,0x2c                                                                                      
005d3c   f02c                                                                                                               
005d3e   c02b     MOVFF     0x2b,0xff3                                                                                      
005d40   fff3                                                                                                               
005d42   c02c     MOVFF     0x2c,0xff4                                                                                      
005d44   fff4                                                                                                               
005d46   d000     BRA       0x5d48                                                                                          
005d48   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\FRC2005\ifi_utilities.c
005d4a   ffe1                                                                                                               
005d4c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005d4e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005d50   ffd9                                                                                                               
005d52   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           /******************************************************************************/ C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           /******************************************************************************/ C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           /******************************************************************************/ C:\first\v2.0\src\FRC2005\ifi_utilities.c
                                           /******************************************************************************* C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           * FILE NAME: ifi_startup.c                                                       C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           * DESCRIPTION:                                                                   C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           *  This file contains important startup code.                                    C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           * USAGE:                                                                         C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           *  This file should not be modified at all by the user.                          C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           *                                                                                C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           *  DO NOT MODIFY THIS FILE!                                                      C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           *******************************************************************************/ C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           #include "ifi_default.h"                                                         C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           extern void Clear_Memory (void);                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           extern void main (void);                                                         C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           void _entry (void);     /* prototype for the startup function */                 C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           void _startup (void);                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           void _do_cinit (void);  /* prototype for the initialized data setup */           C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           extern volatile near unsigned long short TBLPTR;                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           extern near unsigned FSR0;                                                       C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           extern near char FPFLAGS;                                                        C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           #define RND 6                                                                    C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           #pragma code _entry_scn=RESET_VECTOR                                             C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           void _entry (void)                                                               C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\ifi_startup.c
000800   ef24     GOTO      0x6648         _asm goto _startup _endasm                                                       C:\first\v2.0\src\FRC2005\ifi_startup.c
000802   f033                                                                                                               
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
000804   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           #pragma code _startup_scn                                                        C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           void _startup (void)                                                             C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             _asm                                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
                                               /* Initialize the stack pointer */                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
006648   ee16     LFSR      0x1,0x600          lfsr 1, _stack lfsr 2, _stack clrf TBLPTRU, 0 /* 1st silicon doesn't do this on POR */ C:\first\v2.0\src\FRC2005\ifi_startup.c
00664a   f000                                                                                                               
00664c   ee26     LFSR      0x2,0x600                                                                                       
00664e   f000                                                                                                               
006650   6af8     CLRF      0xf8,0x0                                                                                        
006652   9c26     BCF       0x26,0x6,0x0       bcf  FPFLAGS,RND,0 /* Initialize rounding flag for floating point libs */    C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                               /* initialize the flash memory access configuration. this is harmless */     C:\first\v2.0\src\FRC2005\ifi_startup.c
                                               /* for non-flash devices, so we do it on all parts. */                       C:\first\v2.0\src\FRC2005\ifi_startup.c
006654   8ea6     BSF       0xa6,0x7,0x0       bsf 0xa6, 7, 0                                                               C:\first\v2.0\src\FRC2005\ifi_startup.c
006656   9ca6     BCF       0xa6,0x6,0x0       bcf 0xa6, 6, 0                                                               C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             _endasm                                                                        C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           loop:                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
006658   ec88     CALL      0x5110,0x0      	Clear_Memory();                                                                C:\first\v2.0\src\FRC2005\ifi_startup.c
00665a   f028                                                                                                               
00665c   ec51     CALL      0x60a2,0x0       _do_cinit ();                                                                  C:\first\v2.0\src\FRC2005\ifi_startup.c
00665e   f030                                                                                                               
                                             /* Call the user's main routine */                                             C:\first\v2.0\src\FRC2005\ifi_startup.c
006660   eced     CALL      0x65da,0x0       main ();                                                                       C:\first\v2.0\src\FRC2005\ifi_startup.c
006662   f032                                                                                                               
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
006664   d7f9     BRA       0x6658           goto loop;                                                                     C:\first\v2.0\src\FRC2005\ifi_startup.c
006666   0012     RETURN    0x0            }                               /* end _startup() */                             C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           /* MPLAB-C18 initialized data memory support */                                  C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           /* The linker will populate the _cinit table */                                  C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           extern far rom struct                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             unsigned short num_init;                                                       C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             struct _init_entry                                                             C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\ifi_startup.c
                                               unsigned long from;                                                          C:\first\v2.0\src\FRC2005\ifi_startup.c
                                               unsigned long to;                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                               unsigned long size;                                                          C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             entries[];                                                                     C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           }                                                                                C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           _cinit;                                                                          C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           #pragma code _cinit_scn                                                          C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           void                                                                             C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           _do_cinit (void)                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             /* we'll make the assumption in the following code that these statics          C:\first\v2.0\src\FRC2005\ifi_startup.c
                                              * will be allocated into the same bank.                                       C:\first\v2.0\src\FRC2005\ifi_startup.c
                                              */                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             static short long prom;                                                        C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             static unsigned short curr_byte;                                               C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             static unsigned short curr_entry;                                              C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             static short long data_ptr;                                                    C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             /* Initialized data... */                                                      C:\first\v2.0\src\FRC2005\ifi_startup.c
0060a2   0e1e     MOVLW     0x1e             TBLPTR = (short long)&_cinit;                                                  C:\first\v2.0\src\FRC2005\ifi_startup.c
0060a4   6ef6     MOVWF     0xf6,0x0                                                                                        
0060a6   0e08     MOVLW     0x8                                                                                             
0060a8   6ef7     MOVWF     0xf7,0x0                                                                                        
0060aa   0e00     MOVLW     0x0                                                                                             
0060ac   6ef8     MOVWF     0xf8,0x0                                                                                        
                                             _asm                                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
0060ae   0101     MOVLB     0x1                movlb data_ptr                                                               C:\first\v2.0\src\FRC2005\ifi_startup.c
0060b0   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
0060b2   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
0060b4   6fc7     MOVWF     0xc7,0x1           movwf curr_entry, 1                                                          C:\first\v2.0\src\FRC2005\ifi_startup.c
0060b6   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
0060b8   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
0060ba   6fc8     MOVWF     0xc8,0x1           movwf curr_entry+1, 1                                                        C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             _endasm                                                                        C:\first\v2.0\src\FRC2005\ifi_startup.c
                                               test:                                                                        C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             _asm                                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
0060bc   e103     BNZ       0x60c4              bnz 3                                                                       C:\first\v2.0\src\FRC2005\ifi_startup.c
0060be   67c7     TSTFSZ    0xc7,0x1           tstfsz curr_entry, 1                                                         C:\first\v2.0\src\FRC2005\ifi_startup.c
0060c0   d001     BRA       0x60c4             bra 1                                                                        C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             _endasm                                                                        C:\first\v2.0\src\FRC2005\ifi_startup.c
0060c2   d03d     BRA       0x613e           goto done;                                                                     C:\first\v2.0\src\FRC2005\ifi_startup.c
                                               /* Count down so we only have to look up the data in _cinit                  C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                * once.                                                                     C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                *                                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                * At this point we know that TBLPTR points to the top of the current        C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                * entry in _cinit, so we can just start reading the from, to, and           C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                * size values.                                                              C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                */                                                                          C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             _asm                                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             /* read the source address */                                                  C:\first\v2.0\src\FRC2005\ifi_startup.c
0060c4   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
0060c6   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
0060c8   6fc2     MOVWF     0xc2,0x1           movwf prom, 1                                                                C:\first\v2.0\src\FRC2005\ifi_startup.c
0060ca   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
0060cc   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
0060ce   6fc3     MOVWF     0xc3,0x1           movwf prom+1, 1                                                              C:\first\v2.0\src\FRC2005\ifi_startup.c
0060d0   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
0060d2   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
0060d4   6fc4     MOVWF     0xc4,0x1           movwf prom+2, 1                                                              C:\first\v2.0\src\FRC2005\ifi_startup.c
                                               /* skip a byte since it's stored as a 32bit int */                           C:\first\v2.0\src\FRC2005\ifi_startup.c
0060d6   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
                                               /* read the destination address directly into FSR0 */                        C:\first\v2.0\src\FRC2005\ifi_startup.c
0060d8   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
0060da   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
0060dc   6ee9     MOVWF     0xe9,0x0           movwf FSR0L, 0                                                               C:\first\v2.0\src\FRC2005\ifi_startup.c
0060de   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
0060e0   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
0060e2   6eea     MOVWF     0xea,0x0           movwf FSR0H, 0                                                               C:\first\v2.0\src\FRC2005\ifi_startup.c
                                               /* skip two bytes since it's stored as a 32bit int */                        C:\first\v2.0\src\FRC2005\ifi_startup.c
0060e4   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
0060e6   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
                                               /* read the destination address directly into FSR0 */                        C:\first\v2.0\src\FRC2005\ifi_startup.c
0060e8   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
0060ea   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
0060ec   6fc5     MOVWF     0xc5,0x1           movwf curr_byte, 1                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
0060ee   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
0060f0   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
0060f2   6fc6     MOVWF     0xc6,0x1           movwf curr_byte+1, 1                                                         C:\first\v2.0\src\FRC2005\ifi_startup.c
                                               /* skip two bytes since it's stored as a 32bit int */                        C:\first\v2.0\src\FRC2005\ifi_startup.c
0060f4   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
0060f6   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             _endasm                                                                        C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             /* the table pointer now points to the next entry. Save it                     C:\first\v2.0\src\FRC2005\ifi_startup.c
                                              * off since we'll be using the table pointer to do the copying                C:\first\v2.0\src\FRC2005\ifi_startup.c
                                              * for the entry.                                                              C:\first\v2.0\src\FRC2005\ifi_startup.c
                                              */                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
0060f8   cff6     MOVFF     0xff6,0x1c9      data_ptr = TBLPTR;                                                             C:\first\v2.0\src\FRC2005\ifi_startup.c
0060fa   f1c9                                                                                                               
0060fc   cff7     MOVFF     0xff7,0x1ca                                                                                     
0060fe   f1ca                                                                                                               
006100   cff8     MOVFF     0xff8,0x1cb                                                                                     
006102   f1cb                                                                                                               
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             /* now assign the source address to the table pointer */                       C:\first\v2.0\src\FRC2005\ifi_startup.c
006104   c1c2     MOVFF     0x1c2,0xff6      TBLPTR = prom;                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
006106   fff6                                                                                                               
006108   c1c3     MOVFF     0x1c3,0xff7                                                                                     
00610a   fff7                                                                                                               
00610c   c1c4     MOVFF     0x1c4,0xff8                                                                                     
00610e   fff8                                                                                                               
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             /* do the copy loop */                                                         C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             _asm                                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                     /* determine if we have any more bytes to copy */                      C:\first\v2.0\src\FRC2005\ifi_startup.c
006110   0101     MOVLB     0x1                movlb curr_byte                                                              C:\first\v2.0\src\FRC2005\ifi_startup.c
006112   53c5     MOVF      0xc5,0x1,0x1       movf  curr_byte, 1, 1                                                        C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           copy_loop:                                                                       C:\first\v2.0\src\FRC2005\ifi_startup.c
006114   e102     BNZ       0x611a             bnz 2 /* copy_one_byte */                                                    C:\first\v2.0\src\FRC2005\ifi_startup.c
006116   53c6     MOVF      0xc6,0x1,0x1       movf  curr_byte + 1, 1, 1                                                    C:\first\v2.0\src\FRC2005\ifi_startup.c
006118   e007     BZ        0x6128             bz 7  /* done_copying */                                                     C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           copy_one_byte:                                                                   C:\first\v2.0\src\FRC2005\ifi_startup.c
00611a   0009     TBLRDPOSTINC                 tblrdpostinc                                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
00611c   50f5     MOVF      0xf5,0x0,0x0       movf  TABLAT, 0, 0                                                           C:\first\v2.0\src\FRC2005\ifi_startup.c
00611e   6eee     MOVWF     0xee,0x0           movwf POSTINC0, 0                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                               /* decrement byte counter */                                                 C:\first\v2.0\src\FRC2005\ifi_startup.c
006120   07c5     DECF      0xc5,0x1,0x1       decf  curr_byte, 1, 1                                                        C:\first\v2.0\src\FRC2005\ifi_startup.c
006122   e2f8     BC        0x6114             bc -8   /* copy_loop */                                                      C:\first\v2.0\src\FRC2005\ifi_startup.c
006124   07c6     DECF      0xc6,0x1,0x1       decf  curr_byte + 1, 1, 1                                                    C:\first\v2.0\src\FRC2005\ifi_startup.c
006126   d7f9     BRA       0x611a             bra -7  /* copy_one_byte */                                                  C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           done_copying:                                                                    C:\first\v2.0\src\FRC2005\ifi_startup.c
                                             _endasm                                                                        C:\first\v2.0\src\FRC2005\ifi_startup.c
                                                 /* restore the table pointer for the next entry */                         C:\first\v2.0\src\FRC2005\ifi_startup.c
006128   c1c9     MOVFF     0x1c9,0xff6      TBLPTR = data_ptr;                                                             C:\first\v2.0\src\FRC2005\ifi_startup.c
00612a   fff6                                                                                                               
00612c   c1ca     MOVFF     0x1ca,0xff7                                                                                     
00612e   fff7                                                                                                               
006130   c1cb     MOVFF     0x1cb,0xff8                                                                                     
006132   fff8                                                                                                               
                                             /* next entry... */                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
006134   0101     MOVLB     0x1              curr_entry--;                                                                  C:\first\v2.0\src\FRC2005\ifi_startup.c
006136   07c7     DECF      0xc7,0x1,0x1                                                                                    
006138   0e00     MOVLW     0x0                                                                                             
00613a   5bc8     SUBWFB    0xc8,0x1,0x1                                                                                    
00613c   d7bf     BRA       0x60bc           goto test;                                                                     C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           done:                                                                            C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           ;                                                                                C:\first\v2.0\src\FRC2005\ifi_startup.c
00613e   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\FRC2005\ifi_startup.c
                                           /****************************************************************************************************** C:\first\v2.0\src\FRC2005\user_camera.c
                                           FILE NAME: user_camera.c                                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           MODIFICATION HISTORY:                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           		11/28/04 First Version by Anthony Rowe                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           DESCRIPTION:                                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                           	This file contains a set of function that communicate with the CMUcam.  It also requires a  C:\first\v2.0\src\FRC2005\user_camera.c
                                           	modification to the PicSerialdrv.c file that is standard with the FRC distribution. This  C:\first\v2.0\src\FRC2005\user_camera.c
                                           	modification allows the uart interrupt routine to buffer the CMUcam packets.    C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           LIMITATION:                                                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                             Sometimes, after pressing the reset button, the camera will not come up correctly.  If you  C:\first\v2.0\src\FRC2005\user_camera.c
                                             power cycle the camera when it is stuck - it will work correctly.  It seems to always work C:\first\v2.0\src\FRC2005\user_camera.c
                                             from an RC power up.                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           ******************************************************************************************************/ C:\first\v2.0\src\FRC2005\user_camera.c
                                           #include <stdio.h>                                                               C:\first\v2.0\src\FRC2005\user_camera.c
                                           #include "user_Serialdrv.h"                                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                           #include "user_camera.h"                                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           #if _USE_CMU_CAMERA                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                           extern unsigned int parse_mode;                                                  C:\first\v2.0\src\FRC2005\user_camera.c
                                           extern volatile unsigned int cam_index_ptr;                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                           extern volatile unsigned int data_rdy;                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                           unsigned char cam_uart_buffer[64];                                               C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           // Different exposure values                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                           int camera_exp_yellow;                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                           int camera_exp_green;                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           int camera_exp_red;                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           // This keeps the state of the servo handy, for when the camera is reset like when tracking a new color C:\first\v2.0\src\FRC2005\user_camera.c
                                           int servo_mode=0;                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                           int servo_pan=127;                                                               C:\first\v2.0\src\FRC2005\user_camera.c
                                           int servo_tilt=127;                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           cam_struct cam;   // Main camera struct that is defined in camera.h, use this to access all camera data C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           // AEC - Automatic Exposure Control                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                           // AGC - Automatic Gain Control                                                  C:\first\v2.0\src\FRC2005\user_camera.c
                                           // RGB - Red Green Blue color space                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                           // YCrCb - Another color space (not RGB), that is less effected by lighting changes C:\first\v2.0\src\FRC2005\user_camera.c
                                           rom const char *noise_filter = "nf 6";  // Set noise filter to build up a tolerance to stray pixels C:\first\v2.0\src\FRC2005\user_camera.c
                                           rom const char *agc_level = "CR 0 32"; // Set AGC gain to mid level              C:\first\v2.0\src\FRC2005\user_camera.c
                                           rom const char *yCrCb_mode = "CR 18 0"; // Set into yCrCb mode instead of RGB    C:\first\v2.0\src\FRC2005\user_camera.c
                                           rom const char *track_green = "TC 85 120 0 255 80 150"; // Track green color in yCrCb mode C:\first\v2.0\src\FRC2005\user_camera.c
                                           														// Cr (85, 120)                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                           														// Cb (80, 150)                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                           														// Y  (0, 255)                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                           rom const char *track_yellow = "TC 100 255 75 255 0 20";// Track yellow color in RGB mode C:\first\v2.0\src\FRC2005\user_camera.c
                                           														// R (100, 255)                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                           														// G (75, 255 )                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                           														// B (0 , 20 )                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                           rom const char *track_white = "TC 150 255 150 255 50 255";// Track yellow color in RGB mode C:\first\v2.0\src\FRC2005\user_camera.c
                                           rom const char *track_red = "TC 190 255 0 255 0 40";// Track red color in YCrCb mode C:\first\v2.0\src\FRC2005\user_camera.c
                                           rom const char *track_blue = "TC 0 150 0 150 70 255";// Track blue color in RGB mode C:\first\v2.0\src\FRC2005\user_camera.c
                                           													                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                           rom const char *aec_disable = "CR 41 128";                                       C:\first\v2.0\src\FRC2005\user_camera.c
                                           rom const char *manual_agc = "CR 19 32";                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                           rom const char *raw_mode = "rm 1";                                               C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           int camera_find_color(int color)                                                 C:\first\v2.0\src\FRC2005\user_camera.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             unsigned char buf_str[16];   // buffer used for exposure register value        C:\first\v2.0\src\FRC2005\user_camera.c
                                             int chk=0,correct;                                                             C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf_str[0]='C'; buf_str[1]='R'; buf_str[2]=' '; buf_str[3]='1'; buf_str[4]='6'; buf_str[5]=' '; C:\first\v2.0\src\FRC2005\user_camera.c
                                             // This is the start of the CR 16 xx string that gets filled in below          C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                             camera_stop();          // Stop the camera if it is already tracking           C:\first\v2.0\src\FRC2005\user_camera.c
                                             chk+=camera_reset();      // Reset the camera, and make sure it reset (actually check for true return) C:\first\v2.0\src\FRC2005\user_camera.c
                                             if(servo_mode) camera_auto_servo(1);  // Put it into servo mode if need be     C:\first\v2.0\src\FRC2005\user_camera.c
                                             chk+=camera_const_cmd(noise_filter);  // Enable the same noise filter for all tracking C:\first\v2.0\src\FRC2005\user_camera.c
                                             chk+=camera_const_cmd(raw_mode);      // Put into raw mode, this makes it send output numbers as bytes instead C:\first\v2.0\src\FRC2005\user_camera.c
                                             // of being ascii readable                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                             switch(color)                                                                  C:\first\v2.0\src\FRC2005\user_camera.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             case RED:                                                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                               correct=9;  // This is the total number of commands that need to return true as a checksum C:\first\v2.0\src\FRC2005\user_camera.c
                                               // Increase this if you add more camera commands or it will trigger an error below C:\first\v2.0\src\FRC2005\user_camera.c
                                               write_int_to_buffer(&(buf_str[6]),camera_exp_red);                           C:\first\v2.0\src\FRC2005\user_camera.c
                                               // This writes an integer value into the buffer, after the "CR 16"           C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_const_cmd(yCrCb_mode);  // YCrCb mode!!!                         C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_const_cmd(aec_disable);                                          C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_const_cmd(manual_agc);                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_buffer_cmd( buf_str );  // Note camera_buffer_cmd, not camera_const_cmd C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_const_cmd(agc_level);                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_const_cmd(track_red);                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                               break;                                                                       C:\first\v2.0\src\FRC2005\user_camera.c
                                             case YELLOW: case WHITE: case BLUE:   // Yellow, White, and Blue use similiar settings C:\first\v2.0\src\FRC2005\user_camera.c
                                               correct=8;                                                                   C:\first\v2.0\src\FRC2005\user_camera.c
                                               write_int_to_buffer(&(buf_str[6]),camera_exp_yellow);                        C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_const_cmd(aec_disable);                                          C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_const_cmd(manual_agc);                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_const_cmd(agc_level);                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_buffer_cmd( buf_str );                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                               if( color==YELLOW ) chk+=camera_const_cmd( track_yellow );                   C:\first\v2.0\src\FRC2005\user_camera.c
                                               if( color==WHITE ) chk+=camera_const_cmd( track_white );                     C:\first\v2.0\src\FRC2005\user_camera.c
                                               if( color==BLUE ) chk+=camera_const_cmd( track_blue );                       C:\first\v2.0\src\FRC2005\user_camera.c
                                               break;                                                                       C:\first\v2.0\src\FRC2005\user_camera.c
                                             case GREEN:                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                               correct=9;                                                                   C:\first\v2.0\src\FRC2005\user_camera.c
                                               write_int_to_buffer(&(buf_str[6]),camera_exp_green);                         C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_const_cmd(yCrCb_mode);    // YCrCb mode!!!                       C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_const_cmd(aec_disable);                                          C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_const_cmd(manual_agc);                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_buffer_cmd( buf_str );                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_const_cmd(agc_level);                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_const_cmd(track_green);                                          C:\first\v2.0\src\FRC2005\user_camera.c
                                               break;                                                                       C:\first\v2.0\src\FRC2005\user_camera.c
                                             default:                                                                       C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                               return 0;                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                               break;                                                                       C:\first\v2.0\src\FRC2005\user_camera.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             // Do not add commands below here, because it will interrupt tracking          C:\first\v2.0\src\FRC2005\user_camera.c
                                             if(chk!=correct)  // Checks to see if the correct number of camera commands returned true C:\first\v2.0\src\FRC2005\user_camera.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               printf( "* Error setting color tracking parameters\rExpected %d, and got %d\r",correct,chk ); C:\first\v2.0\src\FRC2005\user_camera.c
                                           #if FREEZE_ON_ERROR                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               while(1);                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                           #endif                                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                               return 0;  // only if not FREEZE_ON_ERROR                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             parse_mode=1; // Now waiting for Track Color Packet in interrupt               C:\first\v2.0\src\FRC2005\user_camera.c
                                             return 1;                                                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           /**********************************************************************          C:\first\v2.0\src\FRC2005\user_camera.c
                                           camera_set_servos                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           	This function sets the pan and the tilt servo position.                         C:\first\v2.0\src\FRC2005\user_camera.c
                                           	Note, that this function will stop the camera from tracking.                    C:\first\v2.0\src\FRC2005\user_camera.c
                                           	If you are tilting the head to see if something is there, you need              C:\first\v2.0\src\FRC2005\user_camera.c
                                           	to send a fresh track command.  Maybe it would be more efficient to             C:\first\v2.0\src\FRC2005\user_camera.c
                                           	use the RC's servo output.                                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                           	                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                           	int pan  - servo pan value from 46 to 210, with 128 as the middle               C:\first\v2.0\src\FRC2005\user_camera.c
                                           			 - Yes, we know that seems strange, but there is a good reason                C:\first\v2.0\src\FRC2005\user_camera.c
                                           	int tilt - servo tilt value from 46 to 210, with 128 as the middle              C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           	Return: 0 missing ACK, or timeout                                               C:\first\v2.0\src\FRC2005\user_camera.c
                                           			1 Both commands are good                                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           **********************************************************************/          C:\first\v2.0\src\FRC2005\user_camera.c
                                           int camera_set_servos( int pan, int tilt )                                       C:\first\v2.0\src\FRC2005\user_camera.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             int chk=0;                                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                             unsigned char buf[32];                                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                             servo_pan=pan;                                                                 C:\first\v2.0\src\FRC2005\user_camera.c
                                             servo_tilt=tilt;                                                               C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[0]='S';                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[1]='V';                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[2]=' ';                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[3]='0';  // Servo 0 is usually the pan                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[4]=' ';                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             camera_stop();                                                                 C:\first\v2.0\src\FRC2005\user_camera.c
                                             write_int_to_buffer(&buf[5], pan );                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                             chk+=camera_buffer_cmd(buf);                                                   C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[3]='1';  // Servo 1, yes there are up to 5 servos                          C:\first\v2.0\src\FRC2005\user_camera.c
                                             write_int_to_buffer(&buf[5], tilt );                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                             chk+=camera_buffer_cmd(buf);                                                   C:\first\v2.0\src\FRC2005\user_camera.c
                                             if(chk!=2) return 0;                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                             return 1;                                                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           /**********************************************************************          C:\first\v2.0\src\FRC2005\user_camera.c
                                           write_int_to_buffer                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           This function takes a buffer and adds an ascii value to the end of it.           C:\first\v2.0\src\FRC2005\user_camera.c
                                           	unsigned char *buf - Location in buffer to start appending a value              C:\first\v2.0\src\FRC2005\user_camera.c
                                           	int val	- the integer value that is to be added to the buffer                   C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           **********************************************************************/          C:\first\v2.0\src\FRC2005\user_camera.c
                                           void write_int_to_buffer(unsigned char *buf, int val )                           C:\first\v2.0\src\FRC2005\user_camera.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             int digit;                                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                             int index;                                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                             index=0;                                                                       C:\first\v2.0\src\FRC2005\user_camera.c
                                             digit=val/100;                                                                 C:\first\v2.0\src\FRC2005\user_camera.c
                                             digit=digit%10; // This grabs the hundreds place digit                         C:\first\v2.0\src\FRC2005\user_camera.c
                                             if(digit>0)    // If it is a zero, we don't need to print it                   C:\first\v2.0\src\FRC2005\user_camera.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               buf[index]=digit+48;                                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                               index++;                                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             digit=val/10;                                                                  C:\first\v2.0\src\FRC2005\user_camera.c
                                             digit=digit%10;    // This grabs the tens place digit                          C:\first\v2.0\src\FRC2005\user_camera.c
                                             if(index>0 || digit>0 )  // If the hundreds place was a 0 and this is also     C:\first\v2.0\src\FRC2005\user_camera.c
                                             {					// a 0, skip it, else print the number                                   C:\first\v2.0\src\FRC2005\user_camera.c
                                               buf[index]=digit+48;                                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                               index++;                                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             digit=val%10;  // Print out the ones place digit no matter what                C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[index]=digit+48;                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                             index++;                                                                       C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[index]=0;  // Add a null character to terminate the string                 C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           /**********************************************************************          C:\first\v2.0\src\FRC2005\user_camera.c
                                           camera_init                                                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           This function checks to see if the camera is available, and sets                 C:\first\v2.0\src\FRC2005\user_camera.c
                                           the 3 predefined exposures that should be given from the calibration             C:\first\v2.0\src\FRC2005\user_camera.c
                                           program.                                                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           	exp_yellow - exposure value for yellow, white and blue RGB                      C:\first\v2.0\src\FRC2005\user_camera.c
                                           	exp_green  - exposure value for green in YCrCb                                  C:\first\v2.0\src\FRC2005\user_camera.c
                                           	exp_red	   - exposure value for red in YCrCb                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           **********************************************************************/          C:\first\v2.0\src\FRC2005\user_camera.c
                                           int camera_init(int exp_yellow, int exp_green, int exp_red)                      C:\first\v2.0\src\FRC2005\user_camera.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             int r;                                                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                             if(camera_reset()==0)                                                          C:\first\v2.0\src\FRC2005\user_camera.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               printf( "\r\rCamera not found!\rPlease check, power and cable connections.\r\r" ); C:\first\v2.0\src\FRC2005\user_camera.c
                                           #if FREEZE_ON_ERROR                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                           		  while(1);                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                           #endif                                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                               return 0;                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             camera_exp_yellow=exp_yellow;                                                  C:\first\v2.0\src\FRC2005\user_camera.c
                                             camera_exp_green=exp_green;                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             camera_exp_red=exp_red;                                                        C:\first\v2.0\src\FRC2005\user_camera.c
                                             r=0;                                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                             r+=camera_const_cmd(aec_disable ); // Disable AEC                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             r+=camera_const_cmd(manual_agc ); // Enable manual AEC and AGC                 C:\first\v2.0\src\FRC2005\user_camera.c
                                             r+=camera_const_cmd(noise_filter ); // Set noise filter to 6 pixels            C:\first\v2.0\src\FRC2005\user_camera.c
                                             r+=camera_const_cmd(raw_mode ); // Set noise filter to 6 pixels                C:\first\v2.0\src\FRC2005\user_camera.c
                                             if(r<4)                                                                        C:\first\v2.0\src\FRC2005\user_camera.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               printf( "\r\rOne of the camera settings on initilization failed\r\r" );      C:\first\v2.0\src\FRC2005\user_camera.c
                                           #if FREEZE_ON_ERROR                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               while(1);                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                           #endif                                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             return 1;                                                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           /******************************************************************************** C:\first\v2.0\src\FRC2005\user_camera.c
                                           camera_track_update                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           This function should be called after a color tracking call. The interrupt        C:\first\v2.0\src\FRC2005\user_camera.c
                                           will fill this with a T packet from the camera if parse_mode is set to 1.        C:\first\v2.0\src\FRC2005\user_camera.c
                                           parse_mode is set to 1 by track color.                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           	Return:  1 when new data is ready (only read packet when 1)                     C:\first\v2.0\src\FRC2005\user_camera.c
                                           			 0 when waiting for the camera                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                           *********************************************************************************/ C:\first\v2.0\src\FRC2005\user_camera.c
                                           int camera_track_update(void)                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             int i;                                                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                             if(wait_for_data()==0) return 0;                                               C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                             if(cam_uart_buffer[0]=='T' && cam_index_ptr>=9)                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               cam.x=cam_uart_buffer[1];                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                               cam.y=cam_uart_buffer[2];                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                               cam.x1=cam_uart_buffer[3];                                                   C:\first\v2.0\src\FRC2005\user_camera.c
                                               cam.y1=cam_uart_buffer[4];                                                   C:\first\v2.0\src\FRC2005\user_camera.c
                                               cam.x2=cam_uart_buffer[5];                                                   C:\first\v2.0\src\FRC2005\user_camera.c
                                               cam.y2=cam_uart_buffer[6];                                                   C:\first\v2.0\src\FRC2005\user_camera.c
                                               cam.size=cam_uart_buffer[7];                                                 C:\first\v2.0\src\FRC2005\user_camera.c
                                               cam.conf=cam_uart_buffer[8];                                                 C:\first\v2.0\src\FRC2005\user_camera.c
                                               if(cam_index_ptr>9)                                                          C:\first\v2.0\src\FRC2005\user_camera.c
                                               {                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                                 cam.pan_servo=cam_uart_buffer[9];                                          C:\first\v2.0\src\FRC2005\user_camera.c
                                                 cam.tilt_servo=cam_uart_buffer[10];                                        C:\first\v2.0\src\FRC2005\user_camera.c
                                               }                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                               reset_rx_buffer();                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                               return 1;                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             // Bad data in buffer                                                          C:\first\v2.0\src\FRC2005\user_camera.c
                                             reset_rx_buffer();                                                             C:\first\v2.0\src\FRC2005\user_camera.c
                                             return 0;                                                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           /**********************************************************************          C:\first\v2.0\src\FRC2005\user_camera.c
                                           camera_configure                                                                 C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           This function shows how you can set the exposure gain and color_mode             C:\first\v2.0\src\FRC2005\user_camera.c
                                           of the camera manually.                                                          C:\first\v2.0\src\FRC2005\user_camera.c
                                           	int exposure - sets the exposure level                                          C:\first\v2.0\src\FRC2005\user_camera.c
                                           				 - lower values make the image darker                                        C:\first\v2.0\src\FRC2005\user_camera.c
                                           	int gain	 - this sets the color gain of the image                               C:\first\v2.0\src\FRC2005\user_camera.c
                                           				 - lower values make the image less intense                                  C:\first\v2.0\src\FRC2005\user_camera.c
                                           	int color_mode - RGB puts the camera in RGB mode                                C:\first\v2.0\src\FRC2005\user_camera.c
                                           				   - YCrCb puts the camera in YCrCb mode                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                               Return: 1 ACK                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                           			0 no ACK, maybe a NCK or a timeout                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           **********************************************************************/          C:\first\v2.0\src\FRC2005\user_camera.c
                                           int camera_configure( int exposure, int gain, int color_mode )                   C:\first\v2.0\src\FRC2005\user_camera.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             unsigned char buf[32];                                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                             int chk=0;                                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                             if(color_mode==RGB)                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_const_cmd( "cr 18 8" );  // RGB mode                             C:\first\v2.0\src\FRC2005\user_camera.c
                                             else                                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                               chk+=camera_const_cmd( yCrCb_mode );  // YCrCb mode                          C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                             chk+=camera_const_cmd(aec_disable);  // Disable automatic AEC                  C:\first\v2.0\src\FRC2005\user_camera.c
                                             chk+=camera_const_cmd(manual_agc);   // Allow manual settings                  C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[0]='C';                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[1]='R';                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[2]=' ';                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[3]='1';                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[4]='6';                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[5]=' ';                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             write_int_to_buffer(&buf[6], exposure ); // Send the constructed exposure      C:\first\v2.0\src\FRC2005\user_camera.c
                                             chk+=camera_buffer_cmd( buf );                                                 C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[0]='C';                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[1]='R';                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[2]=' ';                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[3]='0';                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             buf[4]=' ';                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             write_int_to_buffer(&buf[5], gain );  // Send the constructed gain value       C:\first\v2.0\src\FRC2005\user_camera.c
                                             chk+=camera_buffer_cmd( buf );                                                 C:\first\v2.0\src\FRC2005\user_camera.c
                                             if(chk<5)                                                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               printf( "\r\rOne of the camera settings in camera_configure failed\r\r" );   C:\first\v2.0\src\FRC2005\user_camera.c
                                           #if FREEZE_ON_ERROR                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               while(1);                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                           #endif                                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           /**********************************************************************          C:\first\v2.0\src\FRC2005\user_camera.c
                                           camera_getACK                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           This function sends the final '\r' character and waits to see if the             C:\first\v2.0\src\FRC2005\user_camera.c
                                           camera returns an ACK or a NCK. This only works when parse_mode = 0 and          C:\first\v2.0\src\FRC2005\user_camera.c
                                           should be used for control commands to the camera, and not for tracking          C:\first\v2.0\src\FRC2005\user_camera.c
                                           commands.                                                                        C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                               Return: 1 ACK                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                           			0 no ACK, maybe a NCK or a timeout                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           **********************************************************************/          C:\first\v2.0\src\FRC2005\user_camera.c
                                           int camera_getACK(void)                                                          C:\first\v2.0\src\FRC2005\user_camera.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             int cnt,i;                                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                             Serial_Write(CAMERA_PORT,"\r",1);                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             reset_rx_buffer();                                                             C:\first\v2.0\src\FRC2005\user_camera.c
                                             if( wait_for_data()==0) return 0;                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             if(cam_uart_buffer[0]==65)                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               reset_rx_buffer();                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                               return 1;                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             if(cam_uart_buffer[0]==84)                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               return 2;                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             reset_rx_buffer();                                                             C:\first\v2.0\src\FRC2005\user_camera.c
                                             return 0;                                                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           /**********************************************************************          C:\first\v2.0\src\FRC2005\user_camera.c
                                           camera_auto_servo                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           This function turns on auto servo mode.  It also sets servo_mode=1 or 0          C:\first\v2.0\src\FRC2005\user_camera.c
                                           which allows commands that reset the camera, to make sure they call this         C:\first\v2.0\src\FRC2005\user_camera.c
                                           function again to restore the lost servo state.                                  C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                                int enable  - 1 for on, 0 for off                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           	 Return: 0 - command failed with NCK or timeout                                 C:\first\v2.0\src\FRC2005\user_camera.c
                                           			 1 - got ACK and everything is good                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                           **********************************************************************/          C:\first\v2.0\src\FRC2005\user_camera.c
                                           int camera_auto_servo(int enable)                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             int i;                                                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                             if (enable)                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               i = camera_const_cmd( "SP 50 25 15 48 24 11" );                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               i &= camera_const_cmd( "SM 15" );                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                               camera_set_servos( servo_pan, servo_tilt );                                  C:\first\v2.0\src\FRC2005\user_camera.c
                                               servo_mode = 1;                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               return i;                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             else                                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               servo_mode=0;                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                               return camera_const_cmd( "SM 0" );                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           /**********************************************************************          C:\first\v2.0\src\FRC2005\user_camera.c
                                           camera_const_cmd                                                                 C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           This function is used to send constant string commands to the camera.            C:\first\v2.0\src\FRC2005\user_camera.c
                                           This means you have to send something in quotes.  If you are sending from        C:\first\v2.0\src\FRC2005\user_camera.c
                                           a buffer, you must use camera_buffer_cmd.  See camera_find_color for examples.   C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           		rom const char *cmd_str - This is a constant string to be sent to the camera   C:\first\v2.0\src\FRC2005\user_camera.c
                                           								- It does not require the '\r' at the end                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           		Return: 0 - no ACK, or timed out                                               C:\first\v2.0\src\FRC2005\user_camera.c
                                           				1 - ACK, the command is good                                                 C:\first\v2.0\src\FRC2005\user_camera.c
                                           **********************************************************************/          C:\first\v2.0\src\FRC2005\user_camera.c
                                           int camera_const_cmd(rom const char *cmd_str)                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             int i;                                                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                             int len;                                                                       C:\first\v2.0\src\FRC2005\user_camera.c
                                             for (i=0; i<MAX_BUF_SIZE; i++ )                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               if (cmd_str[i]=='\r' || cmd_str[i]==0 )                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                               {                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                                 len = i;                                                                   C:\first\v2.0\src\FRC2005\user_camera.c
                                                 //	cmd_str[i]=0;                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                                 break;                                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                               }                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             Serial_Write(CAMERA_PORT,cmd_str,len);                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                             return camera_getACK();                                                        C:\first\v2.0\src\FRC2005\user_camera.c
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           /**********************************************************************          C:\first\v2.0\src\FRC2005\user_camera.c
                                           camera_const_cmd                                                                 C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           This function is used to send a string from memory to the camera. It is          C:\first\v2.0\src\FRC2005\user_camera.c
                                           camera_const_cmd's twin, but is used for arrays that you make yourself.          C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           		unsigned char *cmd_str - This is a string to be sent to the camera             C:\first\v2.0\src\FRC2005\user_camera.c
                                           								- It does not require the '\r' at the end                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           		Return: 0 - no ACK, or timed out                                               C:\first\v2.0\src\FRC2005\user_camera.c
                                           				1 - ACK, the command is good                                                 C:\first\v2.0\src\FRC2005\user_camera.c
                                           **********************************************************************/          C:\first\v2.0\src\FRC2005\user_camera.c
                                           int camera_buffer_cmd(unsigned char *cmd_str)                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             int i;                                                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                             int len;                                                                       C:\first\v2.0\src\FRC2005\user_camera.c
                                             for(i=0; i<MAX_BUF_SIZE; i++ )                                                 C:\first\v2.0\src\FRC2005\user_camera.c
                                             {                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                               if(cmd_str[i]=='\r' || cmd_str[i]==0 )                                       C:\first\v2.0\src\FRC2005\user_camera.c
                                               {                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                                 len=i;                                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                                 break;                                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                               }                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                             }                                                                              C:\first\v2.0\src\FRC2005\user_camera.c
                                             Serial_Write_Bufr(CAMERA_PORT,cmd_str,len);                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                             return camera_getACK();                                                        C:\first\v2.0\src\FRC2005\user_camera.c
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           /**********************************************************************          C:\first\v2.0\src\FRC2005\user_camera.c
                                           camera_stop                                                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           This function stops the camera from streaming.  This should be used when         C:\first\v2.0\src\FRC2005\user_camera.c
                                           you are in the middle of tracking, and want to send new control commands.        C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           		Return: 0 - no ACK, or timed out and may not have stopped                      C:\first\v2.0\src\FRC2005\user_camera.c
                                           				1 - ACK, the command is good, the camera stopped                             C:\first\v2.0\src\FRC2005\user_camera.c
                                           **********************************************************************/          C:\first\v2.0\src\FRC2005\user_camera.c
                                           int camera_stop(void)                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             parse_mode=0;                                                                  C:\first\v2.0\src\FRC2005\user_camera.c
                                             camera_getACK();                                                               C:\first\v2.0\src\FRC2005\user_camera.c
                                             return camera_getACK();                                                        C:\first\v2.0\src\FRC2005\user_camera.c
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           /**********************************************************************          C:\first\v2.0\src\FRC2005\user_camera.c
                                           reset_rx_buffer                                                                  C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           This function will reset the pointer index and the data_rdy flag that            C:\first\v2.0\src\FRC2005\user_camera.c
                                           is used by the interrupt in PicSerialdrv.c                                       C:\first\v2.0\src\FRC2005\user_camera.c
                                           This is called right before the interrupt routine is supposed to look            C:\first\v2.0\src\FRC2005\user_camera.c
                                           for new data.                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                           **********************************************************************/          C:\first\v2.0\src\FRC2005\user_camera.c
                                           void reset_rx_buffer(void)                                                       C:\first\v2.0\src\FRC2005\user_camera.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                           	cam_index_ptr=0;                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                           	data_rdy=0;                                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           /**********************************************************************          C:\first\v2.0\src\FRC2005\user_camera.c
                                           wait_for_data                                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           This function checks to see if the serial buffer for the camera has new          C:\first\v2.0\src\FRC2005\user_camera.c
                                           data ready.  Depending on what mode it is in, it may wait for a full T           C:\first\v2.0\src\FRC2005\user_camera.c
                                           packet, or just a '\r' terminated line. It only waits a short period of          C:\first\v2.0\src\FRC2005\user_camera.c
                                           time, and then it returns 0 if no data is ready.  This short period of           C:\first\v2.0\src\FRC2005\user_camera.c
                                           time is just long enough to catch ACKs from messages.                            C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           		Return: 0 - no new data                                                        C:\first\v2.0\src\FRC2005\user_camera.c
                                           				1 - new packet is ready                                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                           **********************************************************************/          C:\first\v2.0\src\FRC2005\user_camera.c
                                           int wait_for_data(void)                                                          C:\first\v2.0\src\FRC2005\user_camera.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             int i;                                                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                             // This loop below is a counter that gives just enough time to catch           C:\first\v2.0\src\FRC2005\user_camera.c
                                             // an ACK from a normal command.                                               C:\first\v2.0\src\FRC2005\user_camera.c
                                             for(i=0; i<20000; i++ )                                                        C:\first\v2.0\src\FRC2005\user_camera.c
                                           	  if(data_rdy!=0 ) return 1;                                                    C:\first\v2.0\src\FRC2005\user_camera.c
                                           	                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             return 0;                                                                      C:\first\v2.0\src\FRC2005\user_camera.c
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           /**********************************************************************          C:\first\v2.0\src\FRC2005\user_camera.c
                                           camera_reset                                                                     C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           This function resets the camera.  This will clear all register.  It then         C:\first\v2.0\src\FRC2005\user_camera.c
                                           checks to see if the camera is responding.                                       C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           		Return: 0 - no ACK, and reset may not have happened                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           				1 - reset occured, and all is well                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                           **********************************************************************/          C:\first\v2.0\src\FRC2005\user_camera.c
                                           int camera_reset(void)                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                           {                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                             int i;                                                                         C:\first\v2.0\src\FRC2005\user_camera.c
                                             parse_mode=0;                                                                  C:\first\v2.0\src\FRC2005\user_camera.c
                                             Serial_Write(CAMERA_PORT,"rs\r",3);                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                             i=camera_getACK();                                                             C:\first\v2.0\src\FRC2005\user_camera.c
                                             return camera_getACK();                                                        C:\first\v2.0\src\FRC2005\user_camera.c
                                           }                                                                                C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           #endif                                                                           C:\first\v2.0\src\FRC2005\user_camera.c
                                                                                                                            C:\first\v2.0\src\FRC2005\user_camera.c
                                           #define wheels_c                                                                 C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           #ifndef _FRC2004_                                                                C:\first\v2.0\src\NCSSM\wheels.c
                                           	#include <stdio.h>                                                              C:\first\v2.0\src\NCSSM\wheels.c
                                           #else                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	#include "printf_lib.h"                                                         C:\first\v2.0\src\NCSSM\wheels.c
                                           #endif                                                                           C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           #include "FRC2005/ifi_aliases.h"                                                 C:\first\v2.0\src\NCSSM\wheels.c
                                           #include "FRC2005/ifi_default.h"                                                 C:\first\v2.0\src\NCSSM\wheels.c
                                           #include "FRC2005/ifi_utilities.h"                                               C:\first\v2.0\src\NCSSM\wheels.c
                                           #include "FRC2005/ifi_picdefs.h"                                                 C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           #include "wheels.h"                                                              C:\first\v2.0\src\NCSSM\wheels.c
                                           #include "speedometer.h"                                                         C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           /** Local Prototypes **/                                                         C:\first\v2.0\src\NCSSM\wheels.c
                                           long limitTurningSpeed(long a_turningSpeed);                                     C:\first\v2.0\src\NCSSM\wheels.c
                                           int wheels_getDriveDirection(char a_pwm);                                        C:\first\v2.0\src\NCSSM\wheels.c
                                           int safeAdd(int one, int two);                                                   C:\first\v2.0\src\NCSSM\wheels.c
                                           unsigned char safePWMs(long one, long two);                                      C:\first\v2.0\src\NCSSM\wheels.c
                                           long safeAddLong( long one, long two );                                          C:\first\v2.0\src\NCSSM\wheels.c
                                           /*** exported globals ***/                                                       C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           /*** constants and defines ***/                                                  C:\first\v2.0\src\NCSSM\wheels.c
                                           #define PoutScale 640L                                                           C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           /***********************************************************                     C:\first\v2.0\src\NCSSM\wheels.c
                                            *  Set up Forward Velocity Coefficients                                         C:\first\v2.0\src\NCSSM\wheels.c
                                            *  Ts = 0.1ms                                                                   C:\first\v2.0\src\NCSSM\wheels.c
                                            *  1/Ts = TsINV = 10000                                                         C:\first\v2.0\src\NCSSM\wheels.c
                                            *  Ex = Inches/tooth = 1/3 = 8.47mm                                             C:\first\v2.0\src\NCSSM\wheels.c
                                            *  Uv = Scale from (teeth/Ts) to (mm/s) = 8.47/0.0001 = 84700(mm/sec)           C:\first\v2.0\src\NCSSM\wheels.c
                                            *  Max speed = 113 (in/sec) = 2872 (mm/sec)                                     C:\first\v2.0\src\NCSSM\wheels.c
                                            *  Min speed = 20mm/sec                                                         C:\first\v2.0\src\NCSSM\wheels.c
                                            ************************************************************/                   C:\first\v2.0\src\NCSSM\wheels.c
                                           #define Smax  2872                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                           #define Smin  20                                                                 C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           /*************************************************************                   C:\first\v2.0\src\NCSSM\wheels.c
                                            * Set up Turning Velocity Coefficients and limits                               C:\first\v2.0\src\NCSSM\wheels.c
                                            * The Robot is 27.25inches wide wheel to wheel                                  C:\first\v2.0\src\NCSSM\wheels.c
                                            * When pivoting around center (i.e. left reverse, right forward)                C:\first\v2.0\src\NCSSM\wheels.c
                                            * the wheels create a circle with radius R = 13.625"                            C:\first\v2.0\src\NCSSM\wheels.c
                                            * The max forward velocity is 113 inches/sec                                    C:\first\v2.0\src\NCSSM\wheels.c
                                            * The Forward Velocity is related to the rotation as follows:                   C:\first\v2.0\src\NCSSM\wheels.c
                                            * R = 13.625 inches = 346mm                                                     C:\first\v2.0\src\NCSSM\wheels.c
                                            * Vf = forward velocity --> maximum is 113 inches/sec                           C:\first\v2.0\src\NCSSM\wheels.c
                                            * Vr = rotational Velocity                                                      C:\first\v2.0\src\NCSSM\wheels.c
                                            * 1 rotation = 2Pi Radians                                                      C:\first\v2.0\src\NCSSM\wheels.c
                                            * C = Circumference = 2Pi*R inches                                              C:\first\v2.0\src\NCSSM\wheels.c
                                            * Vr = Vf/2Pi*R (rotations/second)                                              C:\first\v2.0\src\NCSSM\wheels.c
                                            * Vr = Vf*2Pi/2Pi*R = Vf/R (radians/second)                                     C:\first\v2.0\src\NCSSM\wheels.c
                                            *                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                            * At Vf = 113inches/second Vr = 1.32 rotations/sec or 8.29 radians/sec (too fast) C:\first\v2.0\src\NCSSM\wheels.c
                                            * Limit to 1/4 turn per second = Pi/2 radians/sec and solve for new Vf          C:\first\v2.0\src\NCSSM\wheels.c
                                            * Vrmax = Pi/2 = Vf/R;  Vfmax = 21 inches/second = 533.4mm/sec                  C:\first\v2.0\src\NCSSM\wheels.c
                                            * Vrmax = 10*(Pi/2)(e-1)Radians/sec = 16 (tenths of radians/sec)  16 ~= 15.7 and is a "nice" base2 number C:\first\v2.0\src\NCSSM\wheels.c
                                            * NOTE:  All calculations done using "Tenths of radians" must be divided by 10 to get the right answer. C:\first\v2.0\src\NCSSM\wheels.c
                                            *                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                            * Vfturnmax = R*Vrmax                                                           C:\first\v2.0\src\NCSSM\wheels.c
                                            *                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                            * The fastest we will ever turn will be to modify the left and right wheel speeds by Vfturnmax/2 C:\first\v2.0\src\NCSSM\wheels.c
                                            * Speedleft = Vfleft + Vfturnmax/2                                              C:\first\v2.0\src\NCSSM\wheels.c
                                            * Speedright = Vfright - Vfturnmax/2                                            C:\first\v2.0\src\NCSSM\wheels.c
                                            *                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                            * ***********************************************************/                  C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           #define R 346                                                                    C:\first\v2.0\src\NCSSM\wheels.c
                                           #define Vrmax 16                                                                 C:\first\v2.0\src\NCSSM\wheels.c
                                           #define radScale 10                                                              C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           /*                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                            *  Connect the right drive motors to PWM01 on the RC.                           C:\first\v2.0\src\NCSSM\wheels.c
                                            *  Connect the left  drive motors to PWM02 on the RC.                           C:\first\v2.0\src\NCSSM\wheels.c
                                            */                                                                              C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           #define rightPWM pwm01                                                           C:\first\v2.0\src\NCSSM\wheels.c
                                           #define leftPWM pwm02                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           #define JoystickOffset 127                                                       C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           /*** Define joystick driver variables ***/                                       C:\first\v2.0\src\NCSSM\wheels.c
                                           // Define the gear ratio for high vs low gear (low is 1.59x slower               C:\first\v2.0\src\NCSSM\wheels.c
                                           #define gearRatio 1.59                                                           C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           /*** local types ***/                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           typedef struct {                                                                 C:\first\v2.0\src\NCSSM\wheels.c
                                               signed long Esum;                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                               signed long Elast;                                                           C:\first\v2.0\src\NCSSM\wheels.c
                                           	signed int  VtargetLast;                                                        C:\first\v2.0\src\NCSSM\wheels.c
                                           } PIDState;                                                                      C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           /*** static globals ***/                                                         C:\first\v2.0\src\NCSSM\wheels.c
                                           static int speedEhist = 0;                                                       C:\first\v2.0\src\NCSSM\wheels.c
                                           static int targetSpeed = 0;                                                      C:\first\v2.0\src\NCSSM\wheels.c
                                           static int targetTurningSpeed = 0;                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           static PIDState leftWheelState = {0,0, 0};                                       C:\first\v2.0\src\NCSSM\wheels.c
                                           static PIDState rightWheelState = {0,0, 0};                                      C:\first\v2.0\src\NCSSM\wheels.c
                                           static PIDState turningState = {0,0, 0};                                         C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
000874   cfd9     MOVFF     0xfd9,0xfe6    static signed int iterateSpeedPID( signed int Vtarget, signed int Vactual, PIDState *state ) { C:\first\v2.0\src\NCSSM\wheels.c
000876   ffe6                                                                                                               
000878   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00087a   ffd9                                                                                                               
00087c   0e0e     MOVLW     0xe                                                                                             
00087e   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           //	static const long Kp = 10L;                                                   C:\first\v2.0\src\NCSSM\wheels.c
                                           //	static const long Ki = 1L; //2L;                                              C:\first\v2.0\src\NCSSM\wheels.c
                                           //	static const long Kd = -2L; //-2L;                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	static const long Kp = 10L;                                                     C:\first\v2.0\src\NCSSM\wheels.c
                                           	static const long Ki = 1L; //2L;                                                C:\first\v2.0\src\NCSSM\wheels.c
                                           	static const long Kd = -5L; //-2L;                                              C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	signed long E;                                                                  C:\first\v2.0\src\NCSSM\wheels.c
                                            	signed long Pout;                                                              C:\first\v2.0\src\NCSSM\wheels.c
                                           	signed int Pclamp;                                                              C:\first\v2.0\src\NCSSM\wheels.c
                                           	signed long Esum;                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
000880   0efd     MOVLW     0xfd           	E =  (signed long)(Vtarget - Vactual);                                          C:\first\v2.0\src\NCSSM\wheels.c
000882   cfdb     MOVFF     0xfdb,0x2f                                                                                      
000884   f02f                                                                                                               
000886   0efe     MOVLW     0xfe                                                                                            
000888   cfdb     MOVFF     0xfdb,0x30                                                                                      
00088a   f030                                                                                                               
00088c   0efb     MOVLW     0xfb                                                                                            
00088e   50db     MOVF      0xdb,0x0,0x0                                                                                    
000890   5c2f     SUBWF     0x2f,0x0,0x0                                                                                    
000892   6e2b     MOVWF     0x2b,0x0                                                                                        
000894   0efc     MOVLW     0xfc                                                                                            
000896   50db     MOVF      0xdb,0x0,0x0                                                                                    
000898   5830     SUBWFB    0x30,0x0,0x0                                                                                    
00089a   6e2c     MOVWF     0x2c,0x0                                                                                        
00089c   6a2d     CLRF      0x2d,0x0                                                                                        
00089e   6a2e     CLRF      0x2e,0x0                                                                                        
0008a0   ae2c     BTFSS     0x2c,0x7,0x0                                                                                    
0008a2   d002     BRA       0x8a8                                                                                           
0008a4   682d     SETF      0x2d,0x0                                                                                        
0008a6   682e     SETF      0x2e,0x0                                                                                        
0008a8   c02b     MOVFF     0x2b,0xfdf                                                                                      
0008aa   ffdf                                                                                                               
0008ac   0e01     MOVLW     0x1                                                                                             
0008ae   c02c     MOVFF     0x2c,0xfdb                                                                                      
0008b0   ffdb                                                                                                               
0008b2   0e02     MOVLW     0x2                                                                                             
0008b4   c02d     MOVFF     0x2d,0xfdb                                                                                      
0008b6   ffdb                                                                                                               
0008b8   0e03     MOVLW     0x3                                                                                             
0008ba   c02e     MOVFF     0x2e,0xfdb                                                                                      
0008bc   ffdb                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	                                                                                C:\first\v2.0\src\NCSSM\wheels.c
0008be   c200     MOVFF     0x200,0x2b     	if( (E < speedEhist) && (E > -speedEhist) ) {                                   C:\first\v2.0\src\NCSSM\wheels.c
0008c0   f02b                                                                                                               
0008c2   c201     MOVFF     0x201,0x2c                                                                                      
0008c4   f02c                                                                                                               
0008c6   6a2d     CLRF      0x2d,0x0                                                                                        
0008c8   6a2e     CLRF      0x2e,0x0                                                                                        
0008ca   ae2c     BTFSS     0x2c,0x7,0x0                                                                                    
0008cc   d002     BRA       0x8d2                                                                                           
0008ce   682d     SETF      0x2d,0x0                                                                                        
0008d0   682e     SETF      0x2e,0x0                                                                                        
0008d2   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
0008d4   ffe9                                                                                                               
0008d6   cfda     MOVFF     0xfda,0xfea                                                                                     
0008d8   ffea                                                                                                               
0008da   50eb     MOVF      0xeb,0x0,0x0                                                                                    
0008dc   182e     XORWF     0x2e,0x0,0x0                                                                                    
0008de   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
0008e0   d002     BRA       0x8e6                                                                                           
0008e2   342e     RLCF      0x2e,0x0,0x0                                                                                    
0008e4   d008     BRA       0x8f6                                                                                           
0008e6   502b     MOVF      0x2b,0x0,0x0                                                                                    
0008e8   5cee     SUBWF     0xee,0x0,0x0                                                                                    
0008ea   502c     MOVF      0x2c,0x0,0x0                                                                                    
0008ec   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
0008ee   502d     MOVF      0x2d,0x0,0x0                                                                                    
0008f0   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
0008f2   502e     MOVF      0x2e,0x0,0x0                                                                                    
0008f4   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
0008f6   e22a     BC        0x94c                                                                                           
0008f8   c200     MOVFF     0x200,0x2f                                                                                      
0008fa   f02f                                                                                                               
0008fc   c201     MOVFF     0x201,0x30                                                                                      
0008fe   f030                                                                                                               
000900   6c2f     NEGF      0x2f,0x0                                                                                        
000902   1e30     COMF      0x30,0x1,0x0                                                                                    
000904   0e00     MOVLW     0x0                                                                                             
000906   2230     ADDWFC    0x30,0x1,0x0                                                                                    
000908   6a31     CLRF      0x31,0x0                                                                                        
00090a   6a32     CLRF      0x32,0x0                                                                                        
00090c   ae30     BTFSS     0x30,0x7,0x0                                                                                    
00090e   d002     BRA       0x914                                                                                           
000910   6831     SETF      0x31,0x0                                                                                        
000912   6832     SETF      0x32,0x0                                                                                        
000914   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
000916   ffe9                                                                                                               
000918   cfda     MOVFF     0xfda,0xfea                                                                                     
00091a   ffea                                                                                                               
00091c   0e03     MOVLW     0x3                                                                                             
00091e   cfeb     MOVFF     0xfeb,0xff3                                                                                     
000920   fff3                                                                                                               
000922   5032     MOVF      0x32,0x0,0x0                                                                                    
000924   18f3     XORWF     0xf3,0x0,0x0                                                                                    
000926   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000928   d002     BRA       0x92e                                                                                           
00092a   34f3     RLCF      0xf3,0x0,0x0                                                                                    
00092c   d008     BRA       0x93e                                                                                           
00092e   50ee     MOVF      0xee,0x0,0x0                                                                                    
000930   5c2f     SUBWF     0x2f,0x0,0x0                                                                                    
000932   50ee     MOVF      0xee,0x0,0x0                                                                                    
000934   5830     SUBWFB    0x30,0x0,0x0                                                                                    
000936   50ee     MOVF      0xee,0x0,0x0                                                                                    
000938   5831     SUBWFB    0x31,0x0,0x0                                                                                    
00093a   50ee     MOVF      0xee,0x0,0x0                                                                                    
00093c   5832     SUBWFB    0x32,0x0,0x0                                                                                    
00093e   e206     BC        0x94c                                                                                           
000940   6ade     CLRF      0xde,0x0       		E = 0;                                                                         C:\first\v2.0\src\NCSSM\wheels.c
000942   6ade     CLRF      0xde,0x0                                                                                        
000944   6ade     CLRF      0xde,0x0                                                                                        
000946   6add     CLRF      0xdd,0x0                                                                                        
000948   52dd     MOVF      0xdd,0x1,0x0                                                                                    
00094a   52dd     MOVF      0xdd,0x1,0x0                                                                                    
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
00094c   50d9     MOVF      0xd9,0x0,0x0   	if( Vtarget == 0 && Vactual < 10 && Vactual > -10) {                            C:\first\v2.0\src\NCSSM\wheels.c
00094e   0ffd     ADDLW     0xfd                                                                                            
000950   6ee9     MOVWF     0xe9,0x0                                                                                        
000952   0eff     MOVLW     0xff                                                                                            
000954   20da     ADDWFC    0xda,0x0,0x0                                                                                    
000956   6eea     MOVWF     0xea,0x0                                                                                        
000958   50ee     MOVF      0xee,0x0,0x0                                                                                    
00095a   10ed     IORWF     0xed,0x0,0x0                                                                                    
00095c   e125     BNZ       0x9a8                                                                                           
00095e   0efb     MOVLW     0xfb                                                                                            
000960   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000962   f02b                                                                                                               
000964   0efc     MOVLW     0xfc                                                                                            
000966   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000968   f02c                                                                                                               
00096a   90d8     BCF       0xd8,0x0,0x0                                                                                    
00096c   502c     MOVF      0x2c,0x0,0x0                                                                                    
00096e   e604     BN        0x978                                                                                           
000970   0e0a     MOVLW     0xa                                                                                             
000972   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
000974   0e00     MOVLW     0x0                                                                                             
000976   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
000978   e217     BC        0x9a8                                                                                           
00097a   0efb     MOVLW     0xfb                                                                                            
00097c   cfdb     MOVFF     0xfdb,0x2d                                                                                      
00097e   f02d                                                                                                               
000980   0efc     MOVLW     0xfc                                                                                            
000982   cfdb     MOVFF     0xfdb,0x2e                                                                                      
000984   f02e                                                                                                               
000986   342e     RLCF      0x2e,0x0,0x0                                                                                    
000988   e304     BNC       0x992                                                                                           
00098a   502d     MOVF      0x2d,0x0,0x0                                                                                    
00098c   08f6     SUBLW     0xf6                                                                                            
00098e   0eff     MOVLW     0xff                                                                                            
000990   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
000992   e20a     BC        0x9a8                                                                                           
000994   0ef9     MOVLW     0xf9           		state->Esum = 0;                                                               C:\first\v2.0\src\NCSSM\wheels.c
000996   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000998   ffe9                                                                                                               
00099a   0efa     MOVLW     0xfa                                                                                            
00099c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00099e   ffea                                                                                                               
0009a0   6aee     CLRF      0xee,0x0                                                                                        
0009a2   6aee     CLRF      0xee,0x0                                                                                        
0009a4   6aee     CLRF      0xee,0x0                                                                                        
0009a6   6aee     CLRF      0xee,0x0                                                                                        
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
0009a8   cfd9     MOVFF     0xfd9,0xfe9    	Esum = safeAddLong(state->Esum,E);                                              C:\first\v2.0\src\NCSSM\wheels.c
0009aa   ffe9                                                                                                               
0009ac   cfda     MOVFF     0xfda,0xfea                                                                                     
0009ae   ffea                                                                                                               
0009b0   cfee     MOVFF     0xfee,0xfe6                                                                                     
0009b2   ffe6                                                                                                               
0009b4   cfee     MOVFF     0xfee,0xfe6                                                                                     
0009b6   ffe6                                                                                                               
0009b8   cfee     MOVFF     0xfee,0xfe6                                                                                     
0009ba   ffe6                                                                                                               
0009bc   cfef     MOVFF     0xfef,0xfe6                                                                                     
0009be   ffe6                                                                                                               
0009c0   0ef9     MOVLW     0xf9                                                                                            
0009c2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0009c4   ffe9                                                                                                               
0009c6   0efa     MOVLW     0xfa                                                                                            
0009c8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0009ca   ffea                                                                                                               
0009cc   cfee     MOVFF     0xfee,0xfe6                                                                                     
0009ce   ffe6                                                                                                               
0009d0   cfee     MOVFF     0xfee,0xfe6                                                                                     
0009d2   ffe6                                                                                                               
0009d4   cfee     MOVFF     0xfee,0xfe6                                                                                     
0009d6   ffe6                                                                                                               
0009d8   cfef     MOVFF     0xfef,0xfe6                                                                                     
0009da   ffe6                                                                                                               
0009dc   ecfd     CALL      0x19fa,0x0                                                                                      
0009de   f00c                                                                                                               
0009e0   6ef5     MOVWF     0xf5,0x0                                                                                        
0009e2   0e08     MOVLW     0x8                                                                                             
0009e4   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0009e6   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0009e8   0e0a     MOVLW     0xa                                                                                             
0009ea   c01b     MOVFF     0x1b,0xfdb                                                                                      
0009ec   ffdb                                                                                                               
0009ee   0e0b     MOVLW     0xb                                                                                             
0009f0   c01c     MOVFF     0x1c,0xfdb                                                                                      
0009f2   ffdb                                                                                                               
0009f4   0e0c     MOVLW     0xc                                                                                             
0009f6   c01d     MOVFF     0x1d,0xfdb                                                                                      
0009f8   ffdb                                                                                                               
0009fa   0e0d     MOVLW     0xd                                                                                             
0009fc   c01e     MOVFF     0x1e,0xfdb                                                                                      
0009fe   ffdb                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
000a00   c224     MOVFF     0x224,0x1b     	Pout = (signed long)(Kp*E + Ki*(Esum) + Kd*(E-state->Elast));                   C:\first\v2.0\src\NCSSM\wheels.c
000a02   f01b                                                                                                               
000a04   c225     MOVFF     0x225,0x1c                                                                                      
000a06   f01c                                                                                                               
000a08   c226     MOVFF     0x226,0x1d                                                                                      
000a0a   f01d                                                                                                               
000a0c   c227     MOVFF     0x227,0x1e                                                                                      
000a0e   f01e                                                                                                               
000a10   cfdf     MOVFF     0xfdf,0x20                                                                                      
000a12   f020                                                                                                               
000a14   0e01     MOVLW     0x1                                                                                             
000a16   cfdb     MOVFF     0xfdb,0x21                                                                                      
000a18   f021                                                                                                               
000a1a   0e02     MOVLW     0x2                                                                                             
000a1c   cfdb     MOVFF     0xfdb,0x22                                                                                      
000a1e   f022                                                                                                               
000a20   0e03     MOVLW     0x3                                                                                             
000a22   cfdb     MOVFF     0xfdb,0x23                                                                                      
000a24   f023                                                                                                               
000a26   ec78     CALL      0x62f0,0x0                                                                                      
000a28   f031                                                                                                               
000a2a   c017     MOVFF     0x17,0x33                                                                                       
000a2c   f033                                                                                                               
000a2e   c018     MOVFF     0x18,0x34                                                                                       
000a30   f034                                                                                                               
000a32   c019     MOVFF     0x19,0x35                                                                                       
000a34   f035                                                                                                               
000a36   c01a     MOVFF     0x1a,0x36                                                                                       
000a38   f036                                                                                                               
000a3a   c228     MOVFF     0x228,0x1b                                                                                      
000a3c   f01b                                                                                                               
000a3e   c229     MOVFF     0x229,0x1c                                                                                      
000a40   f01c                                                                                                               
000a42   c22a     MOVFF     0x22a,0x1d                                                                                      
000a44   f01d                                                                                                               
000a46   c22b     MOVFF     0x22b,0x1e                                                                                      
000a48   f01e                                                                                                               
000a4a   0e0a     MOVLW     0xa                                                                                             
000a4c   cfdb     MOVFF     0xfdb,0x20                                                                                      
000a4e   f020                                                                                                               
000a50   0e0b     MOVLW     0xb                                                                                             
000a52   cfdb     MOVFF     0xfdb,0x21                                                                                      
000a54   f021                                                                                                               
000a56   0e0c     MOVLW     0xc                                                                                             
000a58   cfdb     MOVFF     0xfdb,0x22                                                                                      
000a5a   f022                                                                                                               
000a5c   0e0d     MOVLW     0xd                                                                                             
000a5e   cfdb     MOVFF     0xfdb,0x23                                                                                      
000a60   f023                                                                                                               
000a62   ec78     CALL      0x62f0,0x0                                                                                      
000a64   f031                                                                                                               
000a66   5033     MOVF      0x33,0x0,0x0                                                                                    
000a68   2417     ADDWF     0x17,0x0,0x0                                                                                    
000a6a   6e2f     MOVWF     0x2f,0x0                                                                                        
000a6c   5034     MOVF      0x34,0x0,0x0                                                                                    
000a6e   2018     ADDWFC    0x18,0x0,0x0                                                                                    
000a70   6e30     MOVWF     0x30,0x0                                                                                        
000a72   5035     MOVF      0x35,0x0,0x0                                                                                    
000a74   2019     ADDWFC    0x19,0x0,0x0                                                                                    
000a76   6e31     MOVWF     0x31,0x0                                                                                        
000a78   5036     MOVF      0x36,0x0,0x0                                                                                    
000a7a   201a     ADDWFC    0x1a,0x0,0x0                                                                                    
000a7c   6e32     MOVWF     0x32,0x0                                                                                        
000a7e   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
000a80   ffe9                                                                                                               
000a82   cfda     MOVFF     0xfda,0xfea                                                                                     
000a84   ffea                                                                                                               
000a86   cfee     MOVFF     0xfee,0x3b                                                                                      
000a88   f03b                                                                                                               
000a8a   cfee     MOVFF     0xfee,0x3c                                                                                      
000a8c   f03c                                                                                                               
000a8e   cfee     MOVFF     0xfee,0x3d                                                                                      
000a90   f03d                                                                                                               
000a92   cfef     MOVFF     0xfef,0x3e                                                                                      
000a94   f03e                                                                                                               
000a96   0ef9     MOVLW     0xf9                                                                                            
000a98   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000a9a   ffe9                                                                                                               
000a9c   0efa     MOVLW     0xfa                                                                                            
000a9e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000aa0   ffea                                                                                                               
000aa2   0e04     MOVLW     0x4                                                                                             
000aa4   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000aa6   0e00     MOVLW     0x0                                                                                             
000aa8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000aaa   50ee     MOVF      0xee,0x0,0x0                                                                                    
000aac   5c3b     SUBWF     0x3b,0x0,0x0                                                                                    
000aae   6e37     MOVWF     0x37,0x0                                                                                        
000ab0   50ee     MOVF      0xee,0x0,0x0                                                                                    
000ab2   583c     SUBWFB    0x3c,0x0,0x0                                                                                    
000ab4   6e38     MOVWF     0x38,0x0                                                                                        
000ab6   50ee     MOVF      0xee,0x0,0x0                                                                                    
000ab8   583d     SUBWFB    0x3d,0x0,0x0                                                                                    
000aba   6e39     MOVWF     0x39,0x0                                                                                        
000abc   50ee     MOVF      0xee,0x0,0x0                                                                                    
000abe   583e     SUBWFB    0x3e,0x0,0x0                                                                                    
000ac0   6e3a     MOVWF     0x3a,0x0                                                                                        
000ac2   c22c     MOVFF     0x22c,0x1b                                                                                      
000ac4   f01b                                                                                                               
000ac6   c22d     MOVFF     0x22d,0x1c                                                                                      
000ac8   f01c                                                                                                               
000aca   c22e     MOVFF     0x22e,0x1d                                                                                      
000acc   f01d                                                                                                               
000ace   c22f     MOVFF     0x22f,0x1e                                                                                      
000ad0   f01e                                                                                                               
000ad2   c037     MOVFF     0x37,0x20                                                                                       
000ad4   f020                                                                                                               
000ad6   c038     MOVFF     0x38,0x21                                                                                       
000ad8   f021                                                                                                               
000ada   c039     MOVFF     0x39,0x22                                                                                       
000adc   f022                                                                                                               
000ade   c03a     MOVFF     0x3a,0x23                                                                                       
000ae0   f023                                                                                                               
000ae2   ec78     CALL      0x62f0,0x0                                                                                      
000ae4   f031                                                                                                               
000ae6   502f     MOVF      0x2f,0x0,0x0                                                                                    
000ae8   2417     ADDWF     0x17,0x0,0x0                                                                                    
000aea   6e2b     MOVWF     0x2b,0x0                                                                                        
000aec   5030     MOVF      0x30,0x0,0x0                                                                                    
000aee   2018     ADDWFC    0x18,0x0,0x0                                                                                    
000af0   6e2c     MOVWF     0x2c,0x0                                                                                        
000af2   5031     MOVF      0x31,0x0,0x0                                                                                    
000af4   2019     ADDWFC    0x19,0x0,0x0                                                                                    
000af6   6e2d     MOVWF     0x2d,0x0                                                                                        
000af8   5032     MOVF      0x32,0x0,0x0                                                                                    
000afa   201a     ADDWFC    0x1a,0x0,0x0                                                                                    
000afc   6e2e     MOVWF     0x2e,0x0                                                                                        
000afe   0e04     MOVLW     0x4                                                                                             
000b00   c02b     MOVFF     0x2b,0xfdb                                                                                      
000b02   ffdb                                                                                                               
000b04   0e05     MOVLW     0x5                                                                                             
000b06   c02c     MOVFF     0x2c,0xfdb                                                                                      
000b08   ffdb                                                                                                               
000b0a   0e06     MOVLW     0x6                                                                                             
000b0c   c02d     MOVFF     0x2d,0xfdb                                                                                      
000b0e   ffdb                                                                                                               
000b10   0e07     MOVLW     0x7                                                                                             
000b12   c02e     MOVFF     0x2e,0xfdb                                                                                      
000b14   ffdb                                                                                                               
000b16   0ef9     MOVLW     0xf9           	state->Elast = E;                                                               C:\first\v2.0\src\NCSSM\wheels.c
000b18   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000b1a   ffe9                                                                                                               
000b1c   0efa     MOVLW     0xfa                                                                                            
000b1e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000b20   ffea                                                                                                               
000b22   0e04     MOVLW     0x4                                                                                             
000b24   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
000b26   0e00     MOVLW     0x0                                                                                             
000b28   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
000b2a   cfdf     MOVFF     0xfdf,0xfee                                                                                     
000b2c   ffee                                                                                                               
000b2e   0e01     MOVLW     0x1                                                                                             
000b30   cfdb     MOVFF     0xfdb,0xfee                                                                                     
000b32   ffee                                                                                                               
000b34   0e02     MOVLW     0x2                                                                                             
000b36   cfdb     MOVFF     0xfdb,0xfee                                                                                     
000b38   ffee                                                                                                               
000b3a   0e03     MOVLW     0x3                                                                                             
000b3c   cfdb     MOVFF     0xfdb,0xfee                                                                                     
000b3e   ffee                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	// scales 4000 into 127, then clamps us into -128..127                          C:\first\v2.0\src\NCSSM\wheels.c
                                           //	Pout = Pout/240L;                                                             C:\first\v2.0\src\NCSSM\wheels.c
000b40   0e04     MOVLW     0x4            	Pout = Pout/1200L;                                                              C:\first\v2.0\src\NCSSM\wheels.c
000b42   cfdb     MOVFF     0xfdb,0x1b                                                                                      
000b44   f01b                                                                                                               
000b46   0e05     MOVLW     0x5                                                                                             
000b48   cfdb     MOVFF     0xfdb,0x1c                                                                                      
000b4a   f01c                                                                                                               
000b4c   0e06     MOVLW     0x6                                                                                             
000b4e   cfdb     MOVFF     0xfdb,0x1d                                                                                      
000b50   f01d                                                                                                               
000b52   0e07     MOVLW     0x7                                                                                             
000b54   cfdb     MOVFF     0xfdb,0x1e                                                                                      
000b56   f01e                                                                                                               
000b58   0eb0     MOVLW     0xb0                                                                                            
000b5a   6e20     MOVWF     0x20,0x0                                                                                        
000b5c   0e04     MOVLW     0x4                                                                                             
000b5e   6e21     MOVWF     0x21,0x0                                                                                        
000b60   6a22     CLRF      0x22,0x0                                                                                        
000b62   6a23     CLRF      0x23,0x0                                                                                        
000b64   ecd2     CALL      0x5fa4,0x0                                                                                      
000b66   f02f                                                                                                               
000b68   0e04     MOVLW     0x4                                                                                             
000b6a   c01b     MOVFF     0x1b,0xfdb                                                                                      
000b6c   ffdb                                                                                                               
000b6e   0e05     MOVLW     0x5                                                                                             
000b70   c01c     MOVFF     0x1c,0xfdb                                                                                      
000b72   ffdb                                                                                                               
000b74   0e06     MOVLW     0x6                                                                                             
000b76   c01d     MOVFF     0x1d,0xfdb                                                                                      
000b78   ffdb                                                                                                               
000b7a   0e07     MOVLW     0x7                                                                                             
000b7c   c01e     MOVFF     0x1e,0xfdb                                                                                      
000b7e   ffdb                                                                                                               
000b80   0e04     MOVLW     0x4            	if( Pout > 127L ) {                                                             C:\first\v2.0\src\NCSSM\wheels.c
000b82   cfdb     MOVFF     0xfdb,0x1c                                                                                      
000b84   f01c                                                                                                               
000b86   0e05     MOVLW     0x5                                                                                             
000b88   cfdb     MOVFF     0xfdb,0x1d                                                                                      
000b8a   f01d                                                                                                               
000b8c   0e06     MOVLW     0x6                                                                                             
000b8e   cfdb     MOVFF     0xfdb,0x1e                                                                                      
000b90   f01e                                                                                                               
000b92   0e07     MOVLW     0x7                                                                                             
000b94   cfdb     MOVFF     0xfdb,0x1f                                                                                      
000b96   f01f                                                                                                               
000b98   0e00     MOVLW     0x0                                                                                             
000b9a   181f     XORWF     0x1f,0x0,0x0                                                                                    
000b9c   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000b9e   d002     BRA       0xba4                                                                                           
000ba0   341f     RLCF      0x1f,0x0,0x0                                                                                    
000ba2   d009     BRA       0xbb6                                                                                           
000ba4   0e7f     MOVLW     0x7f                                                                                            
000ba6   80d8     BSF       0xd8,0x0,0x0                                                                                    
000ba8   541c     SUBFWB    0x1c,0x0,0x0                                                                                    
000baa   0e00     MOVLW     0x0                                                                                             
000bac   541d     SUBFWB    0x1d,0x0,0x0                                                                                    
000bae   0e00     MOVLW     0x0                                                                                             
000bb0   541e     SUBFWB    0x1e,0x0,0x0                                                                                    
000bb2   0e00     MOVLW     0x0                                                                                             
000bb4   541f     SUBFWB    0x1f,0x0,0x0                                                                                    
000bb6   e208     BC        0xbc8                                                                                           
000bb8   0e7f     MOVLW     0x7f           		Pclamp = 127;                                                                  C:\first\v2.0\src\NCSSM\wheels.c
000bba   6ef3     MOVWF     0xf3,0x0                                                                                        
000bbc   0e08     MOVLW     0x8                                                                                             
000bbe   cff3     MOVFF     0xff3,0xfdb                                                                                     
000bc0   ffdb                                                                                                               
000bc2   0e09     MOVLW     0x9                                                                                             
000bc4   6adb     CLRF      0xdb,0x0                                                                                        
000bc6   d03b     BRA       0xc3e          	} else if( Pout < -127L ) {                                                     C:\first\v2.0\src\NCSSM\wheels.c
000bc8   50d9     MOVF      0xd9,0x0,0x0                                                                                    
000bca   0f04     ADDLW     0x4                                                                                             
000bcc   6ee9     MOVWF     0xe9,0x0                                                                                        
000bce   cfda     MOVFF     0xfda,0xfea                                                                                     
000bd0   ffea                                                                                                               
000bd2   0e03     MOVLW     0x3                                                                                             
000bd4   50eb     MOVF      0xeb,0x0,0x0                                                                                    
000bd6   0aff     XORLW     0xff                                                                                            
000bd8   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
000bda   d002     BRA       0xbe0                                                                                           
000bdc   80d8     BSF       0xd8,0x0,0x0                                                                                    
000bde   d008     BRA       0xbf0                                                                                           
000be0   0e81     MOVLW     0x81                                                                                            
000be2   5cee     SUBWF     0xee,0x0,0x0                                                                                    
000be4   0eff     MOVLW     0xff                                                                                            
000be6   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
000be8   0eff     MOVLW     0xff                                                                                            
000bea   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
000bec   0eff     MOVLW     0xff                                                                                            
000bee   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
000bf0   e208     BC        0xc02                                                                                           
000bf2   0e81     MOVLW     0x81           		Pclamp = -127;                                                                 C:\first\v2.0\src\NCSSM\wheels.c
000bf4   6ef3     MOVWF     0xf3,0x0                                                                                        
000bf6   0e08     MOVLW     0x8                                                                                             
000bf8   cff3     MOVFF     0xff3,0xfdb                                                                                     
000bfa   ffdb                                                                                                               
000bfc   0e09     MOVLW     0x9                                                                                             
000bfe   68db     SETF      0xdb,0x0                                                                                        
000c00   d01e     BRA       0xc3e          	} else {                                                                        C:\first\v2.0\src\NCSSM\wheels.c
000c02   0e04     MOVLW     0x4            		Pclamp = (signed int)Pout;                                                     C:\first\v2.0\src\NCSSM\wheels.c
000c04   cfdb     MOVFF     0xfdb,0x1d                                                                                      
000c06   f01d                                                                                                               
000c08   0e05     MOVLW     0x5                                                                                             
000c0a   cfdb     MOVFF     0xfdb,0x1e                                                                                      
000c0c   f01e                                                                                                               
000c0e   0e08     MOVLW     0x8                                                                                             
000c10   c01d     MOVFF     0x1d,0xfdb                                                                                      
000c12   ffdb                                                                                                               
000c14   0e09     MOVLW     0x9                                                                                             
000c16   c01e     MOVFF     0x1e,0xfdb                                                                                      
000c18   ffdb                                                                                                               
000c1a   0ef9     MOVLW     0xf9           		state->Esum = Esum;                                                            C:\first\v2.0\src\NCSSM\wheels.c
000c1c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
000c1e   ffe9                                                                                                               
000c20   0efa     MOVLW     0xfa                                                                                            
000c22   cfdb     MOVFF     0xfdb,0xfea                                                                                     
000c24   ffea                                                                                                               
000c26   0e0a     MOVLW     0xa                                                                                             
000c28   cfdb     MOVFF     0xfdb,0xfee                                                                                     
000c2a   ffee                                                                                                               
000c2c   0e0b     MOVLW     0xb                                                                                             
000c2e   cfdb     MOVFF     0xfdb,0xfee                                                                                     
000c30   ffee                                                                                                               
000c32   0e0c     MOVLW     0xc                                                                                             
000c34   cfdb     MOVFF     0xfdb,0xfee                                                                                     
000c36   ffee                                                                                                               
000c38   0e0d     MOVLW     0xd                                                                                             
000c3a   cfdb     MOVFF     0xfdb,0xfee                                                                                     
000c3c   ffee                                                                                                               
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
000c3e   0e08     MOVLW     0x8            	if( Pclamp < 1 && Vtarget >= 0 ) {                                              C:\first\v2.0\src\NCSSM\wheels.c
000c40   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000c42   f02b                                                                                                               
000c44   0e09     MOVLW     0x9                                                                                             
000c46   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000c48   f02c                                                                                                               
000c4a   90d8     BCF       0xd8,0x0,0x0                                                                                    
000c4c   502c     MOVF      0x2c,0x0,0x0                                                                                    
000c4e   e604     BN        0xc58                                                                                           
000c50   0e01     MOVLW     0x1                                                                                             
000c52   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
000c54   0e00     MOVLW     0x0                                                                                             
000c56   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
000c58   e20f     BC        0xc78                                                                                           
000c5a   0efd     MOVLW     0xfd                                                                                            
000c5c   cfdb     MOVFF     0xfdb,0x2d                                                                                      
000c5e   f02d                                                                                                               
000c60   0efe     MOVLW     0xfe                                                                                            
000c62   cfdb     MOVFF     0xfdb,0x2e                                                                                      
000c64   f02e                                                                                                               
000c66   0100     MOVLB     0x0                                                                                             
000c68   0e80     MOVLW     0x80                                                                                            
000c6a   142e     ANDWF     0x2e,0x0,0x0                                                                                    
000c6c   e105     BNZ       0xc78                                                                                           
000c6e   0e08     MOVLW     0x8            		Pclamp = 0;                                                                    C:\first\v2.0\src\NCSSM\wheels.c
000c70   6adb     CLRF      0xdb,0x0                                                                                        
000c72   0e09     MOVLW     0x9                                                                                             
000c74   6adb     CLRF      0xdb,0x0                                                                                        
000c76   d01e     BRA       0xcb4          	} else if( Pclamp > -1 && Vtarget <= 0 ) {                                      C:\first\v2.0\src\NCSSM\wheels.c
000c78   0e08     MOVLW     0x8                                                                                             
000c7a   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000c7c   f02b                                                                                                               
000c7e   0e09     MOVLW     0x9                                                                                             
000c80   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000c82   f02c                                                                                                               
000c84   342c     RLCF      0x2c,0x0,0x0                                                                                    
000c86   e304     BNC       0xc90                                                                                           
000c88   502b     MOVF      0x2b,0x0,0x0                                                                                    
000c8a   08ff     SUBLW     0xff                                                                                            
000c8c   0eff     MOVLW     0xff                                                                                            
000c8e   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
000c90   e211     BC        0xcb4                                                                                           
000c92   0efd     MOVLW     0xfd                                                                                            
000c94   cfdb     MOVFF     0xfdb,0x2d                                                                                      
000c96   f02d                                                                                                               
000c98   0efe     MOVLW     0xfe                                                                                            
000c9a   cfdb     MOVFF     0xfdb,0x2e                                                                                      
000c9c   f02e                                                                                                               
000c9e   342e     RLCF      0x2e,0x0,0x0                                                                                    
000ca0   e204     BC        0xcaa                                                                                           
000ca2   502d     MOVF      0x2d,0x0,0x0                                                                                    
000ca4   0800     SUBLW     0x0                                                                                             
000ca6   0e00     MOVLW     0x0                                                                                             
000ca8   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
000caa   e304     BNC       0xcb4                                                                                           
000cac   0e08     MOVLW     0x8            		Pclamp = 0;                                                                    C:\first\v2.0\src\NCSSM\wheels.c
000cae   6adb     CLRF      0xdb,0x0                                                                                        
000cb0   0e09     MOVLW     0x9                                                                                             
000cb2   6adb     CLRF      0xdb,0x0                                                                                        
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
000cb4   0e08     MOVLW     0x8            	return Pclamp;                                                                  C:\first\v2.0\src\NCSSM\wheels.c
000cb6   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000cb8   f02b                                                                                                               
000cba   0e09     MOVLW     0x9                                                                                             
000cbc   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000cbe   f02c                                                                                                               
000cc0   c02b     MOVFF     0x2b,0xff3                                                                                      
000cc2   fff3                                                                                                               
000cc4   c02c     MOVFF     0x2c,0xff4                                                                                      
000cc6   fff4                                                                                                               
000cc8   d000     BRA       0xcca                                                                                           
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
000cca   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\wheels.c
000ccc   ffe1                                                                                                               
000cce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000cd0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
000cd2   ffd9                                                                                                               
000cd4   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           /*** functions ***/                                                              C:\first\v2.0\src\NCSSM\wheels.c
000cd6   cfd9     MOVFF     0xfd9,0xfe6    void wheels_doMain(void) {                                                       C:\first\v2.0\src\NCSSM\wheels.c
000cd8   ffe6                                                                                                               
000cda   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
000cdc   ffd9                                                                                                               
000cde   0e1c     MOVLW     0x1c                                                                                            
000ce0   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	static int iters =0;                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	static const int Kp_turn = 1;                                                   C:\first\v2.0\src\NCSSM\wheels.c
                                           	static const int Ki_turn = 0;                                                   C:\first\v2.0\src\NCSSM\wheels.c
                                           	static const int Kd_turn = 0;                                                   C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
000ce2   6ade     CLRF      0xde,0x0       	int Vfturn  =0;                                                                 C:\first\v2.0\src\NCSSM\wheels.c
000ce4   6add     CLRF      0xdd,0x0                                                                                        
000ce6   0e02     MOVLW     0x2            	int PLout   =0;                                                                 C:\first\v2.0\src\NCSSM\wheels.c
000ce8   6adb     CLRF      0xdb,0x0                                                                                        
000cea   0e03     MOVLW     0x3                                                                                             
000cec   6adb     CLRF      0xdb,0x0                                                                                        
000cee   0e04     MOVLW     0x4            	int PRout   =0;                                                                 C:\first\v2.0\src\NCSSM\wheels.c
000cf0   6adb     CLRF      0xdb,0x0                                                                                        
000cf2   0e05     MOVLW     0x5                                                                                             
000cf4   6adb     CLRF      0xdb,0x0                                                                                        
000cf6   0e06     MOVLW     0x6            	signed int tempInt = 0;                                                         C:\first\v2.0\src\NCSSM\wheels.c
000cf8   6adb     CLRF      0xdb,0x0                                                                                        
000cfa   0e07     MOVLW     0x7                                                                                             
000cfc   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
000cfe   0e08     MOVLW     0x8            	signed long E=0;                                                                C:\first\v2.0\src\NCSSM\wheels.c
000d00   6adb     CLRF      0xdb,0x0                                                                                        
000d02   0e09     MOVLW     0x9                                                                                             
000d04   6adb     CLRF      0xdb,0x0                                                                                        
000d06   0e0a     MOVLW     0xa                                                                                             
000d08   6adb     CLRF      0xdb,0x0                                                                                        
000d0a   0e0b     MOVLW     0xb                                                                                             
000d0c   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	// Guess at Current wheel direction based on current PWM values                 C:\first\v2.0\src\NCSSM\wheels.c
                                           //	int Rd = 1; //wheels_getDriveDirection(rightPWM);                             C:\first\v2.0\src\NCSSM\wheels.c
                                           //	int Rl = 1; //wheels_getDriveDirection(leftPWM);	                             C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	// get actual speeds. (without direction)                                       C:\first\v2.0\src\NCSSM\wheels.c
                                           #ifndef _USE_AVGSPEED                                                            C:\first\v2.0\src\NCSSM\wheels.c
000d0e   0e00     MOVLW     0x0            	int leftActualSpeed  = (signed int)speedometer_getSpeed(&speedometer_left);     C:\first\v2.0\src\NCSSM\wheels.c
000d10   6ee6     MOVWF     0xe6,0x0                                                                                        
000d12   0e01     MOVLW     0x1                                                                                             
000d14   6ee6     MOVWF     0xe6,0x0                                                                                        
000d16   eca6     CALL      0x294c,0x0                                                                                      
000d18   f014                                                                                                               
000d1a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d1c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d1e   0e0c     MOVLW     0xc                                                                                             
000d20   cff3     MOVFF     0xff3,0xfdb                                                                                     
000d22   ffdb                                                                                                               
000d24   0e0d     MOVLW     0xd                                                                                             
000d26   cff4     MOVFF     0xff4,0xfdb                                                                                     
000d28   ffdb                                                                                                               
000d2a   0e14     MOVLW     0x14           	int rightActualSpeed = (signed int)speedometer_getSpeed(&speedometer_right);    C:\first\v2.0\src\NCSSM\wheels.c
000d2c   6ee6     MOVWF     0xe6,0x0                                                                                        
000d2e   0e01     MOVLW     0x1                                                                                             
000d30   6ee6     MOVWF     0xe6,0x0                                                                                        
000d32   eca6     CALL      0x294c,0x0                                                                                      
000d34   f014                                                                                                               
000d36   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d38   52e5     MOVF      0xe5,0x1,0x0                                                                                    
000d3a   0e0e     MOVLW     0xe                                                                                             
000d3c   cff3     MOVFF     0xff3,0xfdb                                                                                     
000d3e   ffdb                                                                                                               
000d40   0e0f     MOVLW     0xf                                                                                             
000d42   cff4     MOVFF     0xff4,0xfdb                                                                                     
000d44   ffdb                                                                                                               
                                           #else                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	int leftActualSpeed = (signed int)avgSpeed_getSpeed( &avgSpeed_left );          C:\first\v2.0\src\NCSSM\wheels.c
                                           	int rightActualSpeed = (signed int)avgSpeed_getSpeed( &avgSpeed_right );        C:\first\v2.0\src\NCSSM\wheels.c
                                           #endif                                                                           C:\first\v2.0\src\NCSSM\wheels.c
                                           	                                                                                C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
000d46   0e0c     MOVLW     0xc            	signed int VTactual = leftActualSpeed - rightActualSpeed;                       C:\first\v2.0\src\NCSSM\wheels.c
000d48   cfdb     MOVFF     0xfdb,0x2d                                                                                      
000d4a   f02d                                                                                                               
000d4c   0e0d     MOVLW     0xd                                                                                             
000d4e   cfdb     MOVFF     0xfdb,0x2e                                                                                      
000d50   f02e                                                                                                               
000d52   0e0e     MOVLW     0xe                                                                                             
000d54   50db     MOVF      0xdb,0x0,0x0                                                                                    
000d56   5c2d     SUBWF     0x2d,0x0,0x0                                                                                    
000d58   6e2b     MOVWF     0x2b,0x0                                                                                        
000d5a   0e0f     MOVLW     0xf                                                                                             
000d5c   50db     MOVF      0xdb,0x0,0x0                                                                                    
000d5e   582e     SUBWFB    0x2e,0x0,0x0                                                                                    
000d60   6e2c     MOVWF     0x2c,0x0                                                                                        
000d62   0e10     MOVLW     0x10                                                                                            
000d64   c02b     MOVFF     0x2b,0xfdb                                                                                      
000d66   ffdb                                                                                                               
000d68   0e11     MOVLW     0x11                                                                                            
000d6a   c02c     MOVFF     0x2c,0xfdb                                                                                      
000d6c   ffdb                                                                                                               
                                           	                                                                                C:\first\v2.0\src\NCSSM\wheels.c
000d6e   c204     MOVFF     0x204,0x1b     	long lTemp = (long)(targetTurningSpeed*1000L);                                  C:\first\v2.0\src\NCSSM\wheels.c
000d70   f01b                                                                                                               
000d72   c205     MOVFF     0x205,0x1c                                                                                      
000d74   f01c                                                                                                               
000d76   6a1d     CLRF      0x1d,0x0                                                                                        
000d78   6a1e     CLRF      0x1e,0x0                                                                                        
000d7a   ae1c     BTFSS     0x1c,0x7,0x0                                                                                    
000d7c   d002     BRA       0xd82                                                                                           
000d7e   681d     SETF      0x1d,0x0                                                                                        
000d80   681e     SETF      0x1e,0x0                                                                                        
000d82   0ee8     MOVLW     0xe8                                                                                            
000d84   6e20     MOVWF     0x20,0x0                                                                                        
000d86   0e03     MOVLW     0x3                                                                                             
000d88   6e21     MOVWF     0x21,0x0                                                                                        
000d8a   6a22     CLRF      0x22,0x0                                                                                        
000d8c   6a23     CLRF      0x23,0x0                                                                                        
000d8e   ec78     CALL      0x62f0,0x0                                                                                      
000d90   f031                                                                                                               
000d92   0e12     MOVLW     0x12                                                                                            
000d94   c017     MOVFF     0x17,0xfdb                                                                                      
000d96   ffdb                                                                                                               
000d98   0e13     MOVLW     0x13                                                                                            
000d9a   c018     MOVFF     0x18,0xfdb                                                                                      
000d9c   ffdb                                                                                                               
000d9e   0e14     MOVLW     0x14                                                                                            
000da0   c019     MOVFF     0x19,0xfdb                                                                                      
000da2   ffdb                                                                                                               
000da4   0e15     MOVLW     0x15                                                                                            
000da6   c01a     MOVFF     0x1a,0xfdb                                                                                      
000da8   ffdb                                                                                                               
000daa   0e12     MOVLW     0x12           	int VTtarget = (int)(lTemp/289L);                                               C:\first\v2.0\src\NCSSM\wheels.c
000dac   cfdb     MOVFF     0xfdb,0x1b                                                                                      
000dae   f01b                                                                                                               
000db0   0e13     MOVLW     0x13                                                                                            
000db2   cfdb     MOVFF     0xfdb,0x1c                                                                                      
000db4   f01c                                                                                                               
000db6   0e14     MOVLW     0x14                                                                                            
000db8   cfdb     MOVFF     0xfdb,0x1d                                                                                      
000dba   f01d                                                                                                               
000dbc   0e15     MOVLW     0x15                                                                                            
000dbe   cfdb     MOVFF     0xfdb,0x1e                                                                                      
000dc0   f01e                                                                                                               
000dc2   0e21     MOVLW     0x21                                                                                            
000dc4   6e20     MOVWF     0x20,0x0                                                                                        
000dc6   0e01     MOVLW     0x1                                                                                             
000dc8   6e21     MOVWF     0x21,0x0                                                                                        
000dca   6a22     CLRF      0x22,0x0                                                                                        
000dcc   6a23     CLRF      0x23,0x0                                                                                        
000dce   ecd2     CALL      0x5fa4,0x0                                                                                      
000dd0   f02f                                                                                                               
000dd2   0e16     MOVLW     0x16                                                                                            
000dd4   c01b     MOVFF     0x1b,0xfdb                                                                                      
000dd6   ffdb                                                                                                               
000dd8   0e17     MOVLW     0x17                                                                                            
000dda   c01c     MOVFF     0x1c,0xfdb                                                                                      
000ddc   ffdb                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
000dde   0e18     MOVLW     0x18           	int VLtarget = targetSpeed;                                                     C:\first\v2.0\src\NCSSM\wheels.c
000de0   c202     MOVFF     0x202,0xfdb                                                                                     
000de2   ffdb                                                                                                               
000de4   0e19     MOVLW     0x19                                                                                            
000de6   c203     MOVFF     0x203,0xfdb                                                                                     
000de8   ffdb                                                                                                               
000dea   0e1a     MOVLW     0x1a           	int VRtarget = targetSpeed;                                                     C:\first\v2.0\src\NCSSM\wheels.c
000dec   c202     MOVFF     0x202,0xfdb                                                                                     
000dee   ffdb                                                                                                               
000df0   0e1b     MOVLW     0x1b                                                                                            
000df2   c203     MOVFF     0x203,0xfdb                                                                                     
000df4   ffdb                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           //	//TurningSpeed PID                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           //	Vfturn = (long)iterateTurnPID( VTtarget, VTactual, &turningState );           C:\first\v2.0\src\NCSSM\wheels.c
                                           //	VLtarget += Vfturn/2;                                                         C:\first\v2.0\src\NCSSM\wheels.c
                                           //	VRtarget += Vfturn/2;                                                         C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
000df6   0e16     MOVLW     0x16           	VLtarget -= VTtarget/2;                                                         C:\first\v2.0\src\NCSSM\wheels.c
000df8   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000dfa   f02b                                                                                                               
000dfc   0e17     MOVLW     0x17                                                                                            
000dfe   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000e00   f02c                                                                                                               
000e02   0e02     MOVLW     0x2                                                                                             
000e04   6e22     MOVWF     0x22,0x0                                                                                        
000e06   6a23     CLRF      0x23,0x0                                                                                        
000e08   c02b     MOVFF     0x2b,0x1d                                                                                       
000e0a   f01d                                                                                                               
000e0c   c02c     MOVFF     0x2c,0x1e                                                                                       
000e0e   f01e                                                                                                               
000e10   ecac     CALL      0x5f58,0x0                                                                                      
000e12   f02f                                                                                                               
000e14   c01d     MOVFF     0x1d,0x2b                                                                                       
000e16   f02b                                                                                                               
000e18   c01e     MOVFF     0x1e,0x2c                                                                                       
000e1a   f02c                                                                                                               
000e1c   50d9     MOVF      0xd9,0x0,0x0                                                                                    
000e1e   0f18     ADDLW     0x18                                                                                            
000e20   6ee9     MOVWF     0xe9,0x0                                                                                        
000e22   cfda     MOVFF     0xfda,0xfea                                                                                     
000e24   ffea                                                                                                               
000e26   502b     MOVF      0x2b,0x0,0x0                                                                                    
000e28   5eee     SUBWF     0xee,0x1,0x0                                                                                    
000e2a   502c     MOVF      0x2c,0x0,0x0                                                                                    
000e2c   5aed     SUBWFB    0xed,0x1,0x0                                                                                    
000e2e   0e16     MOVLW     0x16           	VRtarget += VTtarget/2;                                                         C:\first\v2.0\src\NCSSM\wheels.c
000e30   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000e32   f02b                                                                                                               
000e34   0e17     MOVLW     0x17                                                                                            
000e36   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000e38   f02c                                                                                                               
000e3a   0e02     MOVLW     0x2                                                                                             
000e3c   6e22     MOVWF     0x22,0x0                                                                                        
000e3e   6a23     CLRF      0x23,0x0                                                                                        
000e40   c02b     MOVFF     0x2b,0x1d                                                                                       
000e42   f01d                                                                                                               
000e44   c02c     MOVFF     0x2c,0x1e                                                                                       
000e46   f01e                                                                                                               
000e48   ecac     CALL      0x5f58,0x0                                                                                      
000e4a   f02f                                                                                                               
000e4c   c01d     MOVFF     0x1d,0x2b                                                                                       
000e4e   f02b                                                                                                               
000e50   c01e     MOVFF     0x1e,0x2c                                                                                       
000e52   f02c                                                                                                               
000e54   50d9     MOVF      0xd9,0x0,0x0                                                                                    
000e56   0f1a     ADDLW     0x1a                                                                                            
000e58   6ee9     MOVWF     0xe9,0x0                                                                                        
000e5a   cfda     MOVFF     0xfda,0xfea                                                                                     
000e5c   ffea                                                                                                               
000e5e   502b     MOVF      0x2b,0x0,0x0                                                                                    
000e60   26ee     ADDWF     0xee,0x1,0x0                                                                                    
000e62   502c     MOVF      0x2c,0x0,0x0                                                                                    
000e64   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
                                           	//Left Speed PID                                                                C:\first\v2.0\src\NCSSM\wheels.c
                                           	                                                                                C:\first\v2.0\src\NCSSM\wheels.c
                                           	// compute next iteration of PID - returns -128..127                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	//	adjust( &VLtarget, &leftActualSpeed, &leftWheelState );                      C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	// correct the sign of actual speed if necessary                                C:\first\v2.0\src\NCSSM\wheels.c
000e66   0e18     MOVLW     0x18           	if( VLtarget < 0 ) {                                                            C:\first\v2.0\src\NCSSM\wheels.c
000e68   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000e6a   f02b                                                                                                               
000e6c   0e19     MOVLW     0x19                                                                                            
000e6e   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000e70   f02c                                                                                                               
000e72   0100     MOVLB     0x0                                                                                             
000e74   0e80     MOVLW     0x80                                                                                            
000e76   142c     ANDWF     0x2c,0x0,0x0                                                                                    
000e78   e010     BZ        0xe9a                                                                                           
000e7a   681d     SETF      0x1d,0x0       		leftActualSpeed = -leftActualSpeed;                                            C:\first\v2.0\src\NCSSM\wheels.c
000e7c   681e     SETF      0x1e,0x0                                                                                        
000e7e   0e0c     MOVLW     0xc                                                                                             
000e80   cfdb     MOVFF     0xfdb,0x22                                                                                      
000e82   f022                                                                                                               
000e84   0e0d     MOVLW     0xd                                                                                             
000e86   cfdb     MOVFF     0xfdb,0x23                                                                                      
000e88   f023                                                                                                               
000e8a   ec06     CALL      0x600c,0x0                                                                                      
000e8c   f030                                                                                                               
000e8e   0e0c     MOVLW     0xc                                                                                             
000e90   c01b     MOVFF     0x1b,0xfdb                                                                                      
000e92   ffdb                                                                                                               
000e94   0e0d     MOVLW     0xd                                                                                             
000e96   c01c     MOVFF     0x1c,0xfdb                                                                                      
000e98   ffdb                                                                                                               
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	// minimum speed                                                                C:\first\v2.0\src\NCSSM\wheels.c
000e9a   0e18     MOVLW     0x18           	if( VLtarget > 50  &&  VLtarget < 500 ) {                                       C:\first\v2.0\src\NCSSM\wheels.c
000e9c   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000e9e   f02b                                                                                                               
000ea0   0e19     MOVLW     0x19                                                                                            
000ea2   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000ea4   f02c                                                                                                               
000ea6   342c     RLCF      0x2c,0x0,0x0                                                                                    
000ea8   e204     BC        0xeb2                                                                                           
000eaa   502b     MOVF      0x2b,0x0,0x0                                                                                    
000eac   0832     SUBLW     0x32                                                                                            
000eae   0e00     MOVLW     0x0                                                                                             
000eb0   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
000eb2   e219     BC        0xee6                                                                                           
000eb4   0e18     MOVLW     0x18                                                                                            
000eb6   cfdb     MOVFF     0xfdb,0x2d                                                                                      
000eb8   f02d                                                                                                               
000eba   0e19     MOVLW     0x19                                                                                            
000ebc   cfdb     MOVFF     0xfdb,0x2e                                                                                      
000ebe   f02e                                                                                                               
000ec0   90d8     BCF       0xd8,0x0,0x0                                                                                    
000ec2   502e     MOVF      0x2e,0x0,0x0                                                                                    
000ec4   e604     BN        0xece                                                                                           
000ec6   0ef4     MOVLW     0xf4                                                                                            
000ec8   5c2d     SUBWF     0x2d,0x0,0x0                                                                                    
000eca   0e01     MOVLW     0x1                                                                                             
000ecc   582e     SUBWFB    0x2e,0x0,0x0                                                                                    
000ece   e20b     BC        0xee6                                                                                           
000ed0   0ef4     MOVLW     0xf4           		VLtarget = 500;                                                                C:\first\v2.0\src\NCSSM\wheels.c
000ed2   6ef3     MOVWF     0xf3,0x0                                                                                        
000ed4   0e18     MOVLW     0x18                                                                                            
000ed6   cff3     MOVFF     0xff3,0xfdb                                                                                     
000ed8   ffdb                                                                                                               
000eda   0e01     MOVLW     0x1                                                                                             
000edc   6ef3     MOVWF     0xf3,0x0                                                                                        
000ede   0e19     MOVLW     0x19                                                                                            
000ee0   cff3     MOVFF     0xff3,0xfdb                                                                                     
000ee2   ffdb                                                                                                               
000ee4   d045     BRA       0xf70          	} else if( VLtarget < -50 && VLtarget > -500 ) {                                C:\first\v2.0\src\NCSSM\wheels.c
000ee6   0e18     MOVLW     0x18                                                                                            
000ee8   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000eea   f02b                                                                                                               
000eec   0e19     MOVLW     0x19                                                                                            
000eee   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000ef0   f02c                                                                                                               
000ef2   80d8     BSF       0xd8,0x0,0x0                                                                                    
000ef4   502c     MOVF      0x2c,0x0,0x0                                                                                    
000ef6   e704     BNN       0xf00                                                                                           
000ef8   0ece     MOVLW     0xce                                                                                            
000efa   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
000efc   0eff     MOVLW     0xff                                                                                            
000efe   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
000f00   e218     BC        0xf32                                                                                           
000f02   0e18     MOVLW     0x18                                                                                            
000f04   cfdb     MOVFF     0xfdb,0x2d                                                                                      
000f06   f02d                                                                                                               
000f08   0e19     MOVLW     0x19                                                                                            
000f0a   cfdb     MOVFF     0xfdb,0x2e                                                                                      
000f0c   f02e                                                                                                               
000f0e   342e     RLCF      0x2e,0x0,0x0                                                                                    
000f10   e304     BNC       0xf1a                                                                                           
000f12   502d     MOVF      0x2d,0x0,0x0                                                                                    
000f14   080c     SUBLW     0xc                                                                                             
000f16   0efe     MOVLW     0xfe                                                                                            
000f18   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
000f1a   e20b     BC        0xf32                                                                                           
000f1c   0e0c     MOVLW     0xc            		VLtarget = -500;                                                               C:\first\v2.0\src\NCSSM\wheels.c
000f1e   6ef3     MOVWF     0xf3,0x0                                                                                        
000f20   0e18     MOVLW     0x18                                                                                            
000f22   cff3     MOVFF     0xff3,0xfdb                                                                                     
000f24   ffdb                                                                                                               
000f26   0efe     MOVLW     0xfe                                                                                            
000f28   6ef3     MOVWF     0xf3,0x0                                                                                        
000f2a   0e19     MOVLW     0x19                                                                                            
000f2c   cff3     MOVFF     0xff3,0xfdb                                                                                     
000f2e   ffdb                                                                                                               
000f30   d01f     BRA       0xf70          	} else if( VLtarget >= -50  &&  VLtarget <= 50 ){                               C:\first\v2.0\src\NCSSM\wheels.c
000f32   0e18     MOVLW     0x18                                                                                            
000f34   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000f36   f02b                                                                                                               
000f38   0e19     MOVLW     0x19                                                                                            
000f3a   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000f3c   f02c                                                                                                               
000f3e   80d8     BSF       0xd8,0x0,0x0                                                                                    
000f40   502c     MOVF      0x2c,0x0,0x0                                                                                    
000f42   e704     BNN       0xf4c                                                                                           
000f44   0ece     MOVLW     0xce                                                                                            
000f46   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
000f48   0eff     MOVLW     0xff                                                                                            
000f4a   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
000f4c   e311     BNC       0xf70                                                                                           
000f4e   0e18     MOVLW     0x18                                                                                            
000f50   cfdb     MOVFF     0xfdb,0x2d                                                                                      
000f52   f02d                                                                                                               
000f54   0e19     MOVLW     0x19                                                                                            
000f56   cfdb     MOVFF     0xfdb,0x2e                                                                                      
000f58   f02e                                                                                                               
000f5a   342e     RLCF      0x2e,0x0,0x0                                                                                    
000f5c   e204     BC        0xf66                                                                                           
000f5e   502d     MOVF      0x2d,0x0,0x0                                                                                    
000f60   0832     SUBLW     0x32                                                                                            
000f62   0e00     MOVLW     0x0                                                                                             
000f64   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
000f66   e304     BNC       0xf70                                                                                           
000f68   0e18     MOVLW     0x18           		VLtarget = 0;                                                                  C:\first\v2.0\src\NCSSM\wheels.c
000f6a   6adb     CLRF      0xdb,0x0                                                                                        
000f6c   0e19     MOVLW     0x19                                                                                            
000f6e   6adb     CLRF      0xdb,0x0                                                                                        
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
000f70   0e06     MOVLW     0x6            	PLout = iterateSpeedPID( VLtarget, leftActualSpeed, &leftWheelState );          C:\first\v2.0\src\NCSSM\wheels.c
000f72   6ee6     MOVWF     0xe6,0x0                                                                                        
000f74   0e02     MOVLW     0x2                                                                                             
000f76   6ee6     MOVWF     0xe6,0x0                                                                                        
000f78   0e0c     MOVLW     0xc                                                                                             
000f7a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000f7c   ffe6                                                                                                               
000f7e   0e0d     MOVLW     0xd                                                                                             
000f80   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000f82   ffe6                                                                                                               
000f84   0e18     MOVLW     0x18                                                                                            
000f86   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000f88   ffe6                                                                                                               
000f8a   0e19     MOVLW     0x19                                                                                            
000f8c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
000f8e   ffe6                                                                                                               
000f90   dc71     RCALL     0x874                                                                                           
000f92   6ef5     MOVWF     0xf5,0x0                                                                                        
000f94   0e06     MOVLW     0x6                                                                                             
000f96   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
000f98   50f5     MOVF      0xf5,0x0,0x0                                                                                    
000f9a   0e02     MOVLW     0x2                                                                                             
000f9c   cff3     MOVFF     0xff3,0xfdb                                                                                     
000f9e   ffdb                                                                                                               
000fa0   0e03     MOVLW     0x3                                                                                             
000fa2   cff4     MOVFF     0xff4,0xfdb                                                                                     
000fa4   ffdb                                                                                                               
                                           	// convert into range 0..255, and convert to unsigned char                      C:\first\v2.0\src\NCSSM\wheels.c
000fa6   0e7f     MOVLW     0x7f           	tempInt = PLout + (int)127;                                                     C:\first\v2.0\src\NCSSM\wheels.c
000fa8   6ee7     MOVWF     0xe7,0x0                                                                                        
000faa   0e02     MOVLW     0x2                                                                                             
000fac   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000fae   f02b                                                                                                               
000fb0   0e03     MOVLW     0x3                                                                                             
000fb2   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000fb4   f02c                                                                                                               
000fb6   50e7     MOVF      0xe7,0x0,0x0                                                                                    
000fb8   262b     ADDWF     0x2b,0x1,0x0                                                                                    
000fba   0e00     MOVLW     0x0                                                                                             
000fbc   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
000fbe   0e06     MOVLW     0x6                                                                                             
000fc0   c02b     MOVFF     0x2b,0xfdb                                                                                      
000fc2   ffdb                                                                                                               
000fc4   0e07     MOVLW     0x7                                                                                             
000fc6   c02c     MOVFF     0x2c,0xfdb                                                                                      
000fc8   ffdb                                                                                                               
000fca   0e06     MOVLW     0x6            	leftPWM = (unsigned char)(tempInt);                                             C:\first\v2.0\src\NCSSM\wheels.c
000fcc   cfdb     MOVFF     0xfdb,0x247                                                                                     
000fce   f247                                                                                                               
000fd0   0e7f     MOVLW     0x7f           	if( ((leftPWM< 127) && (PLout > 0)) || ((leftPWM>127) && (PLout<0)) ) {         C:\first\v2.0\src\NCSSM\wheels.c
000fd2   0102     MOVLB     0x2                                                                                             
000fd4   5d47     SUBWF     0x47,0x0,0x1                                                                                    
000fd6   e20d     BC        0xff2                                                                                           
000fd8   0e02     MOVLW     0x2                                                                                             
000fda   cfdb     MOVFF     0xfdb,0x2b                                                                                      
000fdc   f02b                                                                                                               
000fde   0e03     MOVLW     0x3                                                                                             
000fe0   cfdb     MOVFF     0xfdb,0x2c                                                                                      
000fe2   f02c                                                                                                               
000fe4   342c     RLCF      0x2c,0x0,0x0                                                                                    
000fe6   e204     BC        0xff0                                                                                           
000fe8   502b     MOVF      0x2b,0x0,0x0                                                                                    
000fea   0800     SUBLW     0x0                                                                                             
000fec   0e00     MOVLW     0x0                                                                                             
000fee   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
000ff0   e30d     BNC       0x100c                                                                                          
000ff2   5147     MOVF      0x47,0x0,0x1                                                                                    
000ff4   087f     SUBLW     0x7f                                                                                            
000ff6   e20d     BC        0x1012                                                                                          
000ff8   0e02     MOVLW     0x2                                                                                             
000ffa   cfdb     MOVFF     0xfdb,0x2d                                                                                      
000ffc   f02d                                                                                                               
000ffe   0e03     MOVLW     0x3                                                                                             
001000   cfdb     MOVFF     0xfdb,0x2e                                                                                      
001002   f02e                                                                                                               
001004   0100     MOVLB     0x0                                                                                             
001006   0e80     MOVLW     0x80                                                                                            
001008   142e     ANDWF     0x2e,0x0,0x0                                                                                    
00100a   e003     BZ        0x1012                                                                                          
00100c   0102     MOVLB     0x2            		leftPWM= 127;                                                                  C:\first\v2.0\src\NCSSM\wheels.c
00100e   0e7f     MOVLW     0x7f                                                                                            
001010   6f47     MOVWF     0x47,0x1                                                                                        
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                           	                                                                                C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	//Right Speed PID                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	// compute next iteration of PID - returns -128..127                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	//	adjust( &VRtarget, &rightActualSpeed, &rightWheelState );                    C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	// correct the sign of actual speed if necessary                                C:\first\v2.0\src\NCSSM\wheels.c
001012   0e1a     MOVLW     0x1a           	if( VRtarget < 0 ) {                                                            C:\first\v2.0\src\NCSSM\wheels.c
001014   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001016   f02b                                                                                                               
001018   0e1b     MOVLW     0x1b                                                                                            
00101a   cfdb     MOVFF     0xfdb,0x2c                                                                                      
00101c   f02c                                                                                                               
00101e   0100     MOVLB     0x0                                                                                             
001020   0e80     MOVLW     0x80                                                                                            
001022   142c     ANDWF     0x2c,0x0,0x0                                                                                    
001024   e010     BZ        0x1046                                                                                          
001026   681d     SETF      0x1d,0x0       		rightActualSpeed = -rightActualSpeed;                                          C:\first\v2.0\src\NCSSM\wheels.c
001028   681e     SETF      0x1e,0x0                                                                                        
00102a   0e0e     MOVLW     0xe                                                                                             
00102c   cfdb     MOVFF     0xfdb,0x22                                                                                      
00102e   f022                                                                                                               
001030   0e0f     MOVLW     0xf                                                                                             
001032   cfdb     MOVFF     0xfdb,0x23                                                                                      
001034   f023                                                                                                               
001036   ec06     CALL      0x600c,0x0                                                                                      
001038   f030                                                                                                               
00103a   0e0e     MOVLW     0xe                                                                                             
00103c   c01b     MOVFF     0x1b,0xfdb                                                                                      
00103e   ffdb                                                                                                               
001040   0e0f     MOVLW     0xf                                                                                             
001042   c01c     MOVFF     0x1c,0xfdb                                                                                      
001044   ffdb                                                                                                               
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	// minimum speed                                                                C:\first\v2.0\src\NCSSM\wheels.c
001046   0e1a     MOVLW     0x1a           	if( VRtarget > 50  &&  VRtarget < 500 ) {                                       C:\first\v2.0\src\NCSSM\wheels.c
001048   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00104a   f02b                                                                                                               
00104c   0e1b     MOVLW     0x1b                                                                                            
00104e   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001050   f02c                                                                                                               
001052   342c     RLCF      0x2c,0x0,0x0                                                                                    
001054   e204     BC        0x105e                                                                                          
001056   502b     MOVF      0x2b,0x0,0x0                                                                                    
001058   0832     SUBLW     0x32                                                                                            
00105a   0e00     MOVLW     0x0                                                                                             
00105c   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
00105e   e219     BC        0x1092                                                                                          
001060   0e1a     MOVLW     0x1a                                                                                            
001062   cfdb     MOVFF     0xfdb,0x2d                                                                                      
001064   f02d                                                                                                               
001066   0e1b     MOVLW     0x1b                                                                                            
001068   cfdb     MOVFF     0xfdb,0x2e                                                                                      
00106a   f02e                                                                                                               
00106c   90d8     BCF       0xd8,0x0,0x0                                                                                    
00106e   502e     MOVF      0x2e,0x0,0x0                                                                                    
001070   e604     BN        0x107a                                                                                          
001072   0ef4     MOVLW     0xf4                                                                                            
001074   5c2d     SUBWF     0x2d,0x0,0x0                                                                                    
001076   0e01     MOVLW     0x1                                                                                             
001078   582e     SUBWFB    0x2e,0x0,0x0                                                                                    
00107a   e20b     BC        0x1092                                                                                          
00107c   0ef4     MOVLW     0xf4           		VRtarget = 500;                                                                C:\first\v2.0\src\NCSSM\wheels.c
00107e   6ef3     MOVWF     0xf3,0x0                                                                                        
001080   0e1a     MOVLW     0x1a                                                                                            
001082   cff3     MOVFF     0xff3,0xfdb                                                                                     
001084   ffdb                                                                                                               
001086   0e01     MOVLW     0x1                                                                                             
001088   6ef3     MOVWF     0xf3,0x0                                                                                        
00108a   0e1b     MOVLW     0x1b                                                                                            
00108c   cff3     MOVFF     0xff3,0xfdb                                                                                     
00108e   ffdb                                                                                                               
001090   d045     BRA       0x111c         	} else if( VRtarget < -50 && VRtarget > -500 ) {                                C:\first\v2.0\src\NCSSM\wheels.c
001092   0e1a     MOVLW     0x1a                                                                                            
001094   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001096   f02b                                                                                                               
001098   0e1b     MOVLW     0x1b                                                                                            
00109a   cfdb     MOVFF     0xfdb,0x2c                                                                                      
00109c   f02c                                                                                                               
00109e   80d8     BSF       0xd8,0x0,0x0                                                                                    
0010a0   502c     MOVF      0x2c,0x0,0x0                                                                                    
0010a2   e704     BNN       0x10ac                                                                                          
0010a4   0ece     MOVLW     0xce                                                                                            
0010a6   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
0010a8   0eff     MOVLW     0xff                                                                                            
0010aa   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
0010ac   e218     BC        0x10de                                                                                          
0010ae   0e1a     MOVLW     0x1a                                                                                            
0010b0   cfdb     MOVFF     0xfdb,0x2d                                                                                      
0010b2   f02d                                                                                                               
0010b4   0e1b     MOVLW     0x1b                                                                                            
0010b6   cfdb     MOVFF     0xfdb,0x2e                                                                                      
0010b8   f02e                                                                                                               
0010ba   342e     RLCF      0x2e,0x0,0x0                                                                                    
0010bc   e304     BNC       0x10c6                                                                                          
0010be   502d     MOVF      0x2d,0x0,0x0                                                                                    
0010c0   080c     SUBLW     0xc                                                                                             
0010c2   0efe     MOVLW     0xfe                                                                                            
0010c4   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
0010c6   e20b     BC        0x10de                                                                                          
0010c8   0e0c     MOVLW     0xc            		VRtarget = -500;                                                               C:\first\v2.0\src\NCSSM\wheels.c
0010ca   6ef3     MOVWF     0xf3,0x0                                                                                        
0010cc   0e1a     MOVLW     0x1a                                                                                            
0010ce   cff3     MOVFF     0xff3,0xfdb                                                                                     
0010d0   ffdb                                                                                                               
0010d2   0efe     MOVLW     0xfe                                                                                            
0010d4   6ef3     MOVWF     0xf3,0x0                                                                                        
0010d6   0e1b     MOVLW     0x1b                                                                                            
0010d8   cff3     MOVFF     0xff3,0xfdb                                                                                     
0010da   ffdb                                                                                                               
0010dc   d01f     BRA       0x111c         	} else if( VRtarget >= -50  &&  VRtarget <= 50 ) {                              C:\first\v2.0\src\NCSSM\wheels.c
0010de   0e1a     MOVLW     0x1a                                                                                            
0010e0   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0010e2   f02b                                                                                                               
0010e4   0e1b     MOVLW     0x1b                                                                                            
0010e6   cfdb     MOVFF     0xfdb,0x2c                                                                                      
0010e8   f02c                                                                                                               
0010ea   80d8     BSF       0xd8,0x0,0x0                                                                                    
0010ec   502c     MOVF      0x2c,0x0,0x0                                                                                    
0010ee   e704     BNN       0x10f8                                                                                          
0010f0   0ece     MOVLW     0xce                                                                                            
0010f2   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
0010f4   0eff     MOVLW     0xff                                                                                            
0010f6   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
0010f8   e311     BNC       0x111c                                                                                          
0010fa   0e1a     MOVLW     0x1a                                                                                            
0010fc   cfdb     MOVFF     0xfdb,0x2d                                                                                      
0010fe   f02d                                                                                                               
001100   0e1b     MOVLW     0x1b                                                                                            
001102   cfdb     MOVFF     0xfdb,0x2e                                                                                      
001104   f02e                                                                                                               
001106   342e     RLCF      0x2e,0x0,0x0                                                                                    
001108   e204     BC        0x1112                                                                                          
00110a   502d     MOVF      0x2d,0x0,0x0                                                                                    
00110c   0832     SUBLW     0x32                                                                                            
00110e   0e00     MOVLW     0x0                                                                                             
001110   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
001112   e304     BNC       0x111c                                                                                          
001114   0e1a     MOVLW     0x1a           		VRtarget = 0;                                                                  C:\first\v2.0\src\NCSSM\wheels.c
001116   6adb     CLRF      0xdb,0x0                                                                                        
001118   0e1b     MOVLW     0x1b                                                                                            
00111a   6adb     CLRF      0xdb,0x0                                                                                        
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
00111c   0e10     MOVLW     0x10           	PRout = iterateSpeedPID( VRtarget, rightActualSpeed, &rightWheelState );        C:\first\v2.0\src\NCSSM\wheels.c
00111e   6ee6     MOVWF     0xe6,0x0                                                                                        
001120   0e02     MOVLW     0x2                                                                                             
001122   6ee6     MOVWF     0xe6,0x0                                                                                        
001124   0e0e     MOVLW     0xe                                                                                             
001126   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001128   ffe6                                                                                                               
00112a   0e0f     MOVLW     0xf                                                                                             
00112c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00112e   ffe6                                                                                                               
001130   0e1a     MOVLW     0x1a                                                                                            
001132   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001134   ffe6                                                                                                               
001136   0e1b     MOVLW     0x1b                                                                                            
001138   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00113a   ffe6                                                                                                               
00113c   ec3a     CALL      0x874,0x0                                                                                       
00113e   f004                                                                                                               
001140   6ef5     MOVWF     0xf5,0x0                                                                                        
001142   0e06     MOVLW     0x6                                                                                             
001144   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
001146   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001148   0e04     MOVLW     0x4                                                                                             
00114a   cff3     MOVFF     0xff3,0xfdb                                                                                     
00114c   ffdb                                                                                                               
00114e   0e05     MOVLW     0x5                                                                                             
001150   cff4     MOVFF     0xff4,0xfdb                                                                                     
001152   ffdb                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	// convert into range 0..255, and convert to unsigned char                      C:\first\v2.0\src\NCSSM\wheels.c
001154   0e7f     MOVLW     0x7f           	tempInt = PRout + (int)127;                                                     C:\first\v2.0\src\NCSSM\wheels.c
001156   6ee7     MOVWF     0xe7,0x0                                                                                        
001158   0e04     MOVLW     0x4                                                                                             
00115a   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00115c   f02b                                                                                                               
00115e   0e05     MOVLW     0x5                                                                                             
001160   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001162   f02c                                                                                                               
001164   50e7     MOVF      0xe7,0x0,0x0                                                                                    
001166   262b     ADDWF     0x2b,0x1,0x0                                                                                    
001168   0e00     MOVLW     0x0                                                                                             
00116a   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
00116c   0e06     MOVLW     0x6                                                                                             
00116e   c02b     MOVFF     0x2b,0xfdb                                                                                      
001170   ffdb                                                                                                               
001172   0e07     MOVLW     0x7                                                                                             
001174   c02c     MOVFF     0x2c,0xfdb                                                                                      
001176   ffdb                                                                                                               
001178   0e06     MOVLW     0x6            	rightPWM = (unsigned char)(tempInt);                                            C:\first\v2.0\src\NCSSM\wheels.c
00117a   cfdb     MOVFF     0xfdb,0x246                                                                                     
00117c   f246                                                                                                               
00117e   0e7f     MOVLW     0x7f           	if( ((rightPWM < 127) && (PRout > 0)) || ((rightPWM>127) && (PRout<0)) ) {      C:\first\v2.0\src\NCSSM\wheels.c
001180   0102     MOVLB     0x2                                                                                             
001182   5d46     SUBWF     0x46,0x0,0x1                                                                                    
001184   e20d     BC        0x11a0                                                                                          
001186   0e04     MOVLW     0x4                                                                                             
001188   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00118a   f02b                                                                                                               
00118c   0e05     MOVLW     0x5                                                                                             
00118e   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001190   f02c                                                                                                               
001192   342c     RLCF      0x2c,0x0,0x0                                                                                    
001194   e204     BC        0x119e                                                                                          
001196   502b     MOVF      0x2b,0x0,0x0                                                                                    
001198   0800     SUBLW     0x0                                                                                             
00119a   0e00     MOVLW     0x0                                                                                             
00119c   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
00119e   e30d     BNC       0x11ba                                                                                          
0011a0   5146     MOVF      0x46,0x0,0x1                                                                                    
0011a2   087f     SUBLW     0x7f                                                                                            
0011a4   e20d     BC        0x11c0                                                                                          
0011a6   0e04     MOVLW     0x4                                                                                             
0011a8   cfdb     MOVFF     0xfdb,0x2d                                                                                      
0011aa   f02d                                                                                                               
0011ac   0e05     MOVLW     0x5                                                                                             
0011ae   cfdb     MOVFF     0xfdb,0x2e                                                                                      
0011b0   f02e                                                                                                               
0011b2   0100     MOVLB     0x0                                                                                             
0011b4   0e80     MOVLW     0x80                                                                                            
0011b6   142e     ANDWF     0x2e,0x0,0x0                                                                                    
0011b8   e003     BZ        0x11c0                                                                                          
0011ba   0102     MOVLB     0x2            		rightPWM = 127;                                                                C:\first\v2.0\src\NCSSM\wheels.c
0011bc   0e7f     MOVLW     0x7f                                                                                            
0011be   6f46     MOVWF     0x46,0x1                                                                                        
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
0011c0   0102     MOVLB     0x2            	++iters;                                                                        C:\first\v2.0\src\NCSSM\wheels.c
0011c2   2b30     INCF      0x30,0x1,0x1                                                                                    
0011c4   0e00     MOVLW     0x0                                                                                             
0011c6   2331     ADDWFC    0x31,0x1,0x1                                                                                    
0011c8   0e32     MOVLW     0x32           	if( iters == 50 ) {                                                             C:\first\v2.0\src\NCSSM\wheels.c
0011ca   1930     XORWF     0x30,0x0,0x1                                                                                    
0011cc   e101     BNZ       0x11d0                                                                                          
0011ce   5131     MOVF      0x31,0x0,0x1                                                                                    
0011d0   e102     BNZ       0x11d6                                                                                          
                                           //		printf( "Lpwm, Rpwm, rSpeed, lSpeed, lESum, rESum: %d, %d, %d, %d, %d, %d\r", (unsigned int)leftPWM, (unsigned int)rightPWM,(int)rightActualSpeed, (int)leftActualSpeed, (int)leftWheelState.Esum, (int)rightWheelState.Esum ); C:\first\v2.0\src\NCSSM\wheels.c
0011d2   6b30     CLRF      0x30,0x1       		iters = 0;                                                                     C:\first\v2.0\src\NCSSM\wheels.c
0011d4   6b31     CLRF      0x31,0x1                                                                                        
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
0011d6   0e18     MOVLW     0x18           	if( ((VLtarget < 0) && (leftPWM > 127)) || ((VLtarget > 0) && (leftPWM < 127)) ) { C:\first\v2.0\src\NCSSM\wheels.c
0011d8   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0011da   f02b                                                                                                               
0011dc   0e19     MOVLW     0x19                                                                                            
0011de   cfdb     MOVFF     0xfdb,0x2c                                                                                      
0011e0   f02c                                                                                                               
0011e2   0100     MOVLB     0x0                                                                                             
0011e4   0e80     MOVLW     0x80                                                                                            
0011e6   142c     ANDWF     0x2c,0x0,0x0                                                                                    
0011e8   e004     BZ        0x11f2                                                                                          
0011ea   0102     MOVLB     0x2                                                                                             
0011ec   5147     MOVF      0x47,0x0,0x1                                                                                    
0011ee   087f     SUBLW     0x7f                                                                                            
0011f0   e311     BNC       0x1214                                                                                          
0011f2   0e18     MOVLW     0x18                                                                                            
0011f4   cfdb     MOVFF     0xfdb,0x2d                                                                                      
0011f6   f02d                                                                                                               
0011f8   0e19     MOVLW     0x19                                                                                            
0011fa   cfdb     MOVFF     0xfdb,0x2e                                                                                      
0011fc   f02e                                                                                                               
0011fe   342e     RLCF      0x2e,0x0,0x0                                                                                    
001200   e204     BC        0x120a                                                                                          
001202   502d     MOVF      0x2d,0x0,0x0                                                                                    
001204   0800     SUBLW     0x0                                                                                             
001206   0e00     MOVLW     0x0                                                                                             
001208   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
00120a   e24f     BC        0x12aa                                                                                          
00120c   0e7f     MOVLW     0x7f                                                                                            
00120e   0102     MOVLB     0x2                                                                                             
001210   5d47     SUBWF     0x47,0x0,0x1                                                                                    
001212   e24b     BC        0x12aa                                                                                          
001288   0ec7     MOVLW     0xc7           		printf("LEFT sign-inverse! VTrad, VTtarget, VTactual: %d, %d, %d \r L(Vtarget, Vactual, Pout, pwm): %d, %d, %d, %d \r R(Vtarget, Vactual, Pout, pwm): %d, %d, %d, %d \r\r",  C:\first\v2.0\src\NCSSM\wheels.c
00128a   6e2b     MOVWF     0x2b,0x0                                                                                        
00128c   0e56     MOVLW     0x56                                                                                            
00128e   6e2c     MOVWF     0x2c,0x0                                                                                        
001290   6a2d     CLRF      0x2d,0x0                                                                                        
001292   c02b     MOVFF     0x2b,0xfe6                                                                                      
001294   ffe6                                                                                                               
001296   c02c     MOVFF     0x2c,0xfe6                                                                                      
001298   ffe6                                                                                                               
00129a   c02d     MOVFF     0x2d,0xfe6                                                                                      
00129c   ffe6                                                                                                               
001268   0e10     MOVLW     0x10           			targetTurningSpeed, VTtarget, VTactual,                                       C:\first\v2.0\src\NCSSM\wheels.c
00126a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00126c   ffe6                                                                                                               
00126e   0e11     MOVLW     0x11                                                                                            
001270   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001272   ffe6                                                                                                               
001274   0e16     MOVLW     0x16                                                                                            
001276   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001278   ffe6                                                                                                               
00127a   0e17     MOVLW     0x17                                                                                            
00127c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00127e   ffe6                                                                                                               
001280   c204     MOVFF     0x204,0xfe6                                                                                     
001282   ffe6                                                                                                               
001284   c205     MOVFF     0x205,0xfe6                                                                                     
001286   ffe6                                                                                                               
00123e   5147     MOVF      0x47,0x0,0x1   			VLtarget, leftActualSpeed, PLout, (unsigned char)leftPWM,                     C:\first\v2.0\src\NCSSM\wheels.c
001240   6ee6     MOVWF     0xe6,0x0                                                                                        
001242   6ae6     CLRF      0xe6,0x0                                                                                        
001244   0e02     MOVLW     0x2                                                                                             
001246   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001248   ffe6                                                                                                               
00124a   0e03     MOVLW     0x3                                                                                             
00124c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00124e   ffe6                                                                                                               
001250   0e0c     MOVLW     0xc                                                                                             
001252   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001254   ffe6                                                                                                               
001256   0e0d     MOVLW     0xd                                                                                             
001258   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00125a   ffe6                                                                                                               
00125c   0e18     MOVLW     0x18                                                                                            
00125e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001260   ffe6                                                                                                               
001262   0e19     MOVLW     0x19                                                                                            
001264   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001266   ffe6                                                                                                               
001214   5146     MOVF      0x46,0x0,0x1   			VRtarget, rightActualSpeed, PRout, (unsigned char)rightPWM                    C:\first\v2.0\src\NCSSM\wheels.c
00121a   0e04     MOVLW     0x4                                                                                             
00121c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00121e   ffe6                                                                                                               
001220   0e05     MOVLW     0x5                                                                                             
001222   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001224   ffe6                                                                                                               
001226   0e0e     MOVLW     0xe                                                                                             
001228   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00122a   ffe6                                                                                                               
00122c   0e0f     MOVLW     0xf                                                                                             
00122e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001230   ffe6                                                                                                               
001232   0e1a     MOVLW     0x1a                                                                                            
001234   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001236   ffe6                                                                                                               
001238   0e1b     MOVLW     0x1b                                                                                            
00123a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00123c   ffe6                                                                                                               
001216   6ee6     MOVWF     0xe6,0x0       		);                                                                             C:\first\v2.0\src\NCSSM\wheels.c
001218   6ae6     CLRF      0xe6,0x0                                                                                        
00129e   ecec     CALL      0x61d8,0x0                                                                                      
0012a0   f030                                                                                                               
0012a2   6ef5     MOVWF     0xf5,0x0                                                                                        
0012a4   0e19     MOVLW     0x19                                                                                            
0012a6   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
0012a8   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
0012aa   0e1a     MOVLW     0x1a           	if( ((VRtarget < 0) && (rightPWM > 127)) || ((VRtarget > 0) && (rightPWM < 127)) ){ C:\first\v2.0\src\NCSSM\wheels.c
0012ac   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0012ae   f02b                                                                                                               
0012b0   0e1b     MOVLW     0x1b                                                                                            
0012b2   cfdb     MOVFF     0xfdb,0x2c                                                                                      
0012b4   f02c                                                                                                               
0012b6   0100     MOVLB     0x0                                                                                             
0012b8   0e80     MOVLW     0x80                                                                                            
0012ba   142c     ANDWF     0x2c,0x0,0x0                                                                                    
0012bc   e004     BZ        0x12c6                                                                                          
0012be   0102     MOVLB     0x2                                                                                             
0012c0   5146     MOVF      0x46,0x0,0x1                                                                                    
0012c2   087f     SUBLW     0x7f                                                                                            
0012c4   e311     BNC       0x12e8                                                                                          
0012c6   0e1a     MOVLW     0x1a                                                                                            
0012c8   cfdb     MOVFF     0xfdb,0x2d                                                                                      
0012ca   f02d                                                                                                               
0012cc   0e1b     MOVLW     0x1b                                                                                            
0012ce   cfdb     MOVFF     0xfdb,0x2e                                                                                      
0012d0   f02e                                                                                                               
0012d2   342e     RLCF      0x2e,0x0,0x0                                                                                    
0012d4   e204     BC        0x12de                                                                                          
0012d6   502d     MOVF      0x2d,0x0,0x0                                                                                    
0012d8   0800     SUBLW     0x0                                                                                             
0012da   0e00     MOVLW     0x0                                                                                             
0012dc   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
0012de   e24f     BC        0x137e                                                                                          
0012e0   0e7f     MOVLW     0x7f                                                                                            
0012e2   0102     MOVLB     0x2                                                                                             
0012e4   5d46     SUBWF     0x46,0x0,0x1                                                                                    
0012e6   e24b     BC        0x137e                                                                                          
00135c   0e28     MOVLW     0x28           		printf("RIGHT sign-inverse! VTrad, VTtarget, VTactual: %d, %d, %d \r L(Vtarget, Vactual, Pout, pwm): %d, %d, %d, %d \r R(Vtarget, Vactual, Pout, pwm): %d, %d, %d, %d \r\r",  C:\first\v2.0\src\NCSSM\wheels.c
00135e   6e2b     MOVWF     0x2b,0x0                                                                                        
001360   0e56     MOVLW     0x56                                                                                            
001362   6e2c     MOVWF     0x2c,0x0                                                                                        
001364   6a2d     CLRF      0x2d,0x0                                                                                        
001366   c02b     MOVFF     0x2b,0xfe6                                                                                      
001368   ffe6                                                                                                               
00136a   c02c     MOVFF     0x2c,0xfe6                                                                                      
00136c   ffe6                                                                                                               
00136e   c02d     MOVFF     0x2d,0xfe6                                                                                      
001370   ffe6                                                                                                               
00133c   0e10     MOVLW     0x10           			targetTurningSpeed, VTtarget, VTactual,                                       C:\first\v2.0\src\NCSSM\wheels.c
00133e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001340   ffe6                                                                                                               
001342   0e11     MOVLW     0x11                                                                                            
001344   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001346   ffe6                                                                                                               
001348   0e16     MOVLW     0x16                                                                                            
00134a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00134c   ffe6                                                                                                               
00134e   0e17     MOVLW     0x17                                                                                            
001350   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001352   ffe6                                                                                                               
001354   c204     MOVFF     0x204,0xfe6                                                                                     
001356   ffe6                                                                                                               
001358   c205     MOVFF     0x205,0xfe6                                                                                     
00135a   ffe6                                                                                                               
001312   5147     MOVF      0x47,0x0,0x1   			VLtarget, leftActualSpeed, PLout, (unsigned char)leftPWM,                     C:\first\v2.0\src\NCSSM\wheels.c
001314   6ee6     MOVWF     0xe6,0x0                                                                                        
001316   6ae6     CLRF      0xe6,0x0                                                                                        
001318   0e02     MOVLW     0x2                                                                                             
00131a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00131c   ffe6                                                                                                               
00131e   0e03     MOVLW     0x3                                                                                             
001320   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001322   ffe6                                                                                                               
001324   0e0c     MOVLW     0xc                                                                                             
001326   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001328   ffe6                                                                                                               
00132a   0e0d     MOVLW     0xd                                                                                             
00132c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00132e   ffe6                                                                                                               
001330   0e18     MOVLW     0x18                                                                                            
001332   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001334   ffe6                                                                                                               
001336   0e19     MOVLW     0x19                                                                                            
001338   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00133a   ffe6                                                                                                               
0012e8   5146     MOVF      0x46,0x0,0x1   			VRtarget, rightActualSpeed, PRout, (unsigned char)rightPWM                    C:\first\v2.0\src\NCSSM\wheels.c
0012ee   0e04     MOVLW     0x4                                                                                             
0012f0   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0012f2   ffe6                                                                                                               
0012f4   0e05     MOVLW     0x5                                                                                             
0012f6   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0012f8   ffe6                                                                                                               
0012fa   0e0e     MOVLW     0xe                                                                                             
0012fc   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0012fe   ffe6                                                                                                               
001300   0e0f     MOVLW     0xf                                                                                             
001302   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001304   ffe6                                                                                                               
001306   0e1a     MOVLW     0x1a                                                                                            
001308   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00130a   ffe6                                                                                                               
00130c   0e1b     MOVLW     0x1b                                                                                            
00130e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
001310   ffe6                                                                                                               
0012ea   6ee6     MOVWF     0xe6,0x0       		);                                                                             C:\first\v2.0\src\NCSSM\wheels.c
0012ec   6ae6     CLRF      0xe6,0x0                                                                                        
001372   ecec     CALL      0x61d8,0x0                                                                                      
001374   f030                                                                                                               
001376   6ef5     MOVWF     0xf5,0x0                                                                                        
001378   0e19     MOVLW     0x19                                                                                            
00137a   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
00137c   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                           //		iters=0;                                                                     C:\first\v2.0\src\NCSSM\wheels.c
                                           //	}                                                                             C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
00137e   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\wheels.c
001380   ffe1                                                                                                               
001382   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001384   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001386   ffd9                                                                                                               
001388   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
00138a   cfd9     MOVFF     0xfd9,0xfe6    void wheels_setDriveSpeed( int a_targetSpeed ) {                                 C:\first\v2.0\src\NCSSM\wheels.c
00138c   ffe6                                                                                                               
00138e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001390   ffd9                                                                                                               
001392   0e04     MOVLW     0x4                                                                                             
001394   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
001396   0efd     MOVLW     0xfd           	signed long Htemp = a_targetSpeed;                                              C:\first\v2.0\src\NCSSM\wheels.c
001398   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00139a   f02b                                                                                                               
00139c   0efe     MOVLW     0xfe                                                                                            
00139e   cfdb     MOVFF     0xfdb,0x2c                                                                                      
0013a0   f02c                                                                                                               
0013a2   6a2d     CLRF      0x2d,0x0                                                                                        
0013a4   6a2e     CLRF      0x2e,0x0                                                                                        
0013a6   ae2c     BTFSS     0x2c,0x7,0x0                                                                                    
0013a8   d002     BRA       0x13ae                                                                                          
0013aa   682d     SETF      0x2d,0x0                                                                                        
0013ac   682e     SETF      0x2e,0x0                                                                                        
0013ae   c02b     MOVFF     0x2b,0xfdf                                                                                      
0013b0   ffdf                                                                                                               
0013b2   0e01     MOVLW     0x1                                                                                             
0013b4   c02c     MOVFF     0x2c,0xfdb                                                                                      
0013b6   ffdb                                                                                                               
0013b8   0e02     MOVLW     0x2                                                                                             
0013ba   c02d     MOVFF     0x2d,0xfdb                                                                                      
0013bc   ffdb                                                                                                               
0013be   0e03     MOVLW     0x3                                                                                             
0013c0   c02e     MOVFF     0x2e,0xfdb                                                                                      
0013c2   ffdb                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
0013c4   0efd     MOVLW     0xfd           	if( a_targetSpeed != targetSpeed ) {                                            C:\first\v2.0\src\NCSSM\wheels.c
0013c6   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0013c8   f02b                                                                                                               
0013ca   0efe     MOVLW     0xfe                                                                                            
0013cc   cfdb     MOVFF     0xfdb,0x2c                                                                                      
0013ce   f02c                                                                                                               
0013d0   0102     MOVLB     0x2                                                                                             
0013d2   5102     MOVF      0x2,0x0,0x1                                                                                     
0013d4   182b     XORWF     0x2b,0x0,0x0                                                                                    
0013d6   e102     BNZ       0x13dc                                                                                          
0013d8   5103     MOVF      0x3,0x0,0x1                                                                                     
0013da   182c     XORWF     0x2c,0x0,0x0                                                                                    
0013dc   e101     BNZ       0x13e0                                                                                          
0013de   d0b1     BRA       0x1542                                                                                          
0013e0   cfd9     MOVFF     0xfd9,0xfe9    		Htemp = Htemp * Htemp;                                                         C:\first\v2.0\src\NCSSM\wheels.c
0013e2   ffe9                                                                                                               
0013e4   cfda     MOVFF     0xfda,0xfea                                                                                     
0013e6   ffea                                                                                                               
0013e8   cfee     MOVFF     0xfee,0x2b                                                                                      
0013ea   f02b                                                                                                               
0013ec   cfee     MOVFF     0xfee,0x2c                                                                                      
0013ee   f02c                                                                                                               
0013f0   cfee     MOVFF     0xfee,0x2d                                                                                      
0013f2   f02d                                                                                                               
0013f4   cfef     MOVFF     0xfef,0x2e                                                                                      
0013f6   f02e                                                                                                               
0013f8   c02b     MOVFF     0x2b,0x1b                                                                                       
0013fa   f01b                                                                                                               
0013fc   c02c     MOVFF     0x2c,0x1c                                                                                       
0013fe   f01c                                                                                                               
001400   c02d     MOVFF     0x2d,0x1d                                                                                       
001402   f01d                                                                                                               
001404   c02e     MOVFF     0x2e,0x1e                                                                                       
001406   f01e                                                                                                               
001408   cfdf     MOVFF     0xfdf,0x20                                                                                      
00140a   f020                                                                                                               
00140c   0e01     MOVLW     0x1                                                                                             
00140e   cfdb     MOVFF     0xfdb,0x21                                                                                      
001410   f021                                                                                                               
001412   0e02     MOVLW     0x2                                                                                             
001414   cfdb     MOVFF     0xfdb,0x22                                                                                      
001416   f022                                                                                                               
001418   0e03     MOVLW     0x3                                                                                             
00141a   cfdb     MOVFF     0xfdb,0x23                                                                                      
00141c   f023                                                                                                               
00141e   ec78     CALL      0x62f0,0x0                                                                                      
001420   f031                                                                                                               
001422   c017     MOVFF     0x17,0xfde                                                                                      
001424   ffde                                                                                                               
001426   c018     MOVFF     0x18,0xfde                                                                                      
001428   ffde                                                                                                               
00142a   c019     MOVFF     0x19,0xfde                                                                                      
00142c   ffde                                                                                                               
00142e   c01a     MOVFF     0x1a,0xfdd                                                                                      
001430   ffdd                                                                                                               
001432   52dd     MOVF      0xdd,0x1,0x0                                                                                    
001434   52dd     MOVF      0xdd,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001436   0efd     MOVLW     0xfd           		if( a_targetSpeed < 0 ) {                                                      C:\first\v2.0\src\NCSSM\wheels.c
001438   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00143a   f02b                                                                                                               
00143c   0efe     MOVLW     0xfe                                                                                            
00143e   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001440   f02c                                                                                                               
001442   0100     MOVLB     0x0                                                                                             
001444   0e80     MOVLW     0x80                                                                                            
001446   142c     ANDWF     0x2c,0x0,0x0                                                                                    
001448   e034     BZ        0x14b2                                                                                          
00144a   0efd     MOVLW     0xfd           			Htemp = ((long)Htemp)/((int)((-a_targetSpeed)+1));                            C:\first\v2.0\src\NCSSM\wheels.c
00144c   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00144e   f02b                                                                                                               
001450   0efe     MOVLW     0xfe                                                                                            
001452   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001454   f02c                                                                                                               
001456   6c2b     NEGF      0x2b,0x0                                                                                        
001458   1e2c     COMF      0x2c,0x1,0x0                                                                                    
00145a   0e00     MOVLW     0x0                                                                                             
00145c   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
00145e   0e01     MOVLW     0x1                                                                                             
001460   262b     ADDWF     0x2b,0x1,0x0                                                                                    
001462   0e00     MOVLW     0x0                                                                                             
001464   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
001466   6a2d     CLRF      0x2d,0x0                                                                                        
001468   6a2e     CLRF      0x2e,0x0                                                                                        
00146a   ae2c     BTFSS     0x2c,0x7,0x0                                                                                    
00146c   d002     BRA       0x1472                                                                                          
00146e   682d     SETF      0x2d,0x0                                                                                        
001470   682e     SETF      0x2e,0x0                                                                                        
001472   c02b     MOVFF     0x2b,0x20                                                                                       
001474   f020                                                                                                               
001476   c02c     MOVFF     0x2c,0x21                                                                                       
001478   f021                                                                                                               
00147a   c02d     MOVFF     0x2d,0x22                                                                                       
00147c   f022                                                                                                               
00147e   c02e     MOVFF     0x2e,0x23                                                                                       
001480   f023                                                                                                               
001482   cfdf     MOVFF     0xfdf,0x1b                                                                                      
001484   f01b                                                                                                               
001486   0e01     MOVLW     0x1                                                                                             
001488   cfdb     MOVFF     0xfdb,0x1c                                                                                      
00148a   f01c                                                                                                               
00148c   0e02     MOVLW     0x2                                                                                             
00148e   cfdb     MOVFF     0xfdb,0x1d                                                                                      
001490   f01d                                                                                                               
001492   0e03     MOVLW     0x3                                                                                             
001494   cfdb     MOVFF     0xfdb,0x1e                                                                                      
001496   f01e                                                                                                               
001498   ecd2     CALL      0x5fa4,0x0                                                                                      
00149a   f02f                                                                                                               
00149c   c01b     MOVFF     0x1b,0xfde                                                                                      
00149e   ffde                                                                                                               
0014a0   c01c     MOVFF     0x1c,0xfde                                                                                      
0014a2   ffde                                                                                                               
0014a4   c01d     MOVFF     0x1d,0xfde                                                                                      
0014a6   ffde                                                                                                               
0014a8   c01e     MOVFF     0x1e,0xfdd                                                                                      
0014aa   ffdd                                                                                                               
0014ac   52dd     MOVF      0xdd,0x1,0x0                                                                                    
0014ae   52dd     MOVF      0xdd,0x1,0x0                                                                                    
0014b0   d031     BRA       0x1514         		} else {                                                                       C:\first\v2.0\src\NCSSM\wheels.c
0014b2   0e01     MOVLW     0x1            			Htemp = ((long)Htemp)/((int)(a_targetSpeed+ (int)1));                         C:\first\v2.0\src\NCSSM\wheels.c
0014b4   6ee7     MOVWF     0xe7,0x0                                                                                        
0014b6   0efd     MOVLW     0xfd                                                                                            
0014b8   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0014ba   f02b                                                                                                               
0014bc   0efe     MOVLW     0xfe                                                                                            
0014be   cfdb     MOVFF     0xfdb,0x2c                                                                                      
0014c0   f02c                                                                                                               
0014c2   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0014c4   262b     ADDWF     0x2b,0x1,0x0                                                                                    
0014c6   0e00     MOVLW     0x0                                                                                             
0014c8   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
0014ca   6a2d     CLRF      0x2d,0x0                                                                                        
0014cc   6a2e     CLRF      0x2e,0x0                                                                                        
0014ce   ae2c     BTFSS     0x2c,0x7,0x0                                                                                    
0014d0   d002     BRA       0x14d6                                                                                          
0014d2   682d     SETF      0x2d,0x0                                                                                        
0014d4   682e     SETF      0x2e,0x0                                                                                        
0014d6   c02b     MOVFF     0x2b,0x20                                                                                       
0014d8   f020                                                                                                               
0014da   c02c     MOVFF     0x2c,0x21                                                                                       
0014dc   f021                                                                                                               
0014de   c02d     MOVFF     0x2d,0x22                                                                                       
0014e0   f022                                                                                                               
0014e2   c02e     MOVFF     0x2e,0x23                                                                                       
0014e4   f023                                                                                                               
0014e6   cfdf     MOVFF     0xfdf,0x1b                                                                                      
0014e8   f01b                                                                                                               
0014ea   0e01     MOVLW     0x1                                                                                             
0014ec   cfdb     MOVFF     0xfdb,0x1c                                                                                      
0014ee   f01c                                                                                                               
0014f0   0e02     MOVLW     0x2                                                                                             
0014f2   cfdb     MOVFF     0xfdb,0x1d                                                                                      
0014f4   f01d                                                                                                               
0014f6   0e03     MOVLW     0x3                                                                                             
0014f8   cfdb     MOVFF     0xfdb,0x1e                                                                                      
0014fa   f01e                                                                                                               
0014fc   ecd2     CALL      0x5fa4,0x0                                                                                      
0014fe   f02f                                                                                                               
001500   c01b     MOVFF     0x1b,0xfde                                                                                      
001502   ffde                                                                                                               
001504   c01c     MOVFF     0x1c,0xfde                                                                                      
001506   ffde                                                                                                               
001508   c01d     MOVFF     0x1d,0xfde                                                                                      
00150a   ffde                                                                                                               
00150c   c01e     MOVFF     0x1e,0xfdd                                                                                      
00150e   ffdd                                                                                                               
001510   52dd     MOVF      0xdd,0x1,0x0                                                                                    
001512   52dd     MOVF      0xdd,0x1,0x0                                                                                    
                                           		}                                                                              C:\first\v2.0\src\NCSSM\wheels.c
                                           	                                                                                C:\first\v2.0\src\NCSSM\wheels.c
001514   cfd9     MOVFF     0xfd9,0xfe9    		speedEhist = (int) (Htemp/30L);                                                C:\first\v2.0\src\NCSSM\wheels.c
001516   ffe9                                                                                                               
001518   cfda     MOVFF     0xfda,0xfea                                                                                     
00151a   ffea                                                                                                               
00151c   cfee     MOVFF     0xfee,0x1b                                                                                      
00151e   f01b                                                                                                               
001520   cfee     MOVFF     0xfee,0x1c                                                                                      
001522   f01c                                                                                                               
001524   cfee     MOVFF     0xfee,0x1d                                                                                      
001526   f01d                                                                                                               
001528   cfef     MOVFF     0xfef,0x1e                                                                                      
00152a   f01e                                                                                                               
00152c   0e1e     MOVLW     0x1e                                                                                            
00152e   6e20     MOVWF     0x20,0x0                                                                                        
001530   6a21     CLRF      0x21,0x0                                                                                        
001532   6a22     CLRF      0x22,0x0                                                                                        
001534   6a23     CLRF      0x23,0x0                                                                                        
001536   ecd2     CALL      0x5fa4,0x0                                                                                      
001538   f02f                                                                                                               
00153a   c01b     MOVFF     0x1b,0x200                                                                                      
00153c   f200                                                                                                               
00153e   c01c     MOVFF     0x1c,0x201                                                                                      
001540   f201                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001542   0efd     MOVLW     0xfd           	targetSpeed = a_targetSpeed;                                                    C:\first\v2.0\src\NCSSM\wheels.c
001544   cfdb     MOVFF     0xfdb,0x202                                                                                     
001546   f202                                                                                                               
001548   0efe     MOVLW     0xfe                                                                                            
00154a   cfdb     MOVFF     0xfdb,0x203                                                                                     
00154c   f203                                                                                                               
00154e   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\wheels.c
001550   ffe1                                                                                                               
001552   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001554   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001556   ffd9                                                                                                               
001558   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
00155a   cfd9     MOVFF     0xfd9,0xfe6    void wheels_setTurningSpeed( int a_turningSpeed ) {                              C:\first\v2.0\src\NCSSM\wheels.c
00155c   ffe6                                                                                                               
00155e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001560   ffd9                                                                                                               
001562   0efd     MOVLW     0xfd           	targetTurningSpeed = a_turningSpeed;                                            C:\first\v2.0\src\NCSSM\wheels.c
001564   cfdb     MOVFF     0xfdb,0x204                                                                                     
001566   f204                                                                                                               
001568   0efe     MOVLW     0xfe                                                                                            
00156a   cfdb     MOVFF     0xfdb,0x205                                                                                     
00156c   f205                                                                                                               
00156e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\NCSSM\wheels.c
001570   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001572   ffd9                                                                                                               
001574   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001576   cfd9     MOVFF     0xfd9,0xfe6    void wheels_oneStickDriver( unsigned char a_x, unsigned char a_y, char a_isLowGear ) { C:\first\v2.0\src\NCSSM\wheels.c
001578   ffe6                                                                                                               
00157a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00157c   ffd9                                                                                                               
00157e   0e08     MOVLW     0x8                                                                                             
001580   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           	static unsigned int iters = 0;                                                  C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	static int highGearStick2mm = Smax/128;                                         C:\first\v2.0\src\NCSSM\wheels.c
                                           	static int lowGearStick2mm = Smax/128/1.59;                                     C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001582   0efe     MOVLW     0xfe           	int x = (signed int)(((int)a_x) - ((signed int)JoystickOffset));                C:\first\v2.0\src\NCSSM\wheels.c
001584   50db     MOVF      0xdb,0x0,0x0                                                                                    
001586   6e2b     MOVWF     0x2b,0x0                                                                                        
001588   6a2c     CLRF      0x2c,0x0                                                                                        
00158a   0e7f     MOVLW     0x7f                                                                                            
00158c   5e2b     SUBWF     0x2b,0x1,0x0                                                                                    
00158e   0e00     MOVLW     0x0                                                                                             
001590   5a2c     SUBWFB    0x2c,0x1,0x0                                                                                    
001592   c02b     MOVFF     0x2b,0xfde                                                                                      
001594   ffde                                                                                                               
001596   c02c     MOVFF     0x2c,0xfdd                                                                                      
001598   ffdd                                                                                                               
00159a   0efd     MOVLW     0xfd           	int y = (signed int)(((int)a_y) - ((signed int)JoystickOffset));                C:\first\v2.0\src\NCSSM\wheels.c
00159c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00159e   6e2b     MOVWF     0x2b,0x0                                                                                        
0015a0   6a2c     CLRF      0x2c,0x0                                                                                        
0015a2   0e7f     MOVLW     0x7f                                                                                            
0015a4   5e2b     SUBWF     0x2b,0x1,0x0                                                                                    
0015a6   0e00     MOVLW     0x0                                                                                             
0015a8   5a2c     SUBWFB    0x2c,0x1,0x0                                                                                    
0015aa   0e02     MOVLW     0x2                                                                                             
0015ac   c02b     MOVFF     0x2b,0xfdb                                                                                      
0015ae   ffdb                                                                                                               
0015b0   0e03     MOVLW     0x3                                                                                             
0015b2   c02c     MOVFF     0x2c,0xfdb                                                                                      
0015b4   ffdb                                                                                                               
                                           	int speed;                                                                      C:\first\v2.0\src\NCSSM\wheels.c
                                           	int turn;                                                                       C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
0015b6   0efc     MOVLW     0xfc           	if( a_isLowGear ) {                                                             C:\first\v2.0\src\NCSSM\wheels.c
0015b8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0015ba   e013     BZ        0x15e2                                                                                          
0015bc   0e02     MOVLW     0x2            		speed = y*lowGearStick2mm;                                                     C:\first\v2.0\src\NCSSM\wheels.c
0015be   cfdb     MOVFF     0xfdb,0x1d                                                                                      
0015c0   f01d                                                                                                               
0015c2   0e03     MOVLW     0x3                                                                                             
0015c4   cfdb     MOVFF     0xfdb,0x1e                                                                                      
0015c6   f01e                                                                                                               
0015c8   c23c     MOVFF     0x23c,0x22                                                                                      
0015ca   f022                                                                                                               
0015cc   c23d     MOVFF     0x23d,0x23                                                                                      
0015ce   f023                                                                                                               
0015d0   ec06     CALL      0x600c,0x0                                                                                      
0015d2   f030                                                                                                               
0015d4   0e04     MOVLW     0x4                                                                                             
0015d6   c01b     MOVFF     0x1b,0xfdb                                                                                      
0015d8   ffdb                                                                                                               
0015da   0e05     MOVLW     0x5                                                                                             
0015dc   c01c     MOVFF     0x1c,0xfdb                                                                                      
0015de   ffdb                                                                                                               
0015e0   d012     BRA       0x1606         	} else {                                                                        C:\first\v2.0\src\NCSSM\wheels.c
0015e2   0e02     MOVLW     0x2            		speed = y*highGearStick2mm;                                                    C:\first\v2.0\src\NCSSM\wheels.c
0015e4   cfdb     MOVFF     0xfdb,0x1d                                                                                      
0015e6   f01d                                                                                                               
0015e8   0e03     MOVLW     0x3                                                                                             
0015ea   cfdb     MOVFF     0xfdb,0x1e                                                                                      
0015ec   f01e                                                                                                               
0015ee   c23a     MOVFF     0x23a,0x22                                                                                      
0015f0   f022                                                                                                               
0015f2   c23b     MOVFF     0x23b,0x23                                                                                      
0015f4   f023                                                                                                               
0015f6   ec06     CALL      0x600c,0x0                                                                                      
0015f8   f030                                                                                                               
0015fa   0e04     MOVLW     0x4                                                                                             
0015fc   c01b     MOVFF     0x1b,0xfdb                                                                                      
0015fe   ffdb                                                                                                               
001600   0e05     MOVLW     0x5                                                                                             
001602   c01c     MOVFF     0x1c,0xfdb                                                                                      
001604   ffdb                                                                                                               
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001606   cfde     MOVFF     0xfde,0x2b     	turn = (int)((x*100)/((int)30));                                                C:\first\v2.0\src\NCSSM\wheels.c
001608   f02b                                                                                                               
00160a   cfdd     MOVFF     0xfdd,0x2c                                                                                      
00160c   f02c                                                                                                               
00160e   0e64     MOVLW     0x64                                                                                            
001610   022c     MULWF     0x2c,0x0                                                                                        
001612   cff3     MOVFF     0xff3,0x2c                                                                                      
001614   f02c                                                                                                               
001616   022b     MULWF     0x2b,0x0                                                                                        
001618   cff3     MOVFF     0xff3,0x2b                                                                                      
00161a   f02b                                                                                                               
00161c   50f4     MOVF      0xf4,0x0,0x0                                                                                    
00161e   262c     ADDWF     0x2c,0x1,0x0                                                                                    
001620   0e1e     MOVLW     0x1e                                                                                            
001622   6e22     MOVWF     0x22,0x0                                                                                        
001624   6a23     CLRF      0x23,0x0                                                                                        
001626   c02b     MOVFF     0x2b,0x1d                                                                                       
001628   f01d                                                                                                               
00162a   c02c     MOVFF     0x2c,0x1e                                                                                       
00162c   f01e                                                                                                               
00162e   ecac     CALL      0x5f58,0x0                                                                                      
001630   f02f                                                                                                               
001632   c01d     MOVFF     0x1d,0x2b                                                                                       
001634   f02b                                                                                                               
001636   c01e     MOVFF     0x1e,0x2c                                                                                       
001638   f02c                                                                                                               
00163a   0e06     MOVLW     0x6                                                                                             
00163c   c02b     MOVFF     0x2b,0xfdb                                                                                      
00163e   ffdb                                                                                                               
001640   0e07     MOVLW     0x7                                                                                             
001642   c02c     MOVFF     0x2c,0xfdb                                                                                      
001644   ffdb                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001646   0e04     MOVLW     0x4            	if( (speed < 100) && (speed > -100)) {                                          C:\first\v2.0\src\NCSSM\wheels.c
001648   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00164a   f02b                                                                                                               
00164c   0e05     MOVLW     0x5                                                                                             
00164e   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001650   f02c                                                                                                               
001652   90d8     BCF       0xd8,0x0,0x0                                                                                    
001654   502c     MOVF      0x2c,0x0,0x0                                                                                    
001656   e604     BN        0x1660                                                                                          
001658   0e64     MOVLW     0x64                                                                                            
00165a   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
00165c   0e00     MOVLW     0x0                                                                                             
00165e   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
001660   e211     BC        0x1684                                                                                          
001662   0e04     MOVLW     0x4                                                                                             
001664   cfdb     MOVFF     0xfdb,0x2d                                                                                      
001666   f02d                                                                                                               
001668   0e05     MOVLW     0x5                                                                                             
00166a   cfdb     MOVFF     0xfdb,0x2e                                                                                      
00166c   f02e                                                                                                               
00166e   342e     RLCF      0x2e,0x0,0x0                                                                                    
001670   e304     BNC       0x167a                                                                                          
001672   502d     MOVF      0x2d,0x0,0x0                                                                                    
001674   089c     SUBLW     0x9c                                                                                            
001676   0eff     MOVLW     0xff                                                                                            
001678   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
00167a   e204     BC        0x1684                                                                                          
00167c   0e04     MOVLW     0x4            		speed = 0;                                                                     C:\first\v2.0\src\NCSSM\wheels.c
00167e   6adb     CLRF      0xdb,0x0                                                                                        
001680   0e05     MOVLW     0x5                                                                                             
001682   6adb     CLRF      0xdb,0x0                                                                                        
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001684   0e06     MOVLW     0x6            	if( turn < 20 && turn > -20 ) {                                                 C:\first\v2.0\src\NCSSM\wheels.c
001686   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001688   f02b                                                                                                               
00168a   0e07     MOVLW     0x7                                                                                             
00168c   cfdb     MOVFF     0xfdb,0x2c                                                                                      
00168e   f02c                                                                                                               
001690   90d8     BCF       0xd8,0x0,0x0                                                                                    
001692   502c     MOVF      0x2c,0x0,0x0                                                                                    
001694   e604     BN        0x169e                                                                                          
001696   0e14     MOVLW     0x14                                                                                            
001698   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
00169a   0e00     MOVLW     0x0                                                                                             
00169c   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
00169e   e211     BC        0x16c2                                                                                          
0016a0   0e06     MOVLW     0x6                                                                                             
0016a2   cfdb     MOVFF     0xfdb,0x2d                                                                                      
0016a4   f02d                                                                                                               
0016a6   0e07     MOVLW     0x7                                                                                             
0016a8   cfdb     MOVFF     0xfdb,0x2e                                                                                      
0016aa   f02e                                                                                                               
0016ac   342e     RLCF      0x2e,0x0,0x0                                                                                    
0016ae   e304     BNC       0x16b8                                                                                          
0016b0   502d     MOVF      0x2d,0x0,0x0                                                                                    
0016b2   08ec     SUBLW     0xec                                                                                            
0016b4   0eff     MOVLW     0xff                                                                                            
0016b6   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
0016b8   e204     BC        0x16c2                                                                                          
0016ba   0e06     MOVLW     0x6            		turn = 0;                                                                      C:\first\v2.0\src\NCSSM\wheels.c
0016bc   6adb     CLRF      0xdb,0x0                                                                                        
0016be   0e07     MOVLW     0x7                                                                                             
0016c0   6adb     CLRF      0xdb,0x0                                                                                        
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
0016c2   0102     MOVLB     0x2            	if( iters == 50 ) {                                                             C:\first\v2.0\src\NCSSM\wheels.c
0016c4   0e32     MOVLW     0x32                                                                                            
0016c6   1938     XORWF     0x38,0x0,0x1                                                                                    
0016c8   e101     BNZ       0x16cc                                                                                          
0016ca   5139     MOVF      0x39,0x0,0x1                                                                                    
0016cc   e102     BNZ       0x16d2                                                                                          
                                           //		printf("STICK (Ox, x, Oy, y): %u, %d, %u, %d, \r", (unsigned char)a_x, (signed int)x, (unsigned char)a_y, (signed int)y); C:\first\v2.0\src\NCSSM\wheels.c
                                           //		printf("(speed, turn): %d, %d \r", (int)speed, (int)turn);                   C:\first\v2.0\src\NCSSM\wheels.c
0016ce   6b38     CLRF      0x38,0x1       		iters=0;                                                                       C:\first\v2.0\src\NCSSM\wheels.c
0016d0   6b39     CLRF      0x39,0x1                                                                                        
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
0016d2   0e04     MOVLW     0x4            	wheels_setDriveSpeed( speed );                                                  C:\first\v2.0\src\NCSSM\wheels.c
0016d4   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0016d6   ffe6                                                                                                               
0016d8   0e05     MOVLW     0x5                                                                                             
0016da   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0016dc   ffe6                                                                                                               
0016de   de55     RCALL     0x138a                                                                                          
0016e0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0016e2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0016e4   0e06     MOVLW     0x6            	wheels_setTurningSpeed( turn*3 );                                               C:\first\v2.0\src\NCSSM\wheels.c
0016e6   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0016e8   f02b                                                                                                               
0016ea   0e07     MOVLW     0x7                                                                                             
0016ec   cfdb     MOVFF     0xfdb,0x2c                                                                                      
0016ee   f02c                                                                                                               
0016f0   0e03     MOVLW     0x3                                                                                             
0016f2   022c     MULWF     0x2c,0x0                                                                                        
0016f4   cff3     MOVFF     0xff3,0x2c                                                                                      
0016f6   f02c                                                                                                               
0016f8   022b     MULWF     0x2b,0x0                                                                                        
0016fa   cff3     MOVFF     0xff3,0x2b                                                                                      
0016fc   f02b                                                                                                               
0016fe   50f4     MOVF      0xf4,0x0,0x0                                                                                    
001700   262c     ADDWF     0x2c,0x1,0x0                                                                                    
001702   c02b     MOVFF     0x2b,0xfe6                                                                                      
001704   ffe6                                                                                                               
001706   c02c     MOVFF     0x2c,0xfe6                                                                                      
001708   ffe6                                                                                                               
00170a   df27     RCALL     0x155a                                                                                          
00170c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00170e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001710   0102     MOVLB     0x2            	++iters;                                                                        C:\first\v2.0\src\NCSSM\wheels.c
001712   2b38     INCF      0x38,0x1,0x1                                                                                    
001714   0e00     MOVLW     0x0                                                                                             
001716   2339     ADDWFC    0x39,0x1,0x1                                                                                    
001718   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\wheels.c
00171a   ffe1                                                                                                               
00171c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00171e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001720   ffd9                                                                                                               
001722   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001724   cfd9     MOVFF     0xfd9,0xfe6    void wheels_twoStickDriver(char a_leftStick, char a_rightStick, char a_lowGear){ C:\first\v2.0\src\NCSSM\wheels.c
001726   ffe6                                                                                                               
001728   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00172a   ffd9                                                                                                               
00172c   0e04     MOVLW     0x4                                                                                             
00172e   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           	// Scale factor to scale the max joystick value into mm/sec                     C:\first\v2.0\src\NCSSM\wheels.c
                                           	// highGearStick2mm ~= 11 = 2872/128                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	// i.e. setSpeed = stickValue*highGearStick2mm in mm/sec                        C:\first\v2.0\src\NCSSM\wheels.c
                                           	static int highGearStick2mm = Smax/128;                                         C:\first\v2.0\src\NCSSM\wheels.c
                                           	static int lowGearStick2mm = Smax/128/1.59;                                     C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001730   6ade     CLRF      0xde,0x0       	int turnSpeed=0;                                                                C:\first\v2.0\src\NCSSM\wheels.c
001732   6add     CLRF      0xdd,0x0                                                                                        
001734   0e02     MOVLW     0x2            	int speed=0;                                                                    C:\first\v2.0\src\NCSSM\wheels.c
001736   6adb     CLRF      0xdb,0x0                                                                                        
001738   0e03     MOVLW     0x3                                                                                             
00173a   6adb     CLRF      0xdb,0x0                                                                                        
00173c   0efd     MOVLW     0xfd           	speed = (int)(((a_leftStick-JoystickOffset) + (a_rightStick-JoystickOffset)) >> 1); C:\first\v2.0\src\NCSSM\wheels.c
00173e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001740   0f81     ADDLW     0x81                                                                                            
001742   6e2d     MOVWF     0x2d,0x0                                                                                        
001744   0efe     MOVLW     0xfe                                                                                            
001746   50db     MOVF      0xdb,0x0,0x0                                                                                    
001748   0f81     ADDLW     0x81                                                                                            
00174a   242d     ADDWF     0x2d,0x0,0x0                                                                                    
00174c   40e8     RRNCF     0xe8,0x0,0x0                                                                                    
00174e   0b7f     ANDLW     0x7f                                                                                            
001750   6e2b     MOVWF     0x2b,0x0                                                                                        
001752   6a2c     CLRF      0x2c,0x0                                                                                        
001754   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
001756   682c     SETF      0x2c,0x0                                                                                        
001758   0e02     MOVLW     0x2                                                                                             
00175a   c02b     MOVFF     0x2b,0xfdb                                                                                      
00175c   ffdb                                                                                                               
00175e   0e03     MOVLW     0x3                                                                                             
001760   c02c     MOVFF     0x2c,0xfdb                                                                                      
001762   ffdb                                                                                                               
001764   0efe     MOVLW     0xfe           	turnSpeed = (int)((a_leftStick-JoystickOffset) - (a_rightStick-JoystickOffset)); C:\first\v2.0\src\NCSSM\wheels.c
001766   50db     MOVF      0xdb,0x0,0x0                                                                                    
001768   0f81     ADDLW     0x81                                                                                            
00176a   6e2d     MOVWF     0x2d,0x0                                                                                        
00176c   0efd     MOVLW     0xfd                                                                                            
00176e   50db     MOVF      0xdb,0x0,0x0                                                                                    
001770   0f81     ADDLW     0x81                                                                                            
001772   5c2d     SUBWF     0x2d,0x0,0x0                                                                                    
001774   6e2b     MOVWF     0x2b,0x0                                                                                        
001776   6a2c     CLRF      0x2c,0x0                                                                                        
001778   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
00177a   682c     SETF      0x2c,0x0                                                                                        
00177c   c02b     MOVFF     0x2b,0xfde                                                                                      
00177e   ffde                                                                                                               
001780   c02c     MOVFF     0x2c,0xfdd                                                                                      
001782   ffdd                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001784   0efc     MOVLW     0xfc           	if(a_lowGear){                                                                  C:\first\v2.0\src\NCSSM\wheels.c
001786   50db     MOVF      0xdb,0x0,0x0                                                                                    
001788   e03c     BZ        0x1802                                                                                          
00178a   0e02     MOVLW     0x2            		speed = speed*lowGearStick2mm;                                                 C:\first\v2.0\src\NCSSM\wheels.c
00178c   cfdb     MOVFF     0xfdb,0x1d                                                                                      
00178e   f01d                                                                                                               
001790   0e03     MOVLW     0x3                                                                                             
001792   cfdb     MOVFF     0xfdb,0x1e                                                                                      
001794   f01e                                                                                                               
001796   c240     MOVFF     0x240,0x22                                                                                      
001798   f022                                                                                                               
00179a   c241     MOVFF     0x241,0x23                                                                                      
00179c   f023                                                                                                               
00179e   ec06     CALL      0x600c,0x0                                                                                      
0017a0   f030                                                                                                               
0017a2   0e02     MOVLW     0x2                                                                                             
0017a4   c01b     MOVFF     0x1b,0xfdb                                                                                      
0017a6   ffdb                                                                                                               
0017a8   0e03     MOVLW     0x3                                                                                             
0017aa   c01c     MOVFF     0x1c,0xfdb                                                                                      
0017ac   ffdb                                                                                                               
0017ae   c240     MOVFF     0x240,0x1d     		turnSpeed = turnSpeed*lowGearStick2mm*10/R;  // Convert turn speed to radians-1/sec C:\first\v2.0\src\NCSSM\wheels.c
0017b0   f01d                                                                                                               
0017b2   c241     MOVFF     0x241,0x1e                                                                                      
0017b4   f01e                                                                                                               
0017b6   cfde     MOVFF     0xfde,0x22                                                                                      
0017b8   f022                                                                                                               
0017ba   cfdd     MOVFF     0xfdd,0x23                                                                                      
0017bc   f023                                                                                                               
0017be   ec06     CALL      0x600c,0x0                                                                                      
0017c0   f030                                                                                                               
0017c2   c01b     MOVFF     0x1b,0x2b                                                                                       
0017c4   f02b                                                                                                               
0017c6   c01c     MOVFF     0x1c,0x2c                                                                                       
0017c8   f02c                                                                                                               
0017ca   0e0a     MOVLW     0xa                                                                                             
0017cc   022c     MULWF     0x2c,0x0                                                                                        
0017ce   cff3     MOVFF     0xff3,0x2c                                                                                      
0017d0   f02c                                                                                                               
0017d2   022b     MULWF     0x2b,0x0                                                                                        
0017d4   cff3     MOVFF     0xff3,0x2b                                                                                      
0017d6   f02b                                                                                                               
0017d8   50f4     MOVF      0xf4,0x0,0x0                                                                                    
0017da   262c     ADDWF     0x2c,0x1,0x0                                                                                    
0017dc   0e5a     MOVLW     0x5a                                                                                            
0017de   6e22     MOVWF     0x22,0x0                                                                                        
0017e0   0e01     MOVLW     0x1                                                                                             
0017e2   6e23     MOVWF     0x23,0x0                                                                                        
0017e4   c02b     MOVFF     0x2b,0x1d                                                                                       
0017e6   f01d                                                                                                               
0017e8   c02c     MOVFF     0x2c,0x1e                                                                                       
0017ea   f01e                                                                                                               
0017ec   ecac     CALL      0x5f58,0x0                                                                                      
0017ee   f02f                                                                                                               
0017f0   c01d     MOVFF     0x1d,0x2b                                                                                       
0017f2   f02b                                                                                                               
0017f4   c01e     MOVFF     0x1e,0x2c                                                                                       
0017f6   f02c                                                                                                               
0017f8   c02b     MOVFF     0x2b,0xfde                                                                                      
0017fa   ffde                                                                                                               
0017fc   c02c     MOVFF     0x2c,0xfdd                                                                                      
0017fe   ffdd                                                                                                               
                                           		// Stick range is -39,0,39 for equivalent of Vf = -544,0,544, and Vr = -16, 0 , 16 C:\first\v2.0\src\NCSSM\wheels.c
                                                   // Note:  Turning speed currently uses about 20% of the total Vf scale before saturating at 16rad-1/sec C:\first\v2.0\src\NCSSM\wheels.c
                                           		// So, an additional scale factor may be needed to force this value scale larger C:\first\v2.0\src\NCSSM\wheels.c
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001800   d03b     BRA       0x1878         	else{                                                                           C:\first\v2.0\src\NCSSM\wheels.c
001802   0e02     MOVLW     0x2            		speed = speed*highGearStick2mm;                                                C:\first\v2.0\src\NCSSM\wheels.c
001804   cfdb     MOVFF     0xfdb,0x1d                                                                                      
001806   f01d                                                                                                               
001808   0e03     MOVLW     0x3                                                                                             
00180a   cfdb     MOVFF     0xfdb,0x1e                                                                                      
00180c   f01e                                                                                                               
00180e   c23e     MOVFF     0x23e,0x22                                                                                      
001810   f022                                                                                                               
001812   c23f     MOVFF     0x23f,0x23                                                                                      
001814   f023                                                                                                               
001816   ec06     CALL      0x600c,0x0                                                                                      
001818   f030                                                                                                               
00181a   0e02     MOVLW     0x2                                                                                             
00181c   c01b     MOVFF     0x1b,0xfdb                                                                                      
00181e   ffdb                                                                                                               
001820   0e03     MOVLW     0x3                                                                                             
001822   c01c     MOVFF     0x1c,0xfdb                                                                                      
001824   ffdb                                                                                                               
001826   c23e     MOVFF     0x23e,0x1d     		turnSpeed = turnSpeed*highGearStick2mm*10/R;  // Convert turn speed to radians-1/sec C:\first\v2.0\src\NCSSM\wheels.c
001828   f01d                                                                                                               
00182a   c23f     MOVFF     0x23f,0x1e                                                                                      
00182c   f01e                                                                                                               
00182e   cfde     MOVFF     0xfde,0x22                                                                                      
001830   f022                                                                                                               
001832   cfdd     MOVFF     0xfdd,0x23                                                                                      
001834   f023                                                                                                               
001836   ec06     CALL      0x600c,0x0                                                                                      
001838   f030                                                                                                               
00183a   c01b     MOVFF     0x1b,0x2b                                                                                       
00183c   f02b                                                                                                               
00183e   c01c     MOVFF     0x1c,0x2c                                                                                       
001840   f02c                                                                                                               
001842   0e0a     MOVLW     0xa                                                                                             
001844   022c     MULWF     0x2c,0x0                                                                                        
001846   cff3     MOVFF     0xff3,0x2c                                                                                      
001848   f02c                                                                                                               
00184a   022b     MULWF     0x2b,0x0                                                                                        
00184c   cff3     MOVFF     0xff3,0x2b                                                                                      
00184e   f02b                                                                                                               
001850   50f4     MOVF      0xf4,0x0,0x0                                                                                    
001852   262c     ADDWF     0x2c,0x1,0x0                                                                                    
001854   0e5a     MOVLW     0x5a                                                                                            
001856   6e22     MOVWF     0x22,0x0                                                                                        
001858   0e01     MOVLW     0x1                                                                                             
00185a   6e23     MOVWF     0x23,0x0                                                                                        
00185c   c02b     MOVFF     0x2b,0x1d                                                                                       
00185e   f01d                                                                                                               
001860   c02c     MOVFF     0x2c,0x1e                                                                                       
001862   f01e                                                                                                               
001864   ecac     CALL      0x5f58,0x0                                                                                      
001866   f02f                                                                                                               
001868   c01d     MOVFF     0x1d,0x2b                                                                                       
00186a   f02b                                                                                                               
00186c   c01e     MOVFF     0x1e,0x2c                                                                                       
00186e   f02c                                                                                                               
001870   c02b     MOVFF     0x2b,0xfde                                                                                      
001872   ffde                                                                                                               
001874   c02c     MOVFF     0x2c,0xfdd                                                                                      
001876   ffdd                                                                                                               
                                           		// Stick range is -25, 0, 25 for equivalent of Vf = -544,0,544, and Vr = -16, 0 , 16 C:\first\v2.0\src\NCSSM\wheels.c
                                           		// Note:  Turning speed currently uses about 20% of the total Vf scale before saturating at 16rad-1/sec C:\first\v2.0\src\NCSSM\wheels.c
                                           		// So, an additional scale factor may be needed to force this value scale larger C:\first\v2.0\src\NCSSM\wheels.c
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001878   0e02     MOVLW     0x2            	if( (speed < 50) && (speed > -50) ) {                                           C:\first\v2.0\src\NCSSM\wheels.c
00187a   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00187c   f02b                                                                                                               
00187e   0e03     MOVLW     0x3                                                                                             
001880   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001882   f02c                                                                                                               
001884   90d8     BCF       0xd8,0x0,0x0                                                                                    
001886   502c     MOVF      0x2c,0x0,0x0                                                                                    
001888   e604     BN        0x1892                                                                                          
00188a   0e32     MOVLW     0x32                                                                                            
00188c   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
00188e   0e00     MOVLW     0x0                                                                                             
001890   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
001892   e211     BC        0x18b6                                                                                          
001894   0e02     MOVLW     0x2                                                                                             
001896   cfdb     MOVFF     0xfdb,0x2d                                                                                      
001898   f02d                                                                                                               
00189a   0e03     MOVLW     0x3                                                                                             
00189c   cfdb     MOVFF     0xfdb,0x2e                                                                                      
00189e   f02e                                                                                                               
0018a0   342e     RLCF      0x2e,0x0,0x0                                                                                    
0018a2   e304     BNC       0x18ac                                                                                          
0018a4   502d     MOVF      0x2d,0x0,0x0                                                                                    
0018a6   08ce     SUBLW     0xce                                                                                            
0018a8   0eff     MOVLW     0xff                                                                                            
0018aa   542e     SUBFWB    0x2e,0x0,0x0                                                                                    
0018ac   e204     BC        0x18b6                                                                                          
0018ae   0e02     MOVLW     0x2            		speed = 0;                                                                     C:\first\v2.0\src\NCSSM\wheels.c
0018b0   6adb     CLRF      0xdb,0x0                                                                                        
0018b2   0e03     MOVLW     0x3                                                                                             
0018b4   6adb     CLRF      0xdb,0x0                                                                                        
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
0018b6   0e02     MOVLW     0x2            	wheels_setDriveSpeed( speed );                                                  C:\first\v2.0\src\NCSSM\wheels.c
0018b8   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0018ba   ffe6                                                                                                               
0018bc   0e03     MOVLW     0x3                                                                                             
0018be   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0018c0   ffe6                                                                                                               
0018c2   dd63     RCALL     0x138a                                                                                          
0018c4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0018c6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0018c8   cfde     MOVFF     0xfde,0xfe6    	wheels_setTurningSpeed( turnSpeed );                                            C:\first\v2.0\src\NCSSM\wheels.c
0018ca   ffe6                                                                                                               
0018cc   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
0018ce   ffe6                                                                                                               
0018d0   de44     RCALL     0x155a                                                                                          
0018d2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0018d4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0018d6   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\wheels.c
0018d8   ffe1                                                                                                               
0018da   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0018dc   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0018de   ffd9                                                                                                               
0018e0   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           // Use this on the output of the turning speed PID to limit how fast we can turn to Vrmax C:\first\v2.0\src\NCSSM\wheels.c
0018e2   cfd9     MOVFF     0xfd9,0xfe6    long limitTurningSpeed(long a_turningSpeed){                                     C:\first\v2.0\src\NCSSM\wheels.c
0018e4   ffe6                                                                                                               
0018e6   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0018e8   ffd9                                                                                                               
0018ea   50d9     MOVF      0xd9,0x0,0x0   	if(a_turningSpeed < -Vrmax ){                                                   C:\first\v2.0\src\NCSSM\wheels.c
0018ec   0ffb     ADDLW     0xfb                                                                                            
0018ee   6ee9     MOVWF     0xe9,0x0                                                                                        
0018f0   0eff     MOVLW     0xff                                                                                            
0018f2   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0018f4   6eea     MOVWF     0xea,0x0                                                                                        
0018f6   0e03     MOVLW     0x3                                                                                             
0018f8   50eb     MOVF      0xeb,0x0,0x0                                                                                    
0018fa   0aff     XORLW     0xff                                                                                            
0018fc   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
0018fe   d002     BRA       0x1904                                                                                          
001900   80d8     BSF       0xd8,0x0,0x0                                                                                    
001902   d008     BRA       0x1914                                                                                          
001904   0ef0     MOVLW     0xf0                                                                                            
001906   5cee     SUBWF     0xee,0x0,0x0                                                                                    
001908   0eff     MOVLW     0xff                                                                                            
00190a   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
00190c   0eff     MOVLW     0xff                                                                                            
00190e   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001910   0eff     MOVLW     0xff                                                                                            
001912   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001914   e207     BC        0x1924                                                                                          
001916   0ef0     MOVLW     0xf0           		return(-Vrmax);                                                                C:\first\v2.0\src\NCSSM\wheels.c
001918   6e1b     MOVWF     0x1b,0x0                                                                                        
00191a   681c     SETF      0x1c,0x0                                                                                        
00191c   681d     SETF      0x1d,0x0                                                                                        
00191e   681e     SETF      0x1e,0x0                                                                                        
001920   d039     BRA       0x1994                                                                                          
                                           		}                                                                              C:\first\v2.0\src\NCSSM\wheels.c
001922   d038     BRA       0x1994         	else if( a_turningSpeed > Vrmax ){                                              C:\first\v2.0\src\NCSSM\wheels.c
001924   0efb     MOVLW     0xfb                                                                                            
001926   cfdb     MOVFF     0xfdb,0x1c                                                                                      
001928   f01c                                                                                                               
00192a   0efc     MOVLW     0xfc                                                                                            
00192c   cfdb     MOVFF     0xfdb,0x1d                                                                                      
00192e   f01d                                                                                                               
001930   0efd     MOVLW     0xfd                                                                                            
001932   cfdb     MOVFF     0xfdb,0x1e                                                                                      
001934   f01e                                                                                                               
001936   0efe     MOVLW     0xfe                                                                                            
001938   cfdb     MOVFF     0xfdb,0x1f                                                                                      
00193a   f01f                                                                                                               
00193c   0e00     MOVLW     0x0                                                                                             
00193e   181f     XORWF     0x1f,0x0,0x0                                                                                    
001940   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001942   d002     BRA       0x1948                                                                                          
001944   341f     RLCF      0x1f,0x0,0x0                                                                                    
001946   d009     BRA       0x195a                                                                                          
001948   0e10     MOVLW     0x10                                                                                            
00194a   80d8     BSF       0xd8,0x0,0x0                                                                                    
00194c   541c     SUBFWB    0x1c,0x0,0x0                                                                                    
00194e   0e00     MOVLW     0x0                                                                                             
001950   541d     SUBFWB    0x1d,0x0,0x0                                                                                    
001952   0e00     MOVLW     0x0                                                                                             
001954   541e     SUBFWB    0x1e,0x0,0x0                                                                                    
001956   0e00     MOVLW     0x0                                                                                             
001958   541f     SUBFWB    0x1f,0x0,0x0                                                                                    
00195a   e207     BC        0x196a                                                                                          
00195c   0e10     MOVLW     0x10           		return(Vrmax);                                                                 C:\first\v2.0\src\NCSSM\wheels.c
00195e   6e1b     MOVWF     0x1b,0x0                                                                                        
001960   6a1c     CLRF      0x1c,0x0                                                                                        
001962   6a1d     CLRF      0x1d,0x0                                                                                        
001964   6a1e     CLRF      0x1e,0x0                                                                                        
001966   d016     BRA       0x1994                                                                                          
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001968   d015     BRA       0x1994         	else{                                                                           C:\first\v2.0\src\NCSSM\wheels.c
00196a   0efb     MOVLW     0xfb           		return(a_turningSpeed);                                                        C:\first\v2.0\src\NCSSM\wheels.c
00196c   cfdb     MOVFF     0xfdb,0x2b                                                                                      
00196e   f02b                                                                                                               
001970   0efc     MOVLW     0xfc                                                                                            
001972   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001974   f02c                                                                                                               
001976   0efd     MOVLW     0xfd                                                                                            
001978   cfdb     MOVFF     0xfdb,0x2d                                                                                      
00197a   f02d                                                                                                               
00197c   0efe     MOVLW     0xfe                                                                                            
00197e   cfdb     MOVFF     0xfdb,0x2e                                                                                      
001980   f02e                                                                                                               
001982   c02b     MOVFF     0x2b,0x1b                                                                                       
001984   f01b                                                                                                               
001986   c02c     MOVFF     0x2c,0x1c                                                                                       
001988   f01c                                                                                                               
00198a   c02d     MOVFF     0x2d,0x1d                                                                                       
00198c   f01d                                                                                                               
00198e   c02e     MOVFF     0x2e,0x1e                                                                                       
001990   f01e                                                                                                               
001992   d000     BRA       0x1994                                                                                          
                                           	    }                                                                           C:\first\v2.0\src\NCSSM\wheels.c
001994   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\NCSSM\wheels.c
001996   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001998   ffd9                                                                                                               
00199a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           // Guess the actual wheel direction based on the current pwm values              C:\first\v2.0\src\NCSSM\wheels.c
00199c   cfd9     MOVFF     0xfd9,0xfe6    int wheels_getDriveDirection(char a_pwm) {                                       C:\first\v2.0\src\NCSSM\wheels.c
00199e   ffe6                                                                                                               
0019a0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0019a2   ffd9                                                                                                               
0019a4   0efe     MOVLW     0xfe           	if( a_pwm > 127 ) {                                                             C:\first\v2.0\src\NCSSM\wheels.c
0019a6   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0019a8   f02b                                                                                                               
0019aa   0e7f     MOVLW     0x7f                                                                                            
0019ac   6ee7     MOVWF     0xe7,0x0                                                                                        
0019ae   182b     XORWF     0x2b,0x0,0x0                                                                                    
0019b0   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
0019b2   d002     BRA       0x19b8                                                                                          
0019b4   342b     RLCF      0x2b,0x0,0x0                                                                                    
0019b6   d003     BRA       0x19be                                                                                          
0019b8   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0019ba   80d8     BSF       0xd8,0x0,0x0                                                                                    
0019bc   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
0019be   e205     BC        0x19ca                                                                                          
0019c0   0e01     MOVLW     0x1            		return (int)1;                                                                 C:\first\v2.0\src\NCSSM\wheels.c
0019c2   6ef3     MOVWF     0xf3,0x0                                                                                        
0019c4   6af4     CLRF      0xf4,0x0                                                                                        
0019c6   d015     BRA       0x19f2                                                                                          
0019c8   d014     BRA       0x19f2         	} else if ( a_pwm < 127 ) {                                                     C:\first\v2.0\src\NCSSM\wheels.c
0019ca   0efe     MOVLW     0xfe                                                                                            
0019cc   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0019ce   f02b                                                                                                               
0019d0   0e7f     MOVLW     0x7f                                                                                            
0019d2   6ee7     MOVWF     0xe7,0x0                                                                                        
0019d4   182b     XORWF     0x2b,0x0,0x0                                                                                    
0019d6   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
0019d8   d002     BRA       0x19de                                                                                          
0019da   34e7     RLCF      0xe7,0x0,0x0                                                                                    
0019dc   d002     BRA       0x19e2                                                                                          
0019de   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0019e0   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
0019e2   e204     BC        0x19ec                                                                                          
0019e4   68f3     SETF      0xf3,0x0       		return (int)-1;                                                                C:\first\v2.0\src\NCSSM\wheels.c
0019e6   68f4     SETF      0xf4,0x0                                                                                        
0019e8   d004     BRA       0x19f2                                                                                          
0019ea   d003     BRA       0x19f2         	} else {                                                                        C:\first\v2.0\src\NCSSM\wheels.c
0019ec   6af3     CLRF      0xf3,0x0       		return 0;                                                                      C:\first\v2.0\src\NCSSM\wheels.c
0019ee   6af4     CLRF      0xf4,0x0                                                                                        
0019f0   d000     BRA       0x19f2                                                                                          
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
0019f2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\NCSSM\wheels.c
0019f4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0019f6   ffd9                                                                                                               
0019f8   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
0019fa   cfd9     MOVFF     0xfd9,0xfe6    long safeAddLong( long one, long two ) {                                         C:\first\v2.0\src\NCSSM\wheels.c
0019fc   ffe6                                                                                                               
0019fe   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001a00   ffd9                                                                                                               
001a02   0e04     MOVLW     0x4                                                                                             
001a04   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
001a06   0ef7     MOVLW     0xf7           	long sum = one + two;                                                           C:\first\v2.0\src\NCSSM\wheels.c
001a08   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001a0a   f02b                                                                                                               
001a0c   0ef8     MOVLW     0xf8                                                                                            
001a0e   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001a10   f02c                                                                                                               
001a12   0ef9     MOVLW     0xf9                                                                                            
001a14   cfdb     MOVFF     0xfdb,0x2d                                                                                      
001a16   f02d                                                                                                               
001a18   0efa     MOVLW     0xfa                                                                                            
001a1a   cfdb     MOVFF     0xfdb,0x2e                                                                                      
001a1c   f02e                                                                                                               
001a1e   50d9     MOVF      0xd9,0x0,0x0                                                                                    
001a20   0ffb     ADDLW     0xfb                                                                                            
001a22   6ee9     MOVWF     0xe9,0x0                                                                                        
001a24   0eff     MOVLW     0xff                                                                                            
001a26   20da     ADDWFC    0xda,0x0,0x0                                                                                    
001a28   6eea     MOVWF     0xea,0x0                                                                                        
001a2a   50ee     MOVF      0xee,0x0,0x0                                                                                    
001a2c   262b     ADDWF     0x2b,0x1,0x0                                                                                    
001a2e   50ee     MOVF      0xee,0x0,0x0                                                                                    
001a30   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
001a32   50ee     MOVF      0xee,0x0,0x0                                                                                    
001a34   222d     ADDWFC    0x2d,0x1,0x0                                                                                    
001a36   50ee     MOVF      0xee,0x0,0x0                                                                                    
001a38   222e     ADDWFC    0x2e,0x1,0x0                                                                                    
001a3a   c02b     MOVFF     0x2b,0xfdf                                                                                      
001a3c   ffdf                                                                                                               
001a3e   0e01     MOVLW     0x1                                                                                             
001a40   c02c     MOVFF     0x2c,0xfdb                                                                                      
001a42   ffdb                                                                                                               
001a44   0e02     MOVLW     0x2                                                                                             
001a46   c02d     MOVFF     0x2d,0xfdb                                                                                      
001a48   ffdb                                                                                                               
001a4a   0e03     MOVLW     0x3                                                                                             
001a4c   c02e     MOVFF     0x2e,0xfdb                                                                                      
001a4e   ffdb                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001a50   0ef7     MOVLW     0xf7           	if((two > 0) && (sum < one))                                                    C:\first\v2.0\src\NCSSM\wheels.c
001a52   cfdb     MOVFF     0xfdb,0x1c                                                                                      
001a54   f01c                                                                                                               
001a56   0ef8     MOVLW     0xf8                                                                                            
001a58   cfdb     MOVFF     0xfdb,0x1d                                                                                      
001a5a   f01d                                                                                                               
001a5c   0ef9     MOVLW     0xf9                                                                                            
001a5e   cfdb     MOVFF     0xfdb,0x1e                                                                                      
001a60   f01e                                                                                                               
001a62   0efa     MOVLW     0xfa                                                                                            
001a64   cfdb     MOVFF     0xfdb,0x1f                                                                                      
001a66   f01f                                                                                                               
001a68   0e00     MOVLW     0x0                                                                                             
001a6a   181f     XORWF     0x1f,0x0,0x0                                                                                    
001a6c   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001a6e   d002     BRA       0x1a74                                                                                          
001a70   341f     RLCF      0x1f,0x0,0x0                                                                                    
001a72   d009     BRA       0x1a86                                                                                          
001a74   0e00     MOVLW     0x0                                                                                             
001a76   80d8     BSF       0xd8,0x0,0x0                                                                                    
001a78   541c     SUBFWB    0x1c,0x0,0x0                                                                                    
001a7a   0e00     MOVLW     0x0                                                                                             
001a7c   541d     SUBFWB    0x1d,0x0,0x0                                                                                    
001a7e   0e00     MOVLW     0x0                                                                                             
001a80   541e     SUBFWB    0x1e,0x0,0x0                                                                                    
001a82   0e00     MOVLW     0x0                                                                                             
001a84   541f     SUBFWB    0x1f,0x0,0x0                                                                                    
001a86   e227     BC        0x1ad6                                                                                          
001a88   0efb     MOVLW     0xfb                                                                                            
001a8a   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001a8c   f02b                                                                                                               
001a8e   0efc     MOVLW     0xfc                                                                                            
001a90   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001a92   f02c                                                                                                               
001a94   0efd     MOVLW     0xfd                                                                                            
001a96   cfdb     MOVFF     0xfdb,0x2d                                                                                      
001a98   f02d                                                                                                               
001a9a   0efe     MOVLW     0xfe                                                                                            
001a9c   cfdb     MOVFF     0xfdb,0x2e                                                                                      
001a9e   f02e                                                                                                               
001aa0   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
001aa2   ffe9                                                                                                               
001aa4   cfda     MOVFF     0xfda,0xfea                                                                                     
001aa6   ffea                                                                                                               
001aa8   0e03     MOVLW     0x3                                                                                             
001aaa   50eb     MOVF      0xeb,0x0,0x0                                                                                    
001aac   182e     XORWF     0x2e,0x0,0x0                                                                                    
001aae   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001ab0   d002     BRA       0x1ab6                                                                                          
001ab2   342e     RLCF      0x2e,0x0,0x0                                                                                    
001ab4   d008     BRA       0x1ac6                                                                                          
001ab6   502b     MOVF      0x2b,0x0,0x0                                                                                    
001ab8   5cee     SUBWF     0xee,0x0,0x0                                                                                    
001aba   502c     MOVF      0x2c,0x0,0x0                                                                                    
001abc   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001abe   502d     MOVF      0x2d,0x0,0x0                                                                                    
001ac0   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001ac2   502e     MOVF      0x2e,0x0,0x0                                                                                    
001ac4   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001ac6   e207     BC        0x1ad6                                                                                          
                                           	{                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001ac8   681b     SETF      0x1b,0x0       		return(0x7FFFFFFFL);                                                           C:\first\v2.0\src\NCSSM\wheels.c
001aca   681c     SETF      0x1c,0x0                                                                                        
001acc   681d     SETF      0x1d,0x0                                                                                        
001ace   0e7f     MOVLW     0x7f                                                                                            
001ad0   6e1e     MOVWF     0x1e,0x0                                                                                        
001ad2   d04b     BRA       0x1b6a                                                                                          
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001ad4   d04a     BRA       0x1b6a         	else if((two < 0) && (sum > one))                                               C:\first\v2.0\src\NCSSM\wheels.c
001ad6   50d9     MOVF      0xd9,0x0,0x0                                                                                    
001ad8   0ff7     ADDLW     0xf7                                                                                            
001ada   6ee9     MOVWF     0xe9,0x0                                                                                        
001adc   0eff     MOVLW     0xff                                                                                            
001ade   20da     ADDWFC    0xda,0x0,0x0                                                                                    
001ae0   6eea     MOVWF     0xea,0x0                                                                                        
001ae2   0e03     MOVLW     0x3                                                                                             
001ae4   50eb     MOVF      0xeb,0x0,0x0                                                                                    
001ae6   0a00     XORLW     0x0                                                                                             
001ae8   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001aea   d002     BRA       0x1af0                                                                                          
001aec   90d8     BCF       0xd8,0x0,0x0                                                                                    
001aee   d008     BRA       0x1b00                                                                                          
001af0   0e00     MOVLW     0x0                                                                                             
001af2   5cee     SUBWF     0xee,0x0,0x0                                                                                    
001af4   0e00     MOVLW     0x0                                                                                             
001af6   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001af8   0e00     MOVLW     0x0                                                                                             
001afa   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001afc   0e00     MOVLW     0x0                                                                                             
001afe   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001b00   e229     BC        0x1b54                                                                                          
001b02   0efb     MOVLW     0xfb                                                                                            
001b04   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001b06   f02b                                                                                                               
001b08   0efc     MOVLW     0xfc                                                                                            
001b0a   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001b0c   f02c                                                                                                               
001b0e   0efd     MOVLW     0xfd                                                                                            
001b10   cfdb     MOVFF     0xfdb,0x2d                                                                                      
001b12   f02d                                                                                                               
001b14   0efe     MOVLW     0xfe                                                                                            
001b16   cfdb     MOVFF     0xfdb,0x2e                                                                                      
001b18   f02e                                                                                                               
001b1a   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
001b1c   ffe9                                                                                                               
001b1e   cfda     MOVFF     0xfda,0xfea                                                                                     
001b20   ffea                                                                                                               
001b22   0e03     MOVLW     0x3                                                                                             
001b24   cfeb     MOVFF     0xfeb,0xff3                                                                                     
001b26   fff3                                                                                                               
001b28   502e     MOVF      0x2e,0x0,0x0                                                                                    
001b2a   18f3     XORWF     0xf3,0x0,0x0                                                                                    
001b2c   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001b2e   d002     BRA       0x1b34                                                                                          
001b30   34f3     RLCF      0xf3,0x0,0x0                                                                                    
001b32   d008     BRA       0x1b44                                                                                          
001b34   50ee     MOVF      0xee,0x0,0x0                                                                                    
001b36   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
001b38   50ee     MOVF      0xee,0x0,0x0                                                                                    
001b3a   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
001b3c   50ee     MOVF      0xee,0x0,0x0                                                                                    
001b3e   582d     SUBWFB    0x2d,0x0,0x0                                                                                    
001b40   50ee     MOVF      0xee,0x0,0x0                                                                                    
001b42   582e     SUBWFB    0x2e,0x0,0x0                                                                                    
001b44   e207     BC        0x1b54                                                                                          
                                           	{                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001b46   6a1b     CLRF      0x1b,0x0       		return(0x80000000L);                                                           C:\first\v2.0\src\NCSSM\wheels.c
001b48   6a1c     CLRF      0x1c,0x0                                                                                        
001b4a   6a1d     CLRF      0x1d,0x0                                                                                        
001b4c   0e80     MOVLW     0x80                                                                                            
001b4e   6e1e     MOVWF     0x1e,0x0                                                                                        
001b50   d00c     BRA       0x1b6a                                                                                          
                                           	}			                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001b52   d00b     BRA       0x1b6a         	else                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	{                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001b54   cfde     MOVFF     0xfde,0x1b     		return(sum);                                                                   C:\first\v2.0\src\NCSSM\wheels.c
001b56   f01b                                                                                                               
001b58   cfde     MOVFF     0xfde,0x1c                                                                                      
001b5a   f01c                                                                                                               
001b5c   cfde     MOVFF     0xfde,0x1d                                                                                      
001b5e   f01d                                                                                                               
001b60   cfdd     MOVFF     0xfdd,0x1e                                                                                      
001b62   f01e                                                                                                               
001b64   52dd     MOVF      0xdd,0x1,0x0                                                                                    
001b66   52dd     MOVF      0xdd,0x1,0x0                                                                                    
001b68   d000     BRA       0x1b6a                                                                                          
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001b6a   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\wheels.c
001b6c   ffe1                                                                                                               
001b6e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001b70   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001b72   ffd9                                                                                                               
001b74   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           // Accumulate safely without overflow signed numbers                             C:\first\v2.0\src\NCSSM\wheels.c
001b76   cfd9     MOVFF     0xfd9,0xfe6    int safeAdd(int one, int two)                                                    C:\first\v2.0\src\NCSSM\wheels.c
001b78   ffe6                                                                                                               
001b7a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001b7c   ffd9                                                                                                               
001b7e   0e02     MOVLW     0x2                                                                                             
001b80   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\first\v2.0\src\NCSSM\wheels.c
                                           	int sum;                                                                        C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001b82   0efb     MOVLW     0xfb           	sum = one + two;                                                                C:\first\v2.0\src\NCSSM\wheels.c
001b84   cfdb     MOVFF     0xfdb,0x2d                                                                                      
001b86   f02d                                                                                                               
001b88   0efc     MOVLW     0xfc                                                                                            
001b8a   cfdb     MOVFF     0xfdb,0x2e                                                                                      
001b8c   f02e                                                                                                               
001b8e   0efd     MOVLW     0xfd                                                                                            
001b90   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b92   242d     ADDWF     0x2d,0x0,0x0                                                                                    
001b94   6e2b     MOVWF     0x2b,0x0                                                                                        
001b96   0efe     MOVLW     0xfe                                                                                            
001b98   50db     MOVF      0xdb,0x0,0x0                                                                                    
001b9a   202e     ADDWFC    0x2e,0x0,0x0                                                                                    
001b9c   6e2c     MOVWF     0x2c,0x0                                                                                        
001b9e   c02b     MOVFF     0x2b,0xfde                                                                                      
001ba0   ffde                                                                                                               
001ba2   c02c     MOVFF     0x2c,0xfdd                                                                                      
001ba4   ffdd                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001ba6   0efb     MOVLW     0xfb           	if((two > 0) && (sum < one))                                                    C:\first\v2.0\src\NCSSM\wheels.c
001ba8   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001baa   f02b                                                                                                               
001bac   0efc     MOVLW     0xfc                                                                                            
001bae   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001bb0   f02c                                                                                                               
001bb2   342c     RLCF      0x2c,0x0,0x0                                                                                    
001bb4   e204     BC        0x1bbe                                                                                          
001bb6   502b     MOVF      0x2b,0x0,0x0                                                                                    
001bb8   0800     SUBLW     0x0                                                                                             
001bba   0e00     MOVLW     0x0                                                                                             
001bbc   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
001bbe   e21a     BC        0x1bf4                                                                                          
001bc0   cfde     MOVFF     0xfde,0x2d                                                                                      
001bc2   f02d                                                                                                               
001bc4   cfdd     MOVFF     0xfdd,0x2e                                                                                      
001bc6   f02e                                                                                                               
001bc8   0efd     MOVLW     0xfd                                                                                            
001bca   cfdb     MOVFF     0xfdb,0x2f                                                                                      
001bcc   f02f                                                                                                               
001bce   0efe     MOVLW     0xfe                                                                                            
001bd0   cfdb     MOVFF     0xfdb,0x30                                                                                      
001bd2   f030                                                                                                               
001bd4   502e     MOVF      0x2e,0x0,0x0                                                                                    
001bd6   1830     XORWF     0x30,0x0,0x0                                                                                    
001bd8   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001bda   d002     BRA       0x1be0                                                                                          
001bdc   3430     RLCF      0x30,0x0,0x0                                                                                    
001bde   d004     BRA       0x1be8                                                                                          
001be0   502f     MOVF      0x2f,0x0,0x0                                                                                    
001be2   5c2d     SUBWF     0x2d,0x0,0x0                                                                                    
001be4   5030     MOVF      0x30,0x0,0x0                                                                                    
001be6   582e     SUBWFB    0x2e,0x0,0x0                                                                                    
001be8   e205     BC        0x1bf4                                                                                          
                                           	{                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001bea   68f3     SETF      0xf3,0x0       		return(32767);                                                                 C:\first\v2.0\src\NCSSM\wheels.c
001bec   0e7f     MOVLW     0x7f                                                                                            
001bee   6ef4     MOVWF     0xf4,0x0                                                                                        
001bf0   d02e     BRA       0x1c4e                                                                                          
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001bf2   d02d     BRA       0x1c4e         	else if((two < 0) && (sum > one))                                               C:\first\v2.0\src\NCSSM\wheels.c
001bf4   0efb     MOVLW     0xfb                                                                                            
001bf6   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001bf8   f02b                                                                                                               
001bfa   0efc     MOVLW     0xfc                                                                                            
001bfc   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001bfe   f02c                                                                                                               
001c00   0100     MOVLB     0x0                                                                                             
001c02   0e80     MOVLW     0x80                                                                                            
001c04   142c     ANDWF     0x2c,0x0,0x0                                                                                    
001c06   e01a     BZ        0x1c3c                                                                                          
001c08   cfde     MOVFF     0xfde,0x2d                                                                                      
001c0a   f02d                                                                                                               
001c0c   cfdd     MOVFF     0xfdd,0x2e                                                                                      
001c0e   f02e                                                                                                               
001c10   0efd     MOVLW     0xfd                                                                                            
001c12   cfdb     MOVFF     0xfdb,0x2f                                                                                      
001c14   f02f                                                                                                               
001c16   0efe     MOVLW     0xfe                                                                                            
001c18   cfdb     MOVFF     0xfdb,0x30                                                                                      
001c1a   f030                                                                                                               
001c1c   5030     MOVF      0x30,0x0,0x0                                                                                    
001c1e   182e     XORWF     0x2e,0x0,0x0                                                                                    
001c20   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001c22   d002     BRA       0x1c28                                                                                          
001c24   342e     RLCF      0x2e,0x0,0x0                                                                                    
001c26   d004     BRA       0x1c30                                                                                          
001c28   502d     MOVF      0x2d,0x0,0x0                                                                                    
001c2a   5c2f     SUBWF     0x2f,0x0,0x0                                                                                    
001c2c   502e     MOVF      0x2e,0x0,0x0                                                                                    
001c2e   5830     SUBWFB    0x30,0x0,0x0                                                                                    
001c30   e205     BC        0x1c3c                                                                                          
                                           	{                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001c32   6af3     CLRF      0xf3,0x0       		return(-32768);                                                                C:\first\v2.0\src\NCSSM\wheels.c
001c34   0e80     MOVLW     0x80                                                                                            
001c36   6ef4     MOVWF     0xf4,0x0                                                                                        
001c38   d00a     BRA       0x1c4e                                                                                          
                                           	}			                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001c3a   d009     BRA       0x1c4e         	else                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	{                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001c3c   cfde     MOVFF     0xfde,0x2b     		return(sum);                                                                   C:\first\v2.0\src\NCSSM\wheels.c
001c3e   f02b                                                                                                               
001c40   cfdd     MOVFF     0xfdd,0x2c                                                                                      
001c42   f02c                                                                                                               
001c44   c02b     MOVFF     0x2b,0xff3                                                                                      
001c46   fff3                                                                                                               
001c48   c02c     MOVFF     0x2c,0xff4                                                                                      
001c4a   fff4                                                                                                               
001c4c   d000     BRA       0x1c4e                                                                                          
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001c4e   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\wheels.c
001c50   ffe1                                                                                                               
001c52   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001c54   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001c56   ffd9                                                                                                               
001c58   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           // Shift signed chars to unsigned pwm 0-255 range unsigned chars                 C:\first\v2.0\src\NCSSM\wheels.c
001c5a   cfd9     MOVFF     0xfd9,0xfe6    unsigned char safePWMs(long one, long two)                                       C:\first\v2.0\src\NCSSM\wheels.c
001c5c   ffe6                                                                                                               
001c5e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
001c60   ffd9                                                                                                               
001c62   0e04     MOVLW     0x4                                                                                             
001c64   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                C:\first\v2.0\src\NCSSM\wheels.c
                                           	long sum;                                                                       C:\first\v2.0\src\NCSSM\wheels.c
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001c66   0ef7     MOVLW     0xf7           	sum = one + two;                                                                C:\first\v2.0\src\NCSSM\wheels.c
001c68   cfdb     MOVFF     0xfdb,0x2b                                                                                      
001c6a   f02b                                                                                                               
001c6c   0ef8     MOVLW     0xf8                                                                                            
001c6e   cfdb     MOVFF     0xfdb,0x2c                                                                                      
001c70   f02c                                                                                                               
001c72   0ef9     MOVLW     0xf9                                                                                            
001c74   cfdb     MOVFF     0xfdb,0x2d                                                                                      
001c76   f02d                                                                                                               
001c78   0efa     MOVLW     0xfa                                                                                            
001c7a   cfdb     MOVFF     0xfdb,0x2e                                                                                      
001c7c   f02e                                                                                                               
001c7e   50d9     MOVF      0xd9,0x0,0x0                                                                                    
001c80   0ffb     ADDLW     0xfb                                                                                            
001c82   6ee9     MOVWF     0xe9,0x0                                                                                        
001c84   0eff     MOVLW     0xff                                                                                            
001c86   20da     ADDWFC    0xda,0x0,0x0                                                                                    
001c88   6eea     MOVWF     0xea,0x0                                                                                        
001c8a   50ee     MOVF      0xee,0x0,0x0                                                                                    
001c8c   262b     ADDWF     0x2b,0x1,0x0                                                                                    
001c8e   50ee     MOVF      0xee,0x0,0x0                                                                                    
001c90   222c     ADDWFC    0x2c,0x1,0x0                                                                                    
001c92   50ee     MOVF      0xee,0x0,0x0                                                                                    
001c94   222d     ADDWFC    0x2d,0x1,0x0                                                                                    
001c96   50ee     MOVF      0xee,0x0,0x0                                                                                    
001c98   222e     ADDWFC    0x2e,0x1,0x0                                                                                    
001c9a   c02b     MOVFF     0x2b,0xfdf                                                                                      
001c9c   ffdf                                                                                                               
001c9e   0e01     MOVLW     0x1                                                                                             
001ca0   c02c     MOVFF     0x2c,0xfdb                                                                                      
001ca2   ffdb                                                                                                               
001ca4   0e02     MOVLW     0x2                                                                                             
001ca6   c02d     MOVFF     0x2d,0xfdb                                                                                      
001ca8   ffdb                                                                                                               
001caa   0e03     MOVLW     0x3                                                                                             
001cac   c02e     MOVFF     0x2e,0xfdb                                                                                      
001cae   ffdb                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001cb0   cfd9     MOVFF     0xfd9,0xfe9    	if(sum < 0)                                                                     C:\first\v2.0\src\NCSSM\wheels.c
001cb2   ffe9                                                                                                               
001cb4   cfda     MOVFF     0xfda,0xfea                                                                                     
001cb6   ffea                                                                                                               
001cb8   50eb     MOVF      0xeb,0x0,0x0                                                                                    
001cba   0a00     XORLW     0x0                                                                                             
001cbc   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001cbe   d002     BRA       0x1cc4                                                                                          
001cc0   90d8     BCF       0xd8,0x0,0x0                                                                                    
001cc2   d008     BRA       0x1cd4                                                                                          
001cc4   0e00     MOVLW     0x0                                                                                             
001cc6   5cee     SUBWF     0xee,0x0,0x0                                                                                    
001cc8   0e00     MOVLW     0x0                                                                                             
001cca   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001ccc   0e00     MOVLW     0x0                                                                                             
001cce   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001cd0   0e00     MOVLW     0x0                                                                                             
001cd2   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
001cd4   e203     BC        0x1cdc                                                                                          
                                           	{                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001cd6   0e00     MOVLW     0x0            		return((unsigned char) 0);                                                     C:\first\v2.0\src\NCSSM\wheels.c
001cd8   d021     BRA       0x1d1c                                                                                          
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001cda   d020     BRA       0x1d1c         	else if(sum > 255 )                                                             C:\first\v2.0\src\NCSSM\wheels.c
001cdc   cfde     MOVFF     0xfde,0x1c                                                                                      
001cde   f01c                                                                                                               
001ce0   cfde     MOVFF     0xfde,0x1d                                                                                      
001ce2   f01d                                                                                                               
001ce4   cfde     MOVFF     0xfde,0x1e                                                                                      
001ce6   f01e                                                                                                               
001ce8   cfdd     MOVFF     0xfdd,0x1f                                                                                      
001cea   f01f                                                                                                               
001cec   52dd     MOVF      0xdd,0x1,0x0                                                                                    
001cee   52dd     MOVF      0xdd,0x1,0x0                                                                                    
001cf0   0e00     MOVLW     0x0                                                                                             
001cf2   181f     XORWF     0x1f,0x0,0x0                                                                                    
001cf4   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
001cf6   d002     BRA       0x1cfc                                                                                          
001cf8   341f     RLCF      0x1f,0x0,0x0                                                                                    
001cfa   d009     BRA       0x1d0e                                                                                          
001cfc   0eff     MOVLW     0xff                                                                                            
001cfe   80d8     BSF       0xd8,0x0,0x0                                                                                    
001d00   541c     SUBFWB    0x1c,0x0,0x0                                                                                    
001d02   0e00     MOVLW     0x0                                                                                             
001d04   541d     SUBFWB    0x1d,0x0,0x0                                                                                    
001d06   0e00     MOVLW     0x0                                                                                             
001d08   541e     SUBFWB    0x1e,0x0,0x0                                                                                    
001d0a   0e00     MOVLW     0x0                                                                                             
001d0c   541f     SUBFWB    0x1f,0x0,0x0                                                                                    
001d0e   e203     BC        0x1d16                                                                                          
                                           	{                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001d10   0eff     MOVLW     0xff           		return((unsigned char) 255);                                                   C:\first\v2.0\src\NCSSM\wheels.c
001d12   d004     BRA       0x1d1c                                                                                          
                                           	}			                                                                            C:\first\v2.0\src\NCSSM\wheels.c
001d14   d003     BRA       0x1d1c         	else                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           	{                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001d16   0e00     MOVLW     0x0            		return((unsigned char) sum);                                                   C:\first\v2.0\src\NCSSM\wheels.c
001d18   50db     MOVF      0xdb,0x0,0x0                                                                                    
001d1a   d000     BRA       0x1d1c                                                                                          
                                           	}                                                                               C:\first\v2.0\src\NCSSM\wheels.c
001d1c   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\wheels.c
001d1e   ffe1                                                                                                               
001d20   52e5     MOVF      0xe5,0x1,0x0                                                                                    
001d22   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
001d24   ffd9                                                                                                               
001d26   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\wheels.c
                                           void wheels_moduleInitialize( void ) {                                           C:\first\v2.0\src\NCSSM\wheels.c
001d28   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\wheels.c
                                           #define __speedometer_c                                                          C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           #include "speedometer.h"                                                         C:\first\v2.0\src\NCSSM\speedometer.c
                                           #include "constants.h"                                                           C:\first\v2.0\src\NCSSM\speedometer.c
                                           #include "driverClock.h"                                                         C:\first\v2.0\src\NCSSM\speedometer.c
                                           #include <stdio.h>                                                               C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           /*** local constants ***/                                                        C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           // distance traveled in one encoder click (mm)                                   C:\first\v2.0\src\NCSSM\speedometer.c
                                           #define leftEncoderDistance   8.47                                               C:\first\v2.0\src\NCSSM\speedometer.c
                                           #define rightEncoderDistance  8.47                                               C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           // what timer value indicates a velocity of zero                                 C:\first\v2.0\src\NCSSM\speedometer.c
                                           // with value of 2000, any speed below 42mm/s is === 0                           C:\first\v2.0\src\NCSSM\speedometer.c
                                           #define zeroVelocityTimerValue  2000                                             C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           /*** global variables ***/                                                       C:\first\v2.0\src\NCSSM\speedometer.c
                                           volatile speedometer_State speedometer_left;                                     C:\first\v2.0\src\NCSSM\speedometer.c
                                           volatile speedometer_State speedometer_right;                                    C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           /*** internal functions ***/                                                     C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           /**                                                                              C:\first\v2.0\src\NCSSM\speedometer.c
                                            * returns the last known speed of the component.                                C:\first\v2.0\src\NCSSM\speedometer.c
                                            * speed is returned in the units specified in the                               C:\first\v2.0\src\NCSSM\speedometer.c
                                            * constant EncoderDistance, per second.  This is,                               C:\first\v2.0\src\NCSSM\speedometer.c
                                            * typically, mm/s.                                                              C:\first\v2.0\src\NCSSM\speedometer.c
                                            *                                                                               C:\first\v2.0\src\NCSSM\speedometer.c
                                            * @param instance                                                               C:\first\v2.0\src\NCSSM\speedometer.c
                                            *   the speedometer instance that should be read.                               C:\first\v2.0\src\NCSSM\speedometer.c
                                            */                                                                              C:\first\v2.0\src\NCSSM\speedometer.c
00294c   cfd9     MOVFF     0xfd9,0xfe6    unsigned int speedometer_getSpeed( speedometer_State *instance ) {               C:\first\v2.0\src\NCSSM\speedometer.c
00294e   ffe6                                                                                                               
002950   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002952   ffd9                                                                                                               
002954   0e08     MOVLW     0x8                                                                                             
002956   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
002958   ec1a     CALL      0x6634,0x0     	unsigned long tCurrent = driverClock_getElapsedTime();                          C:\first\v2.0\src\NCSSM\speedometer.c
00295a   f033                                                                                                               
00295c   c01b     MOVFF     0x1b,0xfde                                                                                      
00295e   ffde                                                                                                               
002960   c01c     MOVFF     0x1c,0xfde                                                                                      
002962   ffde                                                                                                               
002964   c01d     MOVFF     0x1d,0xfde                                                                                      
002966   ffde                                                                                                               
002968   c01e     MOVFF     0x1e,0xfdd                                                                                      
00296a   ffdd                                                                                                               
00296c   52dd     MOVF      0xdd,0x1,0x0                                                                                    
00296e   52dd     MOVF      0xdd,0x1,0x0                                                                                    
002970   cfd9     MOVFF     0xfd9,0xfe9    	signed long tDelta = tCurrent - (instance->tLast);                              C:\first\v2.0\src\NCSSM\speedometer.c
002972   ffe9                                                                                                               
002974   cfda     MOVFF     0xfda,0xfea                                                                                     
002976   ffea                                                                                                               
002978   cfee     MOVFF     0xfee,0x2f                                                                                      
00297a   f02f                                                                                                               
00297c   cfee     MOVFF     0xfee,0x30                                                                                      
00297e   f030                                                                                                               
002980   cfee     MOVFF     0xfee,0x31                                                                                      
002982   f031                                                                                                               
002984   cfef     MOVFF     0xfef,0x32                                                                                      
002986   f032                                                                                                               
002988   0efd     MOVLW     0xfd                                                                                            
00298a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00298c   ffe9                                                                                                               
00298e   0efe     MOVLW     0xfe                                                                                            
002990   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002992   ffea                                                                                                               
002994   0e06     MOVLW     0x6                                                                                             
002996   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002998   0e00     MOVLW     0x0                                                                                             
00299a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00299c   50ee     MOVF      0xee,0x0,0x0                                                                                    
00299e   5c2f     SUBWF     0x2f,0x0,0x0                                                                                    
0029a0   6e2b     MOVWF     0x2b,0x0                                                                                        
0029a2   50ee     MOVF      0xee,0x0,0x0                                                                                    
0029a4   5830     SUBWFB    0x30,0x0,0x0                                                                                    
0029a6   6e2c     MOVWF     0x2c,0x0                                                                                        
0029a8   50ee     MOVF      0xee,0x0,0x0                                                                                    
0029aa   5831     SUBWFB    0x31,0x0,0x0                                                                                    
0029ac   6e2d     MOVWF     0x2d,0x0                                                                                        
0029ae   50ee     MOVF      0xee,0x0,0x0                                                                                    
0029b0   5832     SUBWFB    0x32,0x0,0x0                                                                                    
0029b2   6e2e     MOVWF     0x2e,0x0                                                                                        
0029b4   0e04     MOVLW     0x4                                                                                             
0029b6   c02b     MOVFF     0x2b,0xfdb                                                                                      
0029b8   ffdb                                                                                                               
0029ba   0e05     MOVLW     0x5                                                                                             
0029bc   c02c     MOVFF     0x2c,0xfdb                                                                                      
0029be   ffdb                                                                                                               
0029c0   0e06     MOVLW     0x6                                                                                             
0029c2   c02d     MOVFF     0x2d,0xfdb                                                                                      
0029c4   ffdb                                                                                                               
0029c6   0e07     MOVLW     0x7                                                                                             
0029c8   c02e     MOVFF     0x2e,0xfdb                                                                                      
0029ca   ffdb                                                                                                               
0029cc   cfd9     MOVFF     0xfd9,0xfe9    	if( tCurrent <= zeroVelocityTimerValue || tDelta > zeroVelocityTimerValue ) {   C:\first\v2.0\src\NCSSM\speedometer.c
0029ce   ffe9                                                                                                               
0029d0   cfda     MOVFF     0xfda,0xfea                                                                                     
0029d2   ffea                                                                                                               
0029d4   0ed0     MOVLW     0xd0                                                                                            
0029d6   80d8     BSF       0xd8,0x0,0x0                                                                                    
0029d8   54ee     SUBFWB    0xee,0x0,0x0                                                                                    
0029da   0e07     MOVLW     0x7                                                                                             
0029dc   54ee     SUBFWB    0xee,0x0,0x0                                                                                    
0029de   0e00     MOVLW     0x0                                                                                             
0029e0   54ee     SUBFWB    0xee,0x0,0x0                                                                                    
0029e2   0e00     MOVLW     0x0                                                                                             
0029e4   54ee     SUBFWB    0xee,0x0,0x0                                                                                    
0029e6   e21c     BC        0x2a20                                                                                          
0029e8   0e04     MOVLW     0x4                                                                                             
0029ea   cfdb     MOVFF     0xfdb,0x1c                                                                                      
0029ec   f01c                                                                                                               
0029ee   0e05     MOVLW     0x5                                                                                             
0029f0   cfdb     MOVFF     0xfdb,0x1d                                                                                      
0029f2   f01d                                                                                                               
0029f4   0e06     MOVLW     0x6                                                                                             
0029f6   cfdb     MOVFF     0xfdb,0x1e                                                                                      
0029f8   f01e                                                                                                               
0029fa   0e07     MOVLW     0x7                                                                                             
0029fc   cfdb     MOVFF     0xfdb,0x1f                                                                                      
0029fe   f01f                                                                                                               
002a00   0e00     MOVLW     0x0                                                                                             
002a02   181f     XORWF     0x1f,0x0,0x0                                                                                    
002a04   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
002a06   d002     BRA       0x2a0c                                                                                          
002a08   341f     RLCF      0x1f,0x0,0x0                                                                                    
002a0a   d009     BRA       0x2a1e                                                                                          
002a0c   0ed0     MOVLW     0xd0                                                                                            
002a0e   80d8     BSF       0xd8,0x0,0x0                                                                                    
002a10   541c     SUBFWB    0x1c,0x0,0x0                                                                                    
002a12   0e07     MOVLW     0x7                                                                                             
002a14   541d     SUBFWB    0x1d,0x0,0x0                                                                                    
002a16   0e00     MOVLW     0x0                                                                                             
002a18   541e     SUBFWB    0x1e,0x0,0x0                                                                                    
002a1a   0e00     MOVLW     0x0                                                                                             
002a1c   541f     SUBFWB    0x1f,0x0,0x0                                                                                    
002a1e   e208     BC        0x2a30                                                                                          
002a20   0efd     MOVLW     0xfd           		instance->speed = 0;                                                           C:\first\v2.0\src\NCSSM\speedometer.c
002a22   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002a24   ffe9                                                                                                               
002a26   0efe     MOVLW     0xfe                                                                                            
002a28   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002a2a   ffea                                                                                                               
002a2c   6aee     CLRF      0xee,0x0                                                                                        
002a2e   6aed     CLRF      0xed,0x0                                                                                        
                                           	}                                                                               C:\first\v2.0\src\NCSSM\speedometer.c
002a30   0efd     MOVLW     0xfd           	return instance->speed;                                                         C:\first\v2.0\src\NCSSM\speedometer.c
002a32   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002a34   ffe9                                                                                                               
002a36   0efe     MOVLW     0xfe                                                                                            
002a38   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002a3a   ffea                                                                                                               
002a3c   cfee     MOVFF     0xfee,0x2b                                                                                      
002a3e   f02b                                                                                                               
002a40   cfef     MOVFF     0xfef,0x2c                                                                                      
002a42   f02c                                                                                                               
002a44   c02b     MOVFF     0x2b,0xff3                                                                                      
002a46   fff3                                                                                                               
002a48   c02c     MOVFF     0x2c,0xff4                                                                                      
002a4a   fff4                                                                                                               
002a4c   d000     BRA       0x2a4e                                                                                          
002a4e   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\speedometer.c
002a50   ffe1                                                                                                               
002a52   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002a54   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002a56   ffd9                                                                                                               
002a58   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           /**                                                                              C:\first\v2.0\src\NCSSM\speedometer.c
                                            * handleEncoderClick is called from the encoder interrupt                       C:\first\v2.0\src\NCSSM\speedometer.c
                                            * whenever the encoder raises its trigger.  This causes the                     C:\first\v2.0\src\NCSSM\speedometer.c
                                            * last known speed to be computed, based upon the elapsed                       C:\first\v2.0\src\NCSSM\speedometer.c
                                            * time since the last encoder click, and the distance per                       C:\first\v2.0\src\NCSSM\speedometer.c
                                            * encoder click as represented by the constant EncoderDistance.                 C:\first\v2.0\src\NCSSM\speedometer.c
                                            *                                                                               C:\first\v2.0\src\NCSSM\speedometer.c
                                            * this function depends upon the driverClock for time                           C:\first\v2.0\src\NCSSM\speedometer.c
                                            * measurements.  It also uses the constant driverClock_period                   C:\first\v2.0\src\NCSSM\speedometer.c
                                            * to convert the driver clock time into seconds.                                C:\first\v2.0\src\NCSSM\speedometer.c
                                            */                                                                              C:\first\v2.0\src\NCSSM\speedometer.c
002a5a   cfd9     MOVFF     0xfd9,0xfe6    void speedometer_handleEncoderClick( speedometer_State *instance ) {             C:\first\v2.0\src\NCSSM\speedometer.c
002a5c   ffe6                                                                                                               
002a5e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002a60   ffd9                                                                                                               
002a62   0e04     MOVLW     0x4                                                                                             
002a64   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
002a66   ec1a     CALL      0x6634,0x0     	unsigned long tCurrent = driverClock_getElapsedTime();                          C:\first\v2.0\src\NCSSM\speedometer.c
002a68   f033                                                                                                               
002a6a   c01b     MOVFF     0x1b,0xfde                                                                                      
002a6c   ffde                                                                                                               
002a6e   c01c     MOVFF     0x1c,0xfde                                                                                      
002a70   ffde                                                                                                               
002a72   c01d     MOVFF     0x1d,0xfde                                                                                      
002a74   ffde                                                                                                               
002a76   c01e     MOVFF     0x1e,0xfdd                                                                                      
002a78   ffdd                                                                                                               
002a7a   52dd     MOVF      0xdd,0x1,0x0                                                                                    
002a7c   52dd     MOVF      0xdd,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
002a7e   cfd9     MOVFF     0xfd9,0xfe9        instance->tDelta = tCurrent - instance->tLast;                               C:\first\v2.0\src\NCSSM\speedometer.c
002a80   ffe9                                                                                                               
002a82   cfda     MOVFF     0xfda,0xfea                                                                                     
002a84   ffea                                                                                                               
002a86   cfee     MOVFF     0xfee,0x2f                                                                                      
002a88   f02f                                                                                                               
002a8a   cfee     MOVFF     0xfee,0x30                                                                                      
002a8c   f030                                                                                                               
002a8e   cfee     MOVFF     0xfee,0x31                                                                                      
002a90   f031                                                                                                               
002a92   cfef     MOVFF     0xfef,0x32                                                                                      
002a94   f032                                                                                                               
002a96   0efd     MOVLW     0xfd                                                                                            
002a98   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002a9a   ffe9                                                                                                               
002a9c   0efe     MOVLW     0xfe                                                                                            
002a9e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002aa0   ffea                                                                                                               
002aa2   0e06     MOVLW     0x6                                                                                             
002aa4   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002aa6   0e00     MOVLW     0x0                                                                                             
002aa8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002aaa   50ee     MOVF      0xee,0x0,0x0                                                                                    
002aac   5c2f     SUBWF     0x2f,0x0,0x0                                                                                    
002aae   6e2b     MOVWF     0x2b,0x0                                                                                        
002ab0   50ee     MOVF      0xee,0x0,0x0                                                                                    
002ab2   5830     SUBWFB    0x30,0x0,0x0                                                                                    
002ab4   6e2c     MOVWF     0x2c,0x0                                                                                        
002ab6   50ee     MOVF      0xee,0x0,0x0                                                                                    
002ab8   5831     SUBWFB    0x31,0x0,0x0                                                                                    
002aba   6e2d     MOVWF     0x2d,0x0                                                                                        
002abc   50ee     MOVF      0xee,0x0,0x0                                                                                    
002abe   5832     SUBWFB    0x32,0x0,0x0                                                                                    
002ac0   6e2e     MOVWF     0x2e,0x0                                                                                        
002ac2   0efd     MOVLW     0xfd                                                                                            
002ac4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002ac6   ffe9                                                                                                               
002ac8   0efe     MOVLW     0xfe                                                                                            
002aca   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002acc   ffea                                                                                                               
002ace   0e0a     MOVLW     0xa                                                                                             
002ad0   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002ad2   0e00     MOVLW     0x0                                                                                             
002ad4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002ad6   c02b     MOVFF     0x2b,0xfee                                                                                      
002ad8   ffee                                                                                                               
002ada   c02c     MOVFF     0x2c,0xfee                                                                                      
002adc   ffee                                                                                                               
002ade   c02d     MOVFF     0x2d,0xfee                                                                                      
002ae0   ffee                                                                                                               
002ae2   c02e     MOVFF     0x2e,0xfee                                                                                      
002ae4   ffee                                                                                                               
002ae6   0efd     MOVLW     0xfd               instance->speed = (unsigned int)(instance->scaleFactor/instance->tDelta);    C:\first\v2.0\src\NCSSM\speedometer.c
002ae8   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002aea   ffe9                                                                                                               
002aec   0efe     MOVLW     0xfe                                                                                            
002aee   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002af0   ffea                                                                                                               
002af2   0e0a     MOVLW     0xa                                                                                             
002af4   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002af6   0e00     MOVLW     0x0                                                                                             
002af8   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002afa   cfee     MOVFF     0xfee,0x31                                                                                      
002afc   f031                                                                                                               
002afe   cfee     MOVFF     0xfee,0x32                                                                                      
002b00   f032                                                                                                               
002b02   cfee     MOVFF     0xfee,0x33                                                                                      
002b04   f033                                                                                                               
002b06   cfef     MOVFF     0xfef,0x34                                                                                      
002b08   f034                                                                                                               
002b0a   0efd     MOVLW     0xfd                                                                                            
002b0c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002b0e   ffe9                                                                                                               
002b10   0efe     MOVLW     0xfe                                                                                            
002b12   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002b14   ffea                                                                                                               
002b16   0e0e     MOVLW     0xe                                                                                             
002b18   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002b1a   0e00     MOVLW     0x0                                                                                             
002b1c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002b1e   cfee     MOVFF     0xfee,0x2d                                                                                      
002b20   f02d                                                                                                               
002b22   cfee     MOVFF     0xfee,0x2e                                                                                      
002b24   f02e                                                                                                               
002b26   cfee     MOVFF     0xfee,0x2f                                                                                      
002b28   f02f                                                                                                               
002b2a   cfef     MOVFF     0xfef,0x30                                                                                      
002b2c   f030                                                                                                               
002b2e   c02d     MOVFF     0x2d,0x1b                                                                                       
002b30   f01b                                                                                                               
002b32   c02e     MOVFF     0x2e,0x1c                                                                                       
002b34   f01c                                                                                                               
002b36   c02f     MOVFF     0x2f,0x1d                                                                                       
002b38   f01d                                                                                                               
002b3a   c030     MOVFF     0x30,0x1e                                                                                       
002b3c   f01e                                                                                                               
002b3e   c031     MOVFF     0x31,0x20                                                                                       
002b40   f020                                                                                                               
002b42   c032     MOVFF     0x32,0x21                                                                                       
002b44   f021                                                                                                               
002b46   c033     MOVFF     0x33,0x22                                                                                       
002b48   f022                                                                                                               
002b4a   c034     MOVFF     0x34,0x23                                                                                       
002b4c   f023                                                                                                               
002b4e   ec78     CALL      0x64f0,0x0                                                                                      
002b50   f032                                                                                                               
002b52   c01b     MOVFF     0x1b,0x2b                                                                                       
002b54   f02b                                                                                                               
002b56   c01c     MOVFF     0x1c,0x2c                                                                                       
002b58   f02c                                                                                                               
002b5a   0efd     MOVLW     0xfd                                                                                            
002b5c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002b5e   ffe9                                                                                                               
002b60   0efe     MOVLW     0xfe                                                                                            
002b62   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002b64   ffea                                                                                                               
002b66   c02b     MOVFF     0x2b,0xfee                                                                                      
002b68   ffee                                                                                                               
002b6a   c02c     MOVFF     0x2c,0xfed                                                                                      
002b6c   ffed                                                                                                               
002b6e   0efd     MOVLW     0xfd           	instance->distance += instance->encoderDistance;                                C:\first\v2.0\src\NCSSM\speedometer.c
002b70   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002b72   ffe9                                                                                                               
002b74   0efe     MOVLW     0xfe                                                                                            
002b76   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002b78   ffea                                                                                                               
002b7a   0e12     MOVLW     0x12                                                                                            
002b7c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002b7e   0e00     MOVLW     0x0                                                                                             
002b80   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002b82   cfee     MOVFF     0xfee,0x2b                                                                                      
002b84   f02b                                                                                                               
002b86   cfef     MOVFF     0xfef,0x2c                                                                                      
002b88   f02c                                                                                                               
002b8a   6a2d     CLRF      0x2d,0x0                                                                                        
002b8c   6a2e     CLRF      0x2e,0x0                                                                                        
002b8e   0efd     MOVLW     0xfd                                                                                            
002b90   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002b92   ffe9                                                                                                               
002b94   0efe     MOVLW     0xfe                                                                                            
002b96   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002b98   ffea                                                                                                               
002b9a   0e02     MOVLW     0x2                                                                                             
002b9c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002b9e   0e00     MOVLW     0x0                                                                                             
002ba0   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002ba2   502b     MOVF      0x2b,0x0,0x0                                                                                    
002ba4   26ee     ADDWF     0xee,0x1,0x0                                                                                    
002ba6   502c     MOVF      0x2c,0x0,0x0                                                                                    
002ba8   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
002baa   502d     MOVF      0x2d,0x0,0x0                                                                                    
002bac   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
002bae   502e     MOVF      0x2e,0x0,0x0                                                                                    
002bb0   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
002bb2   0efd     MOVLW     0xfd           	instance->tLast = tCurrent;                                                     C:\first\v2.0\src\NCSSM\speedometer.c
002bb4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002bb6   ffe9                                                                                                               
002bb8   0efe     MOVLW     0xfe                                                                                            
002bba   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002bbc   ffea                                                                                                               
002bbe   0e06     MOVLW     0x6                                                                                             
002bc0   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002bc2   0e00     MOVLW     0x0                                                                                             
002bc4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002bc6   cfdf     MOVFF     0xfdf,0xfee                                                                                     
002bc8   ffee                                                                                                               
002bca   0e01     MOVLW     0x1                                                                                             
002bcc   cfdb     MOVFF     0xfdb,0xfee                                                                                     
002bce   ffee                                                                                                               
002bd0   0e02     MOVLW     0x2                                                                                             
002bd2   cfdb     MOVFF     0xfdb,0xfee                                                                                     
002bd4   ffee                                                                                                               
002bd6   0e03     MOVLW     0x3                                                                                             
002bd8   cfdb     MOVFF     0xfdb,0xfee                                                                                     
002bda   ffee                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           	//printf( "encoder click. speed is: %d, %d, %ld \r", instance->speed, instance->scaleFactor, tDelta ); C:\first\v2.0\src\NCSSM\speedometer.c
002bdc   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\speedometer.c
002bde   ffe1                                                                                                               
002be0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002be2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002be4   ffd9                                                                                                               
002be6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           void speedometer_moduleInitialize( void ) {                                      C:\first\v2.0\src\NCSSM\speedometer.c
002be8   0101     MOVLB     0x1            	speedometer_left.speed = 0;                                                     C:\first\v2.0\src\NCSSM\speedometer.c
002bea   6b00     CLRF      0x0,0x1                                                                                         
002bec   6b01     CLRF      0x1,0x1                                                                                         
002bee   6b02     CLRF      0x2,0x1        	speedometer_left.distance = 0;                                                  C:\first\v2.0\src\NCSSM\speedometer.c
002bf0   6b03     CLRF      0x3,0x1                                                                                         
002bf2   6b04     CLRF      0x4,0x1                                                                                         
002bf4   6b05     CLRF      0x5,0x1                                                                                         
002bf6   6b06     CLRF      0x6,0x1        	speedometer_left.tLast = 0;                                                     C:\first\v2.0\src\NCSSM\speedometer.c
002bf8   6b07     CLRF      0x7,0x1                                                                                         
002bfa   6b08     CLRF      0x8,0x1                                                                                         
002bfc   6b09     CLRF      0x9,0x1                                                                                         
002bfe   6b0a     CLRF      0xa,0x1        	speedometer_left.tDelta = 0;                                                    C:\first\v2.0\src\NCSSM\speedometer.c
002c00   6b0b     CLRF      0xb,0x1                                                                                         
002c02   6b0c     CLRF      0xc,0x1                                                                                         
002c04   6b0d     CLRF      0xd,0x1                                                                                         
002c06   0edc     MOVLW     0xdc           	speedometer_left.scaleFactor = 84700L; //(int)(leftEncoderDistance/driverClock_period); C:\first\v2.0\src\NCSSM\speedometer.c
002c08   6f0e     MOVWF     0xe,0x1                                                                                         
002c0a   0e4a     MOVLW     0x4a                                                                                            
002c0c   6f0f     MOVWF     0xf,0x1                                                                                         
002c0e   0e01     MOVLW     0x1                                                                                             
002c10   6f10     MOVWF     0x10,0x1                                                                                        
002c12   6b11     CLRF      0x11,0x1                                                                                        
002c14   0e4f     MOVLW     0x4f           	speedometer_left.encoderDistance = 847;//(int)(leftEncoderDistance*100);        C:\first\v2.0\src\NCSSM\speedometer.c
002c16   6f12     MOVWF     0x12,0x1                                                                                        
002c18   0e03     MOVLW     0x3                                                                                             
002c1a   6f13     MOVWF     0x13,0x1                                                                                        
002c1c   6b14     CLRF      0x14,0x1       	speedometer_right.speed = 0;                                                    C:\first\v2.0\src\NCSSM\speedometer.c
002c1e   6b15     CLRF      0x15,0x1                                                                                        
002c20   6b16     CLRF      0x16,0x1       	speedometer_right.distance = 0;                                                 C:\first\v2.0\src\NCSSM\speedometer.c
002c22   6b17     CLRF      0x17,0x1                                                                                        
002c24   6b18     CLRF      0x18,0x1                                                                                        
002c26   6b19     CLRF      0x19,0x1                                                                                        
002c28   6b1a     CLRF      0x1a,0x1       	speedometer_right.tLast = 0;                                                    C:\first\v2.0\src\NCSSM\speedometer.c
002c2a   6b1b     CLRF      0x1b,0x1                                                                                        
002c2c   6b1c     CLRF      0x1c,0x1                                                                                        
002c2e   6b1d     CLRF      0x1d,0x1                                                                                        
002c30   6b1e     CLRF      0x1e,0x1       	speedometer_right.tDelta = 0;                                                   C:\first\v2.0\src\NCSSM\speedometer.c
002c32   6b1f     CLRF      0x1f,0x1                                                                                        
002c34   6b20     CLRF      0x20,0x1                                                                                        
002c36   6b21     CLRF      0x21,0x1                                                                                        
002c38   0edc     MOVLW     0xdc           	speedometer_right.scaleFactor =84700L; //(int)(rightEncoderDistance/driverClock_period); C:\first\v2.0\src\NCSSM\speedometer.c
002c3a   6f22     MOVWF     0x22,0x1                                                                                        
002c3c   0e4a     MOVLW     0x4a                                                                                            
002c3e   6f23     MOVWF     0x23,0x1                                                                                        
002c40   0e01     MOVLW     0x1                                                                                             
002c42   6f24     MOVWF     0x24,0x1                                                                                        
002c44   6b25     CLRF      0x25,0x1                                                                                        
002c46   0e4f     MOVLW     0x4f           	speedometer_right.encoderDistance = 847;//(int)(rightEncoderDistance*100);      C:\first\v2.0\src\NCSSM\speedometer.c
002c48   6f26     MOVWF     0x26,0x1                                                                                        
002c4a   0e03     MOVLW     0x3                                                                                             
002c4c   6f27     MOVWF     0x27,0x1                                                                                        
002c4e   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           /**                                                                              C:\first\v2.0\src\NCSSM\speedometer.c
                                            * returns the total distance that the encoder has traveled since startup.       C:\first\v2.0\src\NCSSM\speedometer.c
                                            */                                                                              C:\first\v2.0\src\NCSSM\speedometer.c
002c50   cfd9     MOVFF     0xfd9,0xfe6    unsigned long speedometer_getDistance( speedometer_State *instance ) {           C:\first\v2.0\src\NCSSM\speedometer.c
002c52   ffe6                                                                                                               
002c54   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002c56   ffd9                                                                                                               
002c58   0efd     MOVLW     0xfd           	return instance->distance / 100;                                                C:\first\v2.0\src\NCSSM\speedometer.c
002c5a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002c5c   ffe9                                                                                                               
002c5e   0efe     MOVLW     0xfe                                                                                            
002c60   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002c62   ffea                                                                                                               
002c64   0e02     MOVLW     0x2                                                                                             
002c66   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002c68   0e00     MOVLW     0x0                                                                                             
002c6a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002c6c   cfee     MOVFF     0xfee,0x1b                                                                                      
002c6e   f01b                                                                                                               
002c70   cfee     MOVFF     0xfee,0x1c                                                                                      
002c72   f01c                                                                                                               
002c74   cfee     MOVFF     0xfee,0x1d                                                                                      
002c76   f01d                                                                                                               
002c78   cfef     MOVFF     0xfef,0x1e                                                                                      
002c7a   f01e                                                                                                               
002c7c   0e64     MOVLW     0x64                                                                                            
002c7e   6e20     MOVWF     0x20,0x0                                                                                        
002c80   6a21     CLRF      0x21,0x0                                                                                        
002c82   6a22     CLRF      0x22,0x0                                                                                        
002c84   6a23     CLRF      0x23,0x0                                                                                        
002c86   ec78     CALL      0x64f0,0x0                                                                                      
002c88   f032                                                                                                               
002c8a   d000     BRA       0x2c8c                                                                                          
002c8c   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\NCSSM\speedometer.c
002c8e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002c90   ffd9                                                                                                               
002c92   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           /*** averaging speedometer ***/                                                  C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           volatile AvgSpeedometer avgSpeed_left;                                           C:\first\v2.0\src\NCSSM\speedometer.c
                                           volatile AvgSpeedometer avgSpeed_right;                                          C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           void avgSpeed_moduleInitialize( void ) {                                         C:\first\v2.0\src\NCSSM\speedometer.c
002c94   0101     MOVLB     0x1            	avgSpeed_left.reset = 0;                                                        C:\first\v2.0\src\NCSSM\speedometer.c
002c96   6b44     CLRF      0x44,0x1                                                                                        
002c98   6b3c     CLRF      0x3c,0x1       	avgSpeed_left.numSamples = 0;                                                   C:\first\v2.0\src\NCSSM\speedometer.c
002c9a   6b3d     CLRF      0x3d,0x1                                                                                        
002c9c   6b3e     CLRF      0x3e,0x1       	avgSpeed_left.currentIndex = 0;                                                 C:\first\v2.0\src\NCSSM\speedometer.c
002c9e   6b3f     CLRF      0x3f,0x1                                                                                        
002ca0   6b40     CLRF      0x40,0x1       	avgSpeed_left.Tlast = 0;                                                        C:\first\v2.0\src\NCSSM\speedometer.c
002ca2   6b41     CLRF      0x41,0x1                                                                                        
002ca4   6b42     CLRF      0x42,0x1                                                                                        
002ca6   6b43     CLRF      0x43,0x1                                                                                        
002ca8   0edc     MOVLW     0xdc           	avgSpeed_left.scaleFactor = 84700L; //(int)(leftEncoderDistance/driverClock_period); C:\first\v2.0\src\NCSSM\speedometer.c
002caa   6f45     MOVWF     0x45,0x1                                                                                        
002cac   0e4a     MOVLW     0x4a                                                                                            
002cae   6f46     MOVWF     0x46,0x1                                                                                        
002cb0   0e01     MOVLW     0x1                                                                                             
002cb2   6f47     MOVWF     0x47,0x1                                                                                        
002cb4   6b48     CLRF      0x48,0x1                                                                                        
                                           //	avgSpeed_left.encoderDistance = 847;//(int)(leftEncoderDistance*100);         C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           	avgSpeed_right.reset - 0;                                                       C:\first\v2.0\src\NCSSM\speedometer.c
002cb6   6b5d     CLRF      0x5d,0x1       	avgSpeed_right.numSamples = 0;                                                  C:\first\v2.0\src\NCSSM\speedometer.c
002cb8   6b5e     CLRF      0x5e,0x1                                                                                        
002cba   6b5f     CLRF      0x5f,0x1       	avgSpeed_right.currentIndex = 0;                                                C:\first\v2.0\src\NCSSM\speedometer.c
002cbc   6b60     CLRF      0x60,0x1                                                                                        
002cbe   6b61     CLRF      0x61,0x1       	avgSpeed_right.Tlast = 0;                                                       C:\first\v2.0\src\NCSSM\speedometer.c
002cc0   6b62     CLRF      0x62,0x1                                                                                        
002cc2   6b63     CLRF      0x63,0x1                                                                                        
002cc4   6b64     CLRF      0x64,0x1                                                                                        
002cc6   0edc     MOVLW     0xdc           	avgSpeed_right.scaleFactor =84700L; //(int)(rightEncoderDistance/driverClock_period); C:\first\v2.0\src\NCSSM\speedometer.c
002cc8   6f66     MOVWF     0x66,0x1                                                                                        
002cca   0e4a     MOVLW     0x4a                                                                                            
002ccc   6f67     MOVWF     0x67,0x1                                                                                        
002cce   0e01     MOVLW     0x1                                                                                             
002cd0   6f68     MOVWF     0x68,0x1                                                                                        
002cd2   6b69     CLRF      0x69,0x1                                                                                        
                                           //	avgSpeed_right.encoderDistance = 847;//(int)(rightEncoderDistance*100);       C:\first\v2.0\src\NCSSM\speedometer.c
002cd4   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
002cd6   cfd9     MOVFF     0xfd9,0xfe6    static void storeSample( unsigned long sample, AvgSpeedometer *instance ) {      C:\first\v2.0\src\NCSSM\speedometer.c
002cd8   ffe6                                                                                                               
002cda   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002cdc   ffd9                                                                                                               
002cde   0e02     MOVLW     0x2                                                                                             
002ce0   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           	unsigned int current;                                                           C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
002ce2   0ef9     MOVLW     0xf9           	if( instance->reset ) {                                                         C:\first\v2.0\src\NCSSM\speedometer.c
002ce4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002ce6   ffe9                                                                                                               
002ce8   0efa     MOVLW     0xfa                                                                                            
002cea   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002cec   ffea                                                                                                               
002cee   0e1c     MOVLW     0x1c                                                                                            
002cf0   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002cf2   0e00     MOVLW     0x0                                                                                             
002cf4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002cf6   50ef     MOVF      0xef,0x0,0x0                                                                                    
002cf8   e022     BZ        0x2d3e                                                                                          
002cfa   0ef9     MOVLW     0xf9           		instance->numSamples = 0;                                                      C:\first\v2.0\src\NCSSM\speedometer.c
002cfc   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002cfe   ffe9                                                                                                               
002d00   0efa     MOVLW     0xfa                                                                                            
002d02   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002d04   ffea                                                                                                               
002d06   0e14     MOVLW     0x14                                                                                            
002d08   6aeb     CLRF      0xeb,0x0                                                                                        
002d0a   0e15     MOVLW     0x15                                                                                            
002d0c   6aeb     CLRF      0xeb,0x0                                                                                        
002d0e   0ef9     MOVLW     0xf9           		instance->currentIndex = 0;                                                    C:\first\v2.0\src\NCSSM\speedometer.c
002d10   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002d12   ffe9                                                                                                               
002d14   0efa     MOVLW     0xfa                                                                                            
002d16   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002d18   ffea                                                                                                               
002d1a   0e16     MOVLW     0x16                                                                                            
002d1c   6aeb     CLRF      0xeb,0x0                                                                                        
002d1e   0e17     MOVLW     0x17                                                                                            
002d20   6aeb     CLRF      0xeb,0x0                                                                                        
002d22   0ef9     MOVLW     0xf9           		instance->reset = 0;                                                           C:\first\v2.0\src\NCSSM\speedometer.c
002d24   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002d26   ffe9                                                                                                               
002d28   0efa     MOVLW     0xfa                                                                                            
002d2a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002d2c   ffea                                                                                                               
002d2e   0e1c     MOVLW     0x1c                                                                                            
002d30   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002d32   0e00     MOVLW     0x0                                                                                             
002d34   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002d36   6aef     CLRF      0xef,0x0                                                                                        
002d38   6ade     CLRF      0xde,0x0       		current = 0;                                                                   C:\first\v2.0\src\NCSSM\speedometer.c
002d3a   6add     CLRF      0xdd,0x0                                                                                        
002d3c   d01d     BRA       0x2d78         	} else {                                                                        C:\first\v2.0\src\NCSSM\speedometer.c
002d3e   0ef9     MOVLW     0xf9           		current = instance->currentIndex;                                              C:\first\v2.0\src\NCSSM\speedometer.c
002d40   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002d42   ffe9                                                                                                               
002d44   0efa     MOVLW     0xfa                                                                                            
002d46   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002d48   ffea                                                                                                               
002d4a   0e16     MOVLW     0x16                                                                                            
002d4c   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002d4e   0e00     MOVLW     0x0                                                                                             
002d50   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002d52   cfee     MOVFF     0xfee,0xfde                                                                                     
002d54   ffde                                                                                                               
002d56   cfed     MOVFF     0xfed,0xfdd                                                                                     
002d58   ffdd                                                                                                               
002d5a   2adf     INCF      0xdf,0x1,0x0   		++current;                                                                     C:\first\v2.0\src\NCSSM\speedometer.c
002d5c   0e01     MOVLW     0x1                                                                                             
002d5e   e301     BNC       0x2d62                                                                                          
002d60   2adb     INCF      0xdb,0x1,0x0                                                                                    
002d62   cfd9     MOVFF     0xfd9,0xfe9    		if( current == max_samples ) {                                                 C:\first\v2.0\src\NCSSM\speedometer.c
002d64   ffe9                                                                                                               
002d66   cfda     MOVFF     0xfda,0xfea                                                                                     
002d68   ffea                                                                                                               
002d6a   0e05     MOVLW     0x5                                                                                             
002d6c   18ee     XORWF     0xee,0x0,0x0                                                                                    
002d6e   e101     BNZ       0x2d72                                                                                          
002d70   50ed     MOVF      0xed,0x0,0x0                                                                                    
002d72   e102     BNZ       0x2d78                                                                                          
002d74   6ade     CLRF      0xde,0x0       			current = 0;                                                                  C:\first\v2.0\src\NCSSM\speedometer.c
002d76   6add     CLRF      0xdd,0x0                                                                                        
                                           		}                                                                              C:\first\v2.0\src\NCSSM\speedometer.c
                                           	}                                                                               C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
002d78   0ef9     MOVLW     0xf9           	instance->samples[current] = sample;                                            C:\first\v2.0\src\NCSSM\speedometer.c
002d7a   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002d7c   ffe9                                                                                                               
002d7e   0efa     MOVLW     0xfa                                                                                            
002d80   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002d82   ffea                                                                                                               
002d84   cfe9     MOVFF     0xfe9,0x2b                                                                                      
002d86   f02b                                                                                                               
002d88   cfea     MOVFF     0xfea,0x2c                                                                                      
002d8a   f02c                                                                                                               
002d8c   0e04     MOVLW     0x4                                                                                             
002d8e   6e1d     MOVWF     0x1d,0x0                                                                                        
002d90   6a1e     CLRF      0x1e,0x0                                                                                        
002d92   cfde     MOVFF     0xfde,0x22                                                                                      
002d94   f022                                                                                                               
002d96   cfdd     MOVFF     0xfdd,0x23                                                                                      
002d98   f023                                                                                                               
002d9a   ec33     CALL      0x6066,0x0                                                                                      
002d9c   f030                                                                                                               
002d9e   502b     MOVF      0x2b,0x0,0x0                                                                                    
002da0   241b     ADDWF     0x1b,0x0,0x0                                                                                    
002da2   6ee9     MOVWF     0xe9,0x0                                                                                        
002da4   502c     MOVF      0x2c,0x0,0x0                                                                                    
002da6   201c     ADDWFC    0x1c,0x0,0x0                                                                                    
002da8   6eea     MOVWF     0xea,0x0                                                                                        
002daa   0efb     MOVLW     0xfb                                                                                            
002dac   cfdb     MOVFF     0xfdb,0xfee                                                                                     
002dae   ffee                                                                                                               
002db0   0efc     MOVLW     0xfc                                                                                            
002db2   cfdb     MOVFF     0xfdb,0xfee                                                                                     
002db4   ffee                                                                                                               
002db6   0efd     MOVLW     0xfd                                                                                            
002db8   cfdb     MOVFF     0xfdb,0xfee                                                                                     
002dba   ffee                                                                                                               
002dbc   0efe     MOVLW     0xfe                                                                                            
002dbe   cfdb     MOVFF     0xfdb,0xfee                                                                                     
002dc0   ffee                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
002dc2   0ef9     MOVLW     0xf9           	if( instance->numSamples < max_samples ) {                                      C:\first\v2.0\src\NCSSM\speedometer.c
002dc4   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002dc6   ffe9                                                                                                               
002dc8   0efa     MOVLW     0xfa                                                                                            
002dca   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002dcc   ffea                                                                                                               
002dce   0e14     MOVLW     0x14                                                                                            
002dd0   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002dd2   0e00     MOVLW     0x0                                                                                             
002dd4   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002dd6   cfee     MOVFF     0xfee,0x2b                                                                                      
002dd8   f02b                                                                                                               
002dda   cfef     MOVFF     0xfef,0x2c                                                                                      
002ddc   f02c                                                                                                               
002dde   0e05     MOVLW     0x5                                                                                             
002de0   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
002de2   0e00     MOVLW     0x0                                                                                             
002de4   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
002de6   e20c     BC        0x2e00                                                                                          
002de8   0ef9     MOVLW     0xf9           		++(instance->numSamples);                                                      C:\first\v2.0\src\NCSSM\speedometer.c
002dea   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002dec   ffe9                                                                                                               
002dee   0efa     MOVLW     0xfa                                                                                            
002df0   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002df2   ffea                                                                                                               
002df4   0e14     MOVLW     0x14                                                                                            
002df6   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002df8   0e00     MOVLW     0x0                                                                                             
002dfa   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002dfc   2aee     INCF      0xee,0x1,0x0                                                                                    
002dfe   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
                                           	}                                                                               C:\first\v2.0\src\NCSSM\speedometer.c
002e00   0ef9     MOVLW     0xf9           	instance->currentIndex = current;                                               C:\first\v2.0\src\NCSSM\speedometer.c
002e02   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002e04   ffe9                                                                                                               
002e06   0efa     MOVLW     0xfa                                                                                            
002e08   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002e0a   ffea                                                                                                               
002e0c   0e16     MOVLW     0x16                                                                                            
002e0e   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002e10   0e00     MOVLW     0x0                                                                                             
002e12   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002e14   cfde     MOVFF     0xfde,0xfee                                                                                     
002e16   ffee                                                                                                               
002e18   cfdd     MOVFF     0xfdd,0xfed                                                                                     
002e1a   ffed                                                                                                               
002e1c   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\speedometer.c
002e1e   ffe1                                                                                                               
002e20   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002e22   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002e24   ffd9                                                                                                               
002e26   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
002e28   cfd9     MOVFF     0xfd9,0xfe6    static unsigned long computeAvg( AvgSpeedometer *instance ) {                    C:\first\v2.0\src\NCSSM\speedometer.c
002e2a   ffe6                                                                                                               
002e2c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002e2e   ffd9                                                                                                               
002e30   0e08     MOVLW     0x8                                                                                             
002e32   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
002e34   0efd     MOVLW     0xfd           	unsigned int numSamples = instance->numSamples;                                 C:\first\v2.0\src\NCSSM\speedometer.c
002e36   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002e38   ffe9                                                                                                               
002e3a   0efe     MOVLW     0xfe                                                                                            
002e3c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002e3e   ffea                                                                                                               
002e40   0e14     MOVLW     0x14                                                                                            
002e42   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002e44   0e00     MOVLW     0x0                                                                                             
002e46   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002e48   cfee     MOVFF     0xfee,0xfde                                                                                     
002e4a   ffde                                                                                                               
002e4c   cfed     MOVFF     0xfed,0xfdd                                                                                     
002e4e   ffdd                                                                                                               
002e50   0e02     MOVLW     0x2            	unsigned long sum = 0;                                                          C:\first\v2.0\src\NCSSM\speedometer.c
002e52   6adb     CLRF      0xdb,0x0                                                                                        
002e54   0e03     MOVLW     0x3                                                                                             
002e56   6adb     CLRF      0xdb,0x0                                                                                        
002e58   0e04     MOVLW     0x4                                                                                             
002e5a   6adb     CLRF      0xdb,0x0                                                                                        
002e5c   0e05     MOVLW     0x5                                                                                             
002e5e   6adb     CLRF      0xdb,0x0                                                                                        
002e60   0e06     MOVLW     0x6            	unsigned int i = 0;                                                             C:\first\v2.0\src\NCSSM\speedometer.c
002e62   6adb     CLRF      0xdb,0x0                                                                                        
002e64   0e07     MOVLW     0x7                                                                                             
002e66   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
002e68   0e06     MOVLW     0x6            	for( i = 0; i < numSamples; ++i ) {                                             C:\first\v2.0\src\NCSSM\speedometer.c
002e6a   6adb     CLRF      0xdb,0x0                                                                                        
002e6c   0e07     MOVLW     0x7                                                                                             
002e6e   6adb     CLRF      0xdb,0x0                                                                                        
002e70   0e06     MOVLW     0x6                                                                                             
002e72   cfdb     MOVFF     0xfdb,0x2b                                                                                      
002e74   f02b                                                                                                               
002e76   0e07     MOVLW     0x7                                                                                             
002e78   cfdb     MOVFF     0xfdb,0x2c                                                                                      
002e7a   f02c                                                                                                               
002e7c   cfde     MOVFF     0xfde,0x2d                                                                                      
002e7e   f02d                                                                                                               
002e80   cfdd     MOVFF     0xfdd,0x2e                                                                                      
002e82   f02e                                                                                                               
002e84   502d     MOVF      0x2d,0x0,0x0                                                                                    
002e86   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
002e88   502e     MOVF      0x2e,0x0,0x0                                                                                    
002e8a   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
002e8c   e236     BC        0x2efa                                                                                          
002eee   0e06     MOVLW     0x6                                                                                             
002ef0   2adb     INCF      0xdb,0x1,0x0                                                                                    
002ef2   0e07     MOVLW     0x7                                                                                             
002ef4   e301     BNC       0x2ef8                                                                                          
002ef6   2adb     INCF      0xdb,0x1,0x0                                                                                    
002ef8   d7bb     BRA       0x2e70                                                                                          
002e8e   0efd     MOVLW     0xfd           		sum += instance->samples[i];                                                   C:\first\v2.0\src\NCSSM\speedometer.c
002e90   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002e92   ffe9                                                                                                               
002e94   0efe     MOVLW     0xfe                                                                                            
002e96   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002e98   ffea                                                                                                               
002e9a   cfe9     MOVFF     0xfe9,0x2f                                                                                      
002e9c   f02f                                                                                                               
002e9e   cfea     MOVFF     0xfea,0x30                                                                                      
002ea0   f030                                                                                                               
002ea2   0e04     MOVLW     0x4                                                                                             
002ea4   6e1d     MOVWF     0x1d,0x0                                                                                        
002ea6   6a1e     CLRF      0x1e,0x0                                                                                        
002ea8   0e06     MOVLW     0x6                                                                                             
002eaa   cfdb     MOVFF     0xfdb,0x22                                                                                      
002eac   f022                                                                                                               
002eae   0e07     MOVLW     0x7                                                                                             
002eb0   cfdb     MOVFF     0xfdb,0x23                                                                                      
002eb2   f023                                                                                                               
002eb4   ec33     CALL      0x6066,0x0                                                                                      
002eb6   f030                                                                                                               
002eb8   502f     MOVF      0x2f,0x0,0x0                                                                                    
002eba   241b     ADDWF     0x1b,0x0,0x0                                                                                    
002ebc   6ee9     MOVWF     0xe9,0x0                                                                                        
002ebe   5030     MOVF      0x30,0x0,0x0                                                                                    
002ec0   201c     ADDWFC    0x1c,0x0,0x0                                                                                    
002ec2   6eea     MOVWF     0xea,0x0                                                                                        
002ec4   cfee     MOVFF     0xfee,0x2b                                                                                      
002ec6   f02b                                                                                                               
002ec8   cfee     MOVFF     0xfee,0x2c                                                                                      
002eca   f02c                                                                                                               
002ecc   cfee     MOVFF     0xfee,0x2d                                                                                      
002ece   f02d                                                                                                               
002ed0   cfef     MOVFF     0xfef,0x2e                                                                                      
002ed2   f02e                                                                                                               
002ed4   50d9     MOVF      0xd9,0x0,0x0                                                                                    
002ed6   0f02     ADDLW     0x2                                                                                             
002ed8   6ee9     MOVWF     0xe9,0x0                                                                                        
002eda   cfda     MOVFF     0xfda,0xfea                                                                                     
002edc   ffea                                                                                                               
002ede   502b     MOVF      0x2b,0x0,0x0                                                                                    
002ee0   26ee     ADDWF     0xee,0x1,0x0                                                                                    
002ee2   502c     MOVF      0x2c,0x0,0x0                                                                                    
002ee4   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
002ee6   502d     MOVF      0x2d,0x0,0x0                                                                                    
002ee8   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
002eea   502e     MOVF      0x2e,0x0,0x0                                                                                    
002eec   22ee     ADDWFC    0xee,0x1,0x0                                                                                    
                                           	}                                                                               C:\first\v2.0\src\NCSSM\speedometer.c
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
002efa   cfde     MOVFF     0xfde,0x2b     	return (unsigned long)(sum/numSamples);                                         C:\first\v2.0\src\NCSSM\speedometer.c
002efc   f02b                                                                                                               
002efe   cfdd     MOVFF     0xfdd,0x2c                                                                                      
002f00   f02c                                                                                                               
002f02   6a2d     CLRF      0x2d,0x0                                                                                        
002f04   6a2e     CLRF      0x2e,0x0                                                                                        
002f06   c02b     MOVFF     0x2b,0x20                                                                                       
002f08   f020                                                                                                               
002f0a   c02c     MOVFF     0x2c,0x21                                                                                       
002f0c   f021                                                                                                               
002f0e   c02d     MOVFF     0x2d,0x22                                                                                       
002f10   f022                                                                                                               
002f12   c02e     MOVFF     0x2e,0x23                                                                                       
002f14   f023                                                                                                               
002f16   0e02     MOVLW     0x2                                                                                             
002f18   cfdb     MOVFF     0xfdb,0x1b                                                                                      
002f1a   f01b                                                                                                               
002f1c   0e03     MOVLW     0x3                                                                                             
002f1e   cfdb     MOVFF     0xfdb,0x1c                                                                                      
002f20   f01c                                                                                                               
002f22   0e04     MOVLW     0x4                                                                                             
002f24   cfdb     MOVFF     0xfdb,0x1d                                                                                      
002f26   f01d                                                                                                               
002f28   0e05     MOVLW     0x5                                                                                             
002f2a   cfdb     MOVFF     0xfdb,0x1e                                                                                      
002f2c   f01e                                                                                                               
002f2e   ec78     CALL      0x64f0,0x0                                                                                      
002f30   f032                                                                                                               
002f32   d000     BRA       0x2f34                                                                                          
002f34   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\speedometer.c
002f36   ffe1                                                                                                               
002f38   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002f3a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002f3c   ffd9                                                                                                               
002f3e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
002f40   cfd9     MOVFF     0xfd9,0xfe6    void avgSpeed_handleInterrupt( AvgSpeedometer *instance ) {                      C:\first\v2.0\src\NCSSM\speedometer.c
002f42   ffe6                                                                                                               
002f44   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
002f46   ffd9                                                                                                               
002f48   0e08     MOVLW     0x8                                                                                             
002f4a   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
002f4c   ec1a     CALL      0x6634,0x0     	unsigned long Tcurrent = driverClock_getElapsedTime();                          C:\first\v2.0\src\NCSSM\speedometer.c
002f4e   f033                                                                                                               
002f50   c01b     MOVFF     0x1b,0xfde                                                                                      
002f52   ffde                                                                                                               
002f54   c01c     MOVFF     0x1c,0xfde                                                                                      
002f56   ffde                                                                                                               
002f58   c01d     MOVFF     0x1d,0xfde                                                                                      
002f5a   ffde                                                                                                               
002f5c   c01e     MOVFF     0x1e,0xfdd                                                                                      
002f5e   ffdd                                                                                                               
002f60   52dd     MOVF      0xdd,0x1,0x0                                                                                    
002f62   52dd     MOVF      0xdd,0x1,0x0                                                                                    
002f64   cfd9     MOVFF     0xfd9,0xfe9    	unsigned long Tsample = Tcurrent - instance->Tlast;                             C:\first\v2.0\src\NCSSM\speedometer.c
002f66   ffe9                                                                                                               
002f68   cfda     MOVFF     0xfda,0xfea                                                                                     
002f6a   ffea                                                                                                               
002f6c   cfee     MOVFF     0xfee,0x2f                                                                                      
002f6e   f02f                                                                                                               
002f70   cfee     MOVFF     0xfee,0x30                                                                                      
002f72   f030                                                                                                               
002f74   cfee     MOVFF     0xfee,0x31                                                                                      
002f76   f031                                                                                                               
002f78   cfef     MOVFF     0xfef,0x32                                                                                      
002f7a   f032                                                                                                               
002f7c   0efd     MOVLW     0xfd                                                                                            
002f7e   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002f80   ffe9                                                                                                               
002f82   0efe     MOVLW     0xfe                                                                                            
002f84   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002f86   ffea                                                                                                               
002f88   0e18     MOVLW     0x18                                                                                            
002f8a   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
002f8c   0e00     MOVLW     0x0                                                                                             
002f8e   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
002f90   50ee     MOVF      0xee,0x0,0x0                                                                                    
002f92   5c2f     SUBWF     0x2f,0x0,0x0                                                                                    
002f94   6e2b     MOVWF     0x2b,0x0                                                                                        
002f96   50ee     MOVF      0xee,0x0,0x0                                                                                    
002f98   5830     SUBWFB    0x30,0x0,0x0                                                                                    
002f9a   6e2c     MOVWF     0x2c,0x0                                                                                        
002f9c   50ee     MOVF      0xee,0x0,0x0                                                                                    
002f9e   5831     SUBWFB    0x31,0x0,0x0                                                                                    
002fa0   6e2d     MOVWF     0x2d,0x0                                                                                        
002fa2   50ee     MOVF      0xee,0x0,0x0                                                                                    
002fa4   5832     SUBWFB    0x32,0x0,0x0                                                                                    
002fa6   6e2e     MOVWF     0x2e,0x0                                                                                        
002fa8   0e04     MOVLW     0x4                                                                                             
002faa   c02b     MOVFF     0x2b,0xfdb                                                                                      
002fac   ffdb                                                                                                               
002fae   0e05     MOVLW     0x5                                                                                             
002fb0   c02c     MOVFF     0x2c,0xfdb                                                                                      
002fb2   ffdb                                                                                                               
002fb4   0e06     MOVLW     0x6                                                                                             
002fb6   c02d     MOVFF     0x2d,0xfdb                                                                                      
002fb8   ffdb                                                                                                               
002fba   0e07     MOVLW     0x7                                                                                             
002fbc   c02e     MOVFF     0x2e,0xfdb                                                                                      
002fbe   ffdb                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
002fc0   0efd     MOVLW     0xfd           	storeSample( Tsample, instance );                                               C:\first\v2.0\src\NCSSM\speedometer.c
002fc2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002fc4   ffe6                                                                                                               
002fc6   0efe     MOVLW     0xfe                                                                                            
002fc8   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002fca   ffe6                                                                                                               
002fcc   50d9     MOVF      0xd9,0x0,0x0                                                                                    
002fce   0f04     ADDLW     0x4                                                                                             
002fd0   6ee9     MOVWF     0xe9,0x0                                                                                        
002fd2   cfda     MOVFF     0xfda,0xfea                                                                                     
002fd4   ffea                                                                                                               
002fd6   cfee     MOVFF     0xfee,0xfe6                                                                                     
002fd8   ffe6                                                                                                               
002fda   cfee     MOVFF     0xfee,0xfe6                                                                                     
002fdc   ffe6                                                                                                               
002fde   cfee     MOVFF     0xfee,0xfe6                                                                                     
002fe0   ffe6                                                                                                               
002fe2   cfef     MOVFF     0xfef,0xfe6                                                                                     
002fe4   ffe6                                                                                                               
002fe6   de77     RCALL     0x2cd6                                                                                          
002fe8   6ef5     MOVWF     0xf5,0x0                                                                                        
002fea   0e06     MOVLW     0x6                                                                                             
002fec   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
002fee   50f5     MOVF      0xf5,0x0,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
002ff0   0efd     MOVLW     0xfd           	instance->Tlast = Tcurrent;                                                     C:\first\v2.0\src\NCSSM\speedometer.c
002ff2   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002ff4   ffe9                                                                                                               
002ff6   0efe     MOVLW     0xfe                                                                                            
002ff8   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002ffa   ffea                                                                                                               
002ffc   0e18     MOVLW     0x18                                                                                            
002ffe   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003000   0e00     MOVLW     0x0                                                                                             
003002   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003004   cfdf     MOVFF     0xfdf,0xfee                                                                                     
003006   ffee                                                                                                               
003008   0e01     MOVLW     0x1                                                                                             
00300a   cfdb     MOVFF     0xfdb,0xfee                                                                                     
00300c   ffee                                                                                                               
00300e   0e02     MOVLW     0x2                                                                                             
003010   cfdb     MOVFF     0xfdb,0xfee                                                                                     
003012   ffee                                                                                                               
003014   0e03     MOVLW     0x3                                                                                             
003016   cfdb     MOVFF     0xfdb,0xfee                                                                                     
003018   ffee                                                                                                               
00301a   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\speedometer.c
00301c   ffe1                                                                                                               
00301e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003020   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003022   ffd9                                                                                                               
003024   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
003026   cfd9     MOVFF     0xfd9,0xfe6    unsigned int avgSpeed_getSpeed( AvgSpeedometer *instance ) {                     C:\first\v2.0\src\NCSSM\speedometer.c
003028   ffe6                                                                                                               
00302a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00302c   ffd9                                                                                                               
00302e   0e08     MOVLW     0x8                                                                                             
003030   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
003032   ec1a     CALL      0x6634,0x0     	unsigned long Tcurrent = driverClock_getElapsedTime();                          C:\first\v2.0\src\NCSSM\speedometer.c
003034   f033                                                                                                               
003036   c01b     MOVFF     0x1b,0xfde                                                                                      
003038   ffde                                                                                                               
00303a   c01c     MOVFF     0x1c,0xfde                                                                                      
00303c   ffde                                                                                                               
00303e   c01d     MOVFF     0x1d,0xfde                                                                                      
003040   ffde                                                                                                               
003042   c01e     MOVFF     0x1e,0xfdd                                                                                      
003044   ffdd                                                                                                               
003046   52dd     MOVF      0xdd,0x1,0x0                                                                                    
003048   52dd     MOVF      0xdd,0x1,0x0                                                                                    
00304a   cfd9     MOVFF     0xfd9,0xfe9    	signed long Tdelta = Tcurrent - instance->Tlast;                                C:\first\v2.0\src\NCSSM\speedometer.c
00304c   ffe9                                                                                                               
00304e   cfda     MOVFF     0xfda,0xfea                                                                                     
003050   ffea                                                                                                               
003052   cfee     MOVFF     0xfee,0x2f                                                                                      
003054   f02f                                                                                                               
003056   cfee     MOVFF     0xfee,0x30                                                                                      
003058   f030                                                                                                               
00305a   cfee     MOVFF     0xfee,0x31                                                                                      
00305c   f031                                                                                                               
00305e   cfef     MOVFF     0xfef,0x32                                                                                      
003060   f032                                                                                                               
003062   0efd     MOVLW     0xfd                                                                                            
003064   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
003066   ffe9                                                                                                               
003068   0efe     MOVLW     0xfe                                                                                            
00306a   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00306c   ffea                                                                                                               
00306e   0e18     MOVLW     0x18                                                                                            
003070   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003072   0e00     MOVLW     0x0                                                                                             
003074   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
003076   50ee     MOVF      0xee,0x0,0x0                                                                                    
003078   5c2f     SUBWF     0x2f,0x0,0x0                                                                                    
00307a   6e2b     MOVWF     0x2b,0x0                                                                                        
00307c   50ee     MOVF      0xee,0x0,0x0                                                                                    
00307e   5830     SUBWFB    0x30,0x0,0x0                                                                                    
003080   6e2c     MOVWF     0x2c,0x0                                                                                        
003082   50ee     MOVF      0xee,0x0,0x0                                                                                    
003084   5831     SUBWFB    0x31,0x0,0x0                                                                                    
003086   6e2d     MOVWF     0x2d,0x0                                                                                        
003088   50ee     MOVF      0xee,0x0,0x0                                                                                    
00308a   5832     SUBWFB    0x32,0x0,0x0                                                                                    
00308c   6e2e     MOVWF     0x2e,0x0                                                                                        
00308e   0e04     MOVLW     0x4                                                                                             
003090   c02b     MOVFF     0x2b,0xfdb                                                                                      
003092   ffdb                                                                                                               
003094   0e05     MOVLW     0x5                                                                                             
003096   c02c     MOVFF     0x2c,0xfdb                                                                                      
003098   ffdb                                                                                                               
00309a   0e06     MOVLW     0x6                                                                                             
00309c   c02d     MOVFF     0x2d,0xfdb                                                                                      
00309e   ffdb                                                                                                               
0030a0   0e07     MOVLW     0x7                                                                                             
0030a2   c02e     MOVFF     0x2e,0xfdb                                                                                      
0030a4   ffdb                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
0030a6   0e04     MOVLW     0x4            	if( (Tdelta > zeroVelocityTimerValue) || (Tcurrent < zeroVelocityTimerValue) ) { C:\first\v2.0\src\NCSSM\speedometer.c
0030a8   cfdb     MOVFF     0xfdb,0x1c                                                                                      
0030aa   f01c                                                                                                               
0030ac   0e05     MOVLW     0x5                                                                                             
0030ae   cfdb     MOVFF     0xfdb,0x1d                                                                                      
0030b0   f01d                                                                                                               
0030b2   0e06     MOVLW     0x6                                                                                             
0030b4   cfdb     MOVFF     0xfdb,0x1e                                                                                      
0030b6   f01e                                                                                                               
0030b8   0e07     MOVLW     0x7                                                                                             
0030ba   cfdb     MOVFF     0xfdb,0x1f                                                                                      
0030bc   f01f                                                                                                               
0030be   0e00     MOVLW     0x0                                                                                             
0030c0   181f     XORWF     0x1f,0x0,0x0                                                                                    
0030c2   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
0030c4   d002     BRA       0x30ca                                                                                          
0030c6   341f     RLCF      0x1f,0x0,0x0                                                                                    
0030c8   d009     BRA       0x30dc                                                                                          
0030ca   0ed0     MOVLW     0xd0                                                                                            
0030cc   80d8     BSF       0xd8,0x0,0x0                                                                                    
0030ce   541c     SUBFWB    0x1c,0x0,0x0                                                                                    
0030d0   0e07     MOVLW     0x7                                                                                             
0030d2   541d     SUBFWB    0x1d,0x0,0x0                                                                                    
0030d4   0e00     MOVLW     0x0                                                                                             
0030d6   541e     SUBFWB    0x1e,0x0,0x0                                                                                    
0030d8   0e00     MOVLW     0x0                                                                                             
0030da   541f     SUBFWB    0x1f,0x0,0x0                                                                                    
0030dc   e30d     BNC       0x30f8                                                                                          
0030de   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
0030e0   ffe9                                                                                                               
0030e2   cfda     MOVFF     0xfda,0xfea                                                                                     
0030e4   ffea                                                                                                               
0030e6   0ed0     MOVLW     0xd0                                                                                            
0030e8   5cee     SUBWF     0xee,0x0,0x0                                                                                    
0030ea   0e07     MOVLW     0x7                                                                                             
0030ec   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
0030ee   0e00     MOVLW     0x0                                                                                             
0030f0   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
0030f2   0e00     MOVLW     0x0                                                                                             
0030f4   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
0030f6   e210     BC        0x3118                                                                                          
0030f8   0efd     MOVLW     0xfd           		instance->reset = 1;                                                           C:\first\v2.0\src\NCSSM\speedometer.c
0030fa   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0030fc   ffe9                                                                                                               
0030fe   0efe     MOVLW     0xfe                                                                                            
003100   cfdb     MOVFF     0xfdb,0xfea                                                                                     
003102   ffea                                                                                                               
003104   0e1c     MOVLW     0x1c                                                                                            
003106   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
003108   0e00     MOVLW     0x0                                                                                             
00310a   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00310c   0e01     MOVLW     0x1                                                                                             
00310e   6eef     MOVWF     0xef,0x0                                                                                        
003110   6af3     CLRF      0xf3,0x0       		return 0;                                                                      C:\first\v2.0\src\NCSSM\speedometer.c
003112   6af4     CLRF      0xf4,0x0                                                                                        
003114   d03f     BRA       0x3194                                                                                          
003116   d03e     BRA       0x3194         	} else {                                                                        C:\first\v2.0\src\NCSSM\speedometer.c
003118   0efd     MOVLW     0xfd           		return (int)(instance->scaleFactor/computeAvg( instance ));                    C:\first\v2.0\src\NCSSM\speedometer.c
00311a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00311c   ffe6                                                                                                               
00311e   0efe     MOVLW     0xfe                                                                                            
003120   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003122   ffe6                                                                                                               
003124   de81     RCALL     0x2e28                                                                                          
003126   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003128   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00312a   c01b     MOVFF     0x1b,0x31                                                                                       
00312c   f031                                                                                                               
00312e   c01c     MOVFF     0x1c,0x32                                                                                       
003130   f032                                                                                                               
003132   c01d     MOVFF     0x1d,0x33                                                                                       
003134   f033                                                                                                               
003136   c01e     MOVFF     0x1e,0x34                                                                                       
003138   f034                                                                                                               
00313a   0efd     MOVLW     0xfd                                                                                            
00313c   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
00313e   ffe9                                                                                                               
003140   0efe     MOVLW     0xfe                                                                                            
003142   cfdb     MOVFF     0xfdb,0xfea                                                                                     
003144   ffea                                                                                                               
003146   0e1d     MOVLW     0x1d                                                                                            
003148   26e9     ADDWF     0xe9,0x1,0x0                                                                                    
00314a   0e00     MOVLW     0x0                                                                                             
00314c   22ea     ADDWFC    0xea,0x1,0x0                                                                                    
00314e   cfee     MOVFF     0xfee,0x2d                                                                                      
003150   f02d                                                                                                               
003152   cfee     MOVFF     0xfee,0x2e                                                                                      
003154   f02e                                                                                                               
003156   cfee     MOVFF     0xfee,0x2f                                                                                      
003158   f02f                                                                                                               
00315a   cfef     MOVFF     0xfef,0x30                                                                                      
00315c   f030                                                                                                               
00315e   c02d     MOVFF     0x2d,0x1b                                                                                       
003160   f01b                                                                                                               
003162   c02e     MOVFF     0x2e,0x1c                                                                                       
003164   f01c                                                                                                               
003166   c02f     MOVFF     0x2f,0x1d                                                                                       
003168   f01d                                                                                                               
00316a   c030     MOVFF     0x30,0x1e                                                                                       
00316c   f01e                                                                                                               
00316e   c031     MOVFF     0x31,0x20                                                                                       
003170   f020                                                                                                               
003172   c032     MOVFF     0x32,0x21                                                                                       
003174   f021                                                                                                               
003176   c033     MOVFF     0x33,0x22                                                                                       
003178   f022                                                                                                               
00317a   c034     MOVFF     0x34,0x23                                                                                       
00317c   f023                                                                                                               
00317e   ec78     CALL      0x64f0,0x0                                                                                      
003180   f032                                                                                                               
003182   c01b     MOVFF     0x1b,0x2b                                                                                       
003184   f02b                                                                                                               
003186   c01c     MOVFF     0x1c,0x2c                                                                                       
003188   f02c                                                                                                               
00318a   c02b     MOVFF     0x2b,0xff3                                                                                      
00318c   fff3                                                                                                               
00318e   c02c     MOVFF     0x2c,0xff4                                                                                      
003190   fff4                                                                                                               
003192   d000     BRA       0x3194                                                                                          
                                           	}                                                                               C:\first\v2.0\src\NCSSM\speedometer.c
003194   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\speedometer.c
003196   ffe1                                                                                                               
003198   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00319a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00319c   ffd9                                                                                                               
00319e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\speedometer.c
                                           #include "ifi_picdefs.h"                                                         C:\first\v2.0\src\NCSSM\driverClock.c
                                           #include "driverClock.h"                                                         C:\first\v2.0\src\NCSSM\driverClock.c
                                                                                                                            C:\first\v2.0\src\NCSSM\driverClock.c
                                           volatile unsigned long elapsedTime = 0;                                          C:\first\v2.0\src\NCSSM\driverClock.c
                                                                                                                            C:\first\v2.0\src\NCSSM\driverClock.c
                                           void driverClock_interruptHandler(void)                                          C:\first\v2.0\src\NCSSM\driverClock.c
                                           {                                                                                C:\first\v2.0\src\NCSSM\driverClock.c
                                           	// this function will be called when a timer 0 interrupt occurs                 C:\first\v2.0\src\NCSSM\driverClock.c
                                           	// Note:  Initilize_Timer_0() sets the prescaler to 8:1 and intitial value to 0x82 C:\first\v2.0\src\NCSSM\driverClock.c
                                           	//        and the counter is running immediately.                               C:\first\v2.0\src\NCSSM\driverClock.c
                                           	// 	  Increment the total elapsedTime variable and set the sampleAndHold flag.  C:\first\v2.0\src\NCSSM\driverClock.c
                                           	// 	  Setting sampleAndHold tells the PID Control routines its time to update   C:\first\v2.0\src\NCSSM\driverClock.c
                                           	// 	  with new control data  PID needs to run at a _consistent_ sample rate.    C:\first\v2.0\src\NCSSM\driverClock.c
                                           	// mcfalls - timer0 interrupt routine                                           C:\first\v2.0\src\NCSSM\driverClock.c
                                                                                                                            C:\first\v2.0\src\NCSSM\driverClock.c
                                           	                                                                                C:\first\v2.0\src\NCSSM\driverClock.c
006626   0101     MOVLB     0x1            	++elapsedTime;                                                                  C:\first\v2.0\src\NCSSM\driverClock.c
006628   2bec     INCF      0xec,0x1,0x1                                                                                    
00662a   0e00     MOVLW     0x0                                                                                             
00662c   23ed     ADDWFC    0xed,0x1,0x1                                                                                    
00662e   23ee     ADDWFC    0xee,0x1,0x1                                                                                    
006630   23ef     ADDWFC    0xef,0x1,0x1                                                                                    
006632   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\driverClock.c
                                                                                                                            C:\first\v2.0\src\NCSSM\driverClock.c
                                           unsigned long driverClock_getElapsedTime() {                                     C:\first\v2.0\src\NCSSM\driverClock.c
006634   c1ec     MOVFF     0x1ec,0x1b     	return elapsedTime;                                                             C:\first\v2.0\src\NCSSM\driverClock.c
006636   f01b                                                                                                               
006638   c1ed     MOVFF     0x1ed,0x1c                                                                                      
00663a   f01c                                                                                                               
00663c   c1ee     MOVFF     0x1ee,0x1d                                                                                      
00663e   f01d                                                                                                               
006640   c1ef     MOVFF     0x1ef,0x1e                                                                                      
006642   f01e                                                                                                               
006644   d000     BRA       0x6646                                                                                          
006646   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\driverClock.c
                                                                                                                            C:\first\v2.0\src\NCSSM\driverClock.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           #ifndef _FRC2004_                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                           	#include <stdio.h>                                                              C:\first\v2.0\src\NCSSM\interrupts.c
                                           	#include "user_Serialdrv.h"                                                     C:\first\v2.0\src\NCSSM\interrupts.c
                                           #else                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           	#include "printf_lib.h"                                                         C:\first\v2.0\src\NCSSM\interrupts.c
                                           #endif                                                                           C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           #include <timers.h>                                                              C:\first\v2.0\src\NCSSM\interrupts.c
                                           #include "ifi_aliases.h"                                                         C:\first\v2.0\src\NCSSM\interrupts.c
                                           #include "ifi_default.h"                                                         C:\first\v2.0\src\NCSSM\interrupts.c
                                           #include "ifi_utilities.h"                                                       C:\first\v2.0\src\NCSSM\interrupts.c
                                           #include "driverClock.h"                                                         C:\first\v2.0\src\NCSSM\interrupts.c
                                           #include "speedometer.h"                                                         C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           void InterruptHandlerLow (void);  /* DO NOT CHANGE! */                           C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           /******************************************************************************* C:\first\v2.0\src\NCSSM\interrupts.c
                                           *                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                           *	FUNCTION:		Initialize_Timer_1()                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                           *                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                           *	PURPOSE:		Initializes the timer 1 hardware.                                    C:\first\v2.0\src\NCSSM\interrupts.c
                                           *                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                           *	CALLED FROM:	user_routines.c/User_Initialization()                             C:\first\v2.0\src\NCSSM\interrupts.c
                                           *                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                           *	PARAMETERS:		None                                                              C:\first\v2.0\src\NCSSM\interrupts.c
                                           *                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                           *	RETURNS:		Nothing                                                              C:\first\v2.0\src\NCSSM\interrupts.c
                                           *                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                           *	COMMENTS:		Place "#include "interrupts.h" in the includes section              C:\first\v2.0\src\NCSSM\interrupts.c
                                           *					of user_routines.c then call Initialize_Timer_1() in                       C:\first\v2.0\src\NCSSM\interrupts.c
                                           *					user_routines.c/User_Initialization().                                     C:\first\v2.0\src\NCSSM\interrupts.c
                                           *                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                           *					Timer 1 documentation starts on page 135 of the data sheet.                C:\first\v2.0\src\NCSSM\interrupts.c
                                           *                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                           *******************************************************************************/ C:\first\v2.0\src\NCSSM\interrupts.c
                                           void Initialize_Timer_1(void)                                                    C:\first\v2.0\src\NCSSM\interrupts.c
                                           {                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
005d54   0eeb     MOVLW     0xeb           	printf("initializing timer1...");                                               C:\first\v2.0\src\NCSSM\interrupts.c
005d56   6e2b     MOVWF     0x2b,0x0                                                                                        
005d58   0e57     MOVLW     0x57                                                                                            
005d5a   6e2c     MOVWF     0x2c,0x0                                                                                        
005d5c   6a2d     CLRF      0x2d,0x0                                                                                        
005d5e   c02b     MOVFF     0x2b,0xfe6                                                                                      
005d60   ffe6                                                                                                               
005d62   c02c     MOVFF     0x2c,0xfe6                                                                                      
005d64   ffe6                                                                                                               
005d66   c02d     MOVFF     0x2d,0xfe6                                                                                      
005d68   ffe6                                                                                                               
005d6a   ecec     CALL      0x61d8,0x0                                                                                      
005d6c   f030                                                                                                               
005d6e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005d70   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005d72   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
005d74   0e82     MOVLW     0x82           	TMR1L = 0x82;			// least significant 8-bits of the timer 1 register (this is readable and writable) C:\first\v2.0\src\NCSSM\interrupts.c
005d76   6ece     MOVWF     0xce,0x0                                                                                        
005d78   68cf     SETF      0xcf,0x0       	TMR1H = 0xFF;			// most significant 8-bits of the timer 1 register (this is readable and writable) C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//                                                                        C:\first\v2.0\src\NCSSM\interrupts.c
005d7a   88cd     BSF       0xcd,0x4,0x0   	T1CONbits.T1CKPS0 = 1;	// T1CSP1 T1CSP0                                         C:\first\v2.0\src\NCSSM\interrupts.c
005d7c   8acd     BSF       0xcd,0x5,0x0   	T1CONbits.T1CKPS1 = 1;	//   0      0		1:1 prescaler (clock=10MHz/each tick=100ns) C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//   0      1		1:2 prescaler (clock=5MHz/each tick=200ns)                 C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//   1      0		1:4 prescaler (clock=2.5MHz/each tick=400ns)               C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//   1      1		1:8 prescaler (clock=1.25MHz/each tick=800ns)              C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//                                                                        C:\first\v2.0\src\NCSSM\interrupts.c
005d7e   96cd     BCF       0xcd,0x3,0x0   	T1CONbits.T1OSCEN = 0;	// 0: timer 1 oscillator disabled (leave at 0 to allow the use of an external clock) C:\first\v2.0\src\NCSSM\interrupts.c
                                           							// 1: timer 1 oscillator enabled (can't be used because of hardware constraints) C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//                                                                        C:\first\v2.0\src\NCSSM\interrupts.c
005d80   92cd     BCF       0xcd,0x1,0x0   	T1CONbits.TMR1CS = 0;	// 0: use the internal clock                              C:\first\v2.0\src\NCSSM\interrupts.c
                                           							// 1: use an external clock on RC0/T1OSO/T13CLK (rc_dig_in14 on full-size controller) C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//                                                                        C:\first\v2.0\src\NCSSM\interrupts.c
005d82   8ecd     BSF       0xcd,0x7,0x0   	T1CONbits.RD16 = 1;		// 0: timer 1 register operations are done in two 8-bit accesses C:\first\v2.0\src\NCSSM\interrupts.c
                                           							// 1: timer 1 register operations are done in one 16-bit access           C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//    In this mode, reading TMR1L will latch a copy of TMR1H into a buffer C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//    mapped to the TMR1H memory address. Conversely, a write to the buffer C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//    followed by a write to the TMR1L register will update the entire 16-bit C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//    timer at once. This solves the problem where the timer may overflow C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//    between two 8-bit accesses. Here's an example of how to do a 16-bit read: C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//                                                                        C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//    unsigned char Temp_Buf; // 8-bit temporary buffer                   C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//    unsigned int Timer_Snapshot; // 16-bit variable                     C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//                                                                        C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//    Temp_Buf = TMR1L; // TMR1L must be read before TMR1H                C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//    Timer_Snapshot = TMR1H;                                             C:\first\v2.0\src\NCSSM\interrupts.c
                                           		 					//    Timer_Snapshot <<= 8; // move TMR1H data to the upper half of the variable C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//    Timer_Snapshot += Temp_Buf; // we now have all sixteen bits         C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//                                                                        C:\first\v2.0\src\NCSSM\interrupts.c
005d84   909f     BCF       0x9f,0x0,0x0   	IPR1bits.TMR1IP = 0;	// 0: timer 1 overflow interrupt is low priority (leave at 0 on IFI controllers) C:\first\v2.0\src\NCSSM\interrupts.c
                                           							// 1: timer 1 overflow interrupt is high priority                         C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//                                                                        C:\first\v2.0\src\NCSSM\interrupts.c
005d86   909e     BCF       0x9e,0x0,0x0   	PIR1bits.TMR1IF = 0;	// 0: timer 1 overflow hasn't happened (set to 0 before enabling the interrupt) C:\first\v2.0\src\NCSSM\interrupts.c
                                           							// 1: timer 1 overflow has happened                                       C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//                                                                        C:\first\v2.0\src\NCSSM\interrupts.c
005d88   809d     BSF       0x9d,0x0,0x0   	PIE1bits.TMR1IE = 1;	// 0: disable timer 1 interrupt on overflow (i.e., a transition from FFFF->0) C:\first\v2.0\src\NCSSM\interrupts.c
                                           							// 1: enable timer 1 interrupt on overflow (i.e., a transition from FFFF->0) C:\first\v2.0\src\NCSSM\interrupts.c
                                           							//	                                                                       C:\first\v2.0\src\NCSSM\interrupts.c
005d8a   80cd     BSF       0xcd,0x0,0x0   	T1CONbits.TMR1ON = 1;	// 0: timer 1 is disabled                                 C:\first\v2.0\src\NCSSM\interrupts.c
                                           							// 1: timer 1 is enabled (running)                                        C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
005d8c   0ee4     MOVLW     0xe4           	printf("done.\r");                                                              C:\first\v2.0\src\NCSSM\interrupts.c
005d8e   6e2b     MOVWF     0x2b,0x0                                                                                        
005d90   0e57     MOVLW     0x57                                                                                            
005d92   6e2c     MOVWF     0x2c,0x0                                                                                        
005d94   6a2d     CLRF      0x2d,0x0                                                                                        
005d96   c02b     MOVFF     0x2b,0xfe6                                                                                      
005d98   ffe6                                                                                                               
005d9a   c02c     MOVFF     0x2c,0xfe6                                                                                      
005d9c   ffe6                                                                                                               
005d9e   c02d     MOVFF     0x2d,0xfe6                                                                                      
005da0   ffe6                                                                                                               
005da2   ecec     CALL      0x61d8,0x0                                                                                      
005da4   f030                                                                                                               
005da6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005da8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005daa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005dac   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           static void InitializeInterrupt1( void ) {                                       C:\first\v2.0\src\NCSSM\interrupts.c
005dae   0ec7     MOVLW     0xc7           	printf("...interrupt 1 initialize...");                                         C:\first\v2.0\src\NCSSM\interrupts.c
005db0   6e2b     MOVWF     0x2b,0x0                                                                                        
005db2   0e57     MOVLW     0x57                                                                                            
005db4   6e2c     MOVWF     0x2c,0x0                                                                                        
005db6   6a2d     CLRF      0x2d,0x0                                                                                        
005db8   c02b     MOVFF     0x2b,0xfe6                                                                                      
005dba   ffe6                                                                                                               
005dbc   c02c     MOVFF     0x2c,0xfe6                                                                                      
005dbe   ffe6                                                                                                               
005dc0   c02d     MOVFF     0x2d,0xfe6                                                                                      
005dc2   ffe6                                                                                                               
005dc4   ecec     CALL      0x61d8,0x0                                                                                      
005dc6   f030                                                                                                               
005dc8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005dca   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005dcc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           	// initialize external interrupt 1 (INT2 on user 18F8520)                       C:\first\v2.0\src\NCSSM\interrupts.c
005dce   8493     BSF       0x93,0x2,0x0   	TRISBbits.TRISB2 = 1;		// make sure the RB2/INT2 pin is configured as an input [108] C:\first\v2.0\src\NCSSM\interrupts.c
                                           								//                                                                       C:\first\v2.0\src\NCSSM\interrupts.c
005dd0   9ef0     BCF       0xf0,0x7,0x0   	INTCON3bits.INT2IP = 0;		// 0: interrupt 1 is low priority (leave at 0 for IFI controllers) [91] C:\first\v2.0\src\NCSSM\interrupts.c
                                           								// 1: interrupt 1 is high priority                                       C:\first\v2.0\src\NCSSM\interrupts.c
                                           								//                                                                       C:\first\v2.0\src\NCSSM\interrupts.c
005dd2   98f1     BCF       0xf1,0x4,0x0   	INTCON2bits.INTEDG2 = 0;	// 0: trigger on the falling-edge [90]                 C:\first\v2.0\src\NCSSM\interrupts.c
                                           								// 1: trigger on the rising-edge                                         C:\first\v2.0\src\NCSSM\interrupts.c
                                           								//                                                                       C:\first\v2.0\src\NCSSM\interrupts.c
005dd4   92f0     BCF       0xf0,0x1,0x0   	INTCON3bits.INT2IF = 0;		// 0: external interrupt 1 hasn't happened (set to 0 before enabling the interrupt) [91] C:\first\v2.0\src\NCSSM\interrupts.c
                                           								// 1: external interrupt 1 has happened                                  C:\first\v2.0\src\NCSSM\interrupts.c
                                           								//                                                                       C:\first\v2.0\src\NCSSM\interrupts.c
005dd6   98f0     BCF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 0;		// 0: disable interrupt	1 [91]                         C:\first\v2.0\src\NCSSM\interrupts.c
                                           								// 1: enable interrupt 1                                                 C:\first\v2.0\src\NCSSM\interrupts.c
005dd8   0ee4     MOVLW     0xe4           	printf("done.\r");                                                              C:\first\v2.0\src\NCSSM\interrupts.c
005dda   6e2b     MOVWF     0x2b,0x0                                                                                        
005ddc   0e57     MOVLW     0x57                                                                                            
005dde   6e2c     MOVWF     0x2c,0x0                                                                                        
005de0   6a2d     CLRF      0x2d,0x0                                                                                        
005de2   c02b     MOVFF     0x2b,0xfe6                                                                                      
005de4   ffe6                                                                                                               
005de6   c02c     MOVFF     0x2c,0xfe6                                                                                      
005de8   ffe6                                                                                                               
005dea   c02d     MOVFF     0x2d,0xfe6                                                                                      
005dec   ffe6                                                                                                               
005dee   ecec     CALL      0x61d8,0x0                                                                                      
005df0   f030                                                                                                               
005df2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005df4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005df6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005df8   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           static void InitializeInterrupt2( void ) {                                       C:\first\v2.0\src\NCSSM\interrupts.c
005dfa   0eaa     MOVLW     0xaa           	printf("...interrupt 2 initialize...");                                         C:\first\v2.0\src\NCSSM\interrupts.c
005dfc   6e2b     MOVWF     0x2b,0x0                                                                                        
005dfe   0e57     MOVLW     0x57                                                                                            
005e00   6e2c     MOVWF     0x2c,0x0                                                                                        
005e02   6a2d     CLRF      0x2d,0x0                                                                                        
005e04   c02b     MOVFF     0x2b,0xfe6                                                                                      
005e06   ffe6                                                                                                               
005e08   c02c     MOVFF     0x2c,0xfe6                                                                                      
005e0a   ffe6                                                                                                               
005e0c   c02d     MOVFF     0x2d,0xfe6                                                                                      
005e0e   ffe6                                                                                                               
005e10   ecec     CALL      0x61d8,0x0                                                                                      
005e12   f030                                                                                                               
005e14   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005e16   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005e18   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           	// initialize external interrupt 2 (INT3 on user 18F8520)                       C:\first\v2.0\src\NCSSM\interrupts.c
005e1a   8693     BSF       0x93,0x3,0x0   	TRISBbits.TRISB3 = 1;		// make sure the RB3/CCP2/INT3 pin is configured as an input [108] C:\first\v2.0\src\NCSSM\interrupts.c
                                           								//                                                                       C:\first\v2.0\src\NCSSM\interrupts.c
005e1c   92f1     BCF       0xf1,0x1,0x0   	INTCON2bits.INT3IP = 0;		// 0: interrupt 2 is low priority (leave at 0 for IFI controllers) [90] C:\first\v2.0\src\NCSSM\interrupts.c
                                           								// 1: interrupt 2 is high priority                                       C:\first\v2.0\src\NCSSM\interrupts.c
                                           								//                                                                       C:\first\v2.0\src\NCSSM\interrupts.c
005e1e   96f1     BCF       0xf1,0x3,0x0   	INTCON2bits.INTEDG3 = 0;	// 0: trigger on the falling-edge [90]                 C:\first\v2.0\src\NCSSM\interrupts.c
                                           								// 1: trigger on the rising-edge                                         C:\first\v2.0\src\NCSSM\interrupts.c
                                           								//                                                                       C:\first\v2.0\src\NCSSM\interrupts.c
005e20   94f0     BCF       0xf0,0x2,0x0   	INTCON3bits.INT3IF = 0;		// 0: external interrupt 2 hasn't happened (set to 0 before enabling the interrupt) [91] C:\first\v2.0\src\NCSSM\interrupts.c
                                           								// 1: external interrupt 2 has happened                                  C:\first\v2.0\src\NCSSM\interrupts.c
                                           								//                                                                       C:\first\v2.0\src\NCSSM\interrupts.c
005e22   9af0     BCF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 0;		// 0: disable interrupt	2 [91]                         C:\first\v2.0\src\NCSSM\interrupts.c
                                           								// 1: enable interrupt 2                                                 C:\first\v2.0\src\NCSSM\interrupts.c
005e24   0ee4     MOVLW     0xe4           	printf("done.\r");                                                              C:\first\v2.0\src\NCSSM\interrupts.c
005e26   6e2b     MOVWF     0x2b,0x0                                                                                        
005e28   0e57     MOVLW     0x57                                                                                            
005e2a   6e2c     MOVWF     0x2c,0x0                                                                                        
005e2c   6a2d     CLRF      0x2d,0x0                                                                                        
005e2e   c02b     MOVFF     0x2b,0xfe6                                                                                      
005e30   ffe6                                                                                                               
005e32   c02c     MOVFF     0x2c,0xfe6                                                                                      
005e34   ffe6                                                                                                               
005e36   c02d     MOVFF     0x2d,0xfe6                                                                                      
005e38   ffe6                                                                                                               
005e3a   ecec     CALL      0x61d8,0x0                                                                                      
005e3c   f030                                                                                                               
005e3e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005e40   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005e42   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005e44   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           /******************************************************************************* C:\first\v2.0\src\NCSSM\interrupts.c
                                           * FUNCTION NAME: InterruptVectorLow                                              C:\first\v2.0\src\NCSSM\interrupts.c
                                           * PURPOSE:       Low priority interrupt vector                                   C:\first\v2.0\src\NCSSM\interrupts.c
                                           * CALLED FROM:   nowhere by default                                              C:\first\v2.0\src\NCSSM\interrupts.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           * DO NOT MODIFY OR DELETE THIS FUNCTION                                          C:\first\v2.0\src\NCSSM\interrupts.c
                                           *******************************************************************************/ C:\first\v2.0\src\NCSSM\interrupts.c
                                           #pragma code InterruptVectorLow = LOW_INT_VECTOR                                 C:\first\v2.0\src\NCSSM\interrupts.c
                                           void InterruptVectorLow (void)                                                   C:\first\v2.0\src\NCSSM\interrupts.c
                                           {                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                             _asm                                                                           C:\first\v2.0\src\NCSSM\interrupts.c
000818   ef23     GOTO      0x5e46             goto InterruptHandlerLow  /*jump to interrupt routine*/                      C:\first\v2.0\src\NCSSM\interrupts.c
00081a   f02f                                                                                                               
                                             _endasm                                                                        C:\first\v2.0\src\NCSSM\interrupts.c
00081c   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           /******************************************************************************* C:\first\v2.0\src\NCSSM\interrupts.c
                                           * FUNCTION NAME: InterruptHandlerLow                                             C:\first\v2.0\src\NCSSM\interrupts.c
                                           * PURPOSE:       Low priority interrupt handler                                  C:\first\v2.0\src\NCSSM\interrupts.c
                                           * If you want to use these external low priority interrupts or any of the        C:\first\v2.0\src\NCSSM\interrupts.c
                                           * peripheral interrupts then you must enable them in your initialization         C:\first\v2.0\src\NCSSM\interrupts.c
                                           * routine.  Innovation First, Inc. will not provide support for using these      C:\first\v2.0\src\NCSSM\interrupts.c
                                           * interrupts, so be careful.  There is great potential for glitchy code if good  C:\first\v2.0\src\NCSSM\interrupts.c
                                           * interrupt programming practices are not followed.  Especially read p. 28 of    C:\first\v2.0\src\NCSSM\interrupts.c
                                           * the "MPLAB(R) C18 C Compiler User's Guide" for information on context saving.  C:\first\v2.0\src\NCSSM\interrupts.c
                                           * CALLED FROM:   this file, InterruptVectorLow routine                           C:\first\v2.0\src\NCSSM\interrupts.c
                                           * ARGUMENTS:     none                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           * RETURNS:       void                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           *******************************************************************************/ C:\first\v2.0\src\NCSSM\interrupts.c
                                           #pragma code                                                                     C:\first\v2.0\src\NCSSM\interrupts.c
                                           #pragma interruptlow InterruptHandlerLow save=PROD /* You may want to save additional symbols. */ C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
005e46   cfd8     MOVFF     0xfd8,0xfe4    void InterruptHandlerLow ()                                                      C:\first\v2.0\src\NCSSM\interrupts.c
005e48   ffe4                                                                                                               
005e4a   cfe0     MOVFF     0xfe0,0xfe4                                                                                     
005e4c   ffe4                                                                                                               
005e4e   6ee4     MOVWF     0xe4,0x0                                                                                        
005e50   cfda     MOVFF     0xfda,0xfe4                                                                                     
005e52   ffe4                                                                                                               
005e54   cfe2     MOVFF     0xfe2,0xfda                                                                                     
005e56   ffda                                                                                                               
005e58   cfe9     MOVFF     0xfe9,0xfe4                                                                                     
005e5a   ffe4                                                                                                               
005e5c   cfea     MOVFF     0xfea,0xfe4                                                                                     
005e5e   ffe4                                                                                                               
005e60   cff3     MOVFF     0xff3,0xfe4                                                                                     
005e62   ffe4                                                                                                               
005e64   cff4     MOVFF     0xff4,0xfe4                                                                                     
005e66   ffe4                                                                                                               
005e68   52e6     MOVF      0xe6,0x1,0x0                                                                                    
005e6a   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
005e6c   ffe6                                                                                                               
005e6e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005e70   ffd9                                                                                                               
005e72   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                            unsigned char int_byte;                                                         C:\first\v2.0\src\NCSSM\interrupts.c
                                             //mcfalls - ADded timer interrupt handlers - currently only using timer0       C:\first\v2.0\src\NCSSM\interrupts.c
005e74   509e     MOVF      0x9e,0x0,0x0   	if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) // timer 1 interrupt?                   C:\first\v2.0\src\NCSSM\interrupts.c
005e76   0b01     ANDLW     0x1                                                                                             
005e78   e00e     BZ        0x5e96                                                                                          
005e7a   509d     MOVF      0x9d,0x0,0x0                                                                                    
005e7c   0b01     ANDLW     0x1                                                                                             
005e7e   e00b     BZ        0x5e96                                                                                          
                                           	{                                                                               C:\first\v2.0\src\NCSSM\interrupts.c
005e80   0e82     MOVLW     0x82           		WriteTimer1( 0xFF82 );                                                         C:\first\v2.0\src\NCSSM\interrupts.c
005e82   6ee6     MOVWF     0xe6,0x0                                                                                        
005e84   68e6     SETF      0xe6,0x0                                                                                        
005e86   ecbb     CALL      0x6576,0x0                                                                                      
005e88   f032                                                                                                               
005e8a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005e8c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005e8e   ec13     CALL      0x6626,0x0     		driverClock_interruptHandler();                                                C:\first\v2.0\src\NCSSM\interrupts.c
005e90   f033                                                                                                               
005e92   909e     BCF       0x9e,0x0,0x0   		PIR1bits.TMR1IF = 0; // clear the timer 1 interrupt flag [92]                  C:\first\v2.0\src\NCSSM\interrupts.c
                                           	}                                                                               C:\first\v2.0\src\NCSSM\interrupts.c
005e94   d022     BRA       0x5eda         	else if (INTCON3bits.INT2IF && INTCON3bits.INT2IE)       /* The INT2 pin is RB2/DIG I/O 1. */ C:\first\v2.0\src\NCSSM\interrupts.c
005e96   50f0     MOVF      0xf0,0x0,0x0                                                                                    
005e98   0b02     ANDLW     0x2                                                                                             
005e9a   e00d     BZ        0x5eb6                                                                                          
005e9c   50f0     MOVF      0xf0,0x0,0x0                                                                                    
005e9e   0b10     ANDLW     0x10                                                                                            
005ea0   e00a     BZ        0x5eb6                                                                                          
                                           	{                                                                               C:\first\v2.0\src\NCSSM\interrupts.c
                                           #ifndef _USE_AVGSPEED                                                            C:\first\v2.0\src\NCSSM\interrupts.c
005ea2   0e00     MOVLW     0x0            		speedometer_handleEncoderClick( &speedometer_left );                           C:\first\v2.0\src\NCSSM\interrupts.c
005ea4   6ee6     MOVWF     0xe6,0x0                                                                                        
005ea6   0e01     MOVLW     0x1                                                                                             
005ea8   6ee6     MOVWF     0xe6,0x0                                                                                        
005eaa   ec2d     CALL      0x2a5a,0x0                                                                                      
005eac   f015                                                                                                               
005eae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005eb0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #else                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           		avgSpeed_handleInterrupt( &avgSpeed_left );                                    C:\first\v2.0\src\NCSSM\interrupts.c
                                           #endif                                                                           C:\first\v2.0\src\NCSSM\interrupts.c
005eb2   92f0     BCF       0xf0,0x1,0x0   		INTCON3bits.INT2IF = 0;                                                        C:\first\v2.0\src\NCSSM\interrupts.c
                                           	}                                                                               C:\first\v2.0\src\NCSSM\interrupts.c
005eb4   d012     BRA       0x5eda         	else if (INTCON3bits.INT3IF && INTCON3bits.INT3IE)  /* The INT3 pin is RB3/DIG I/O 2. */ C:\first\v2.0\src\NCSSM\interrupts.c
005eb6   50f0     MOVF      0xf0,0x0,0x0                                                                                    
005eb8   0b04     ANDLW     0x4                                                                                             
005eba   e00d     BZ        0x5ed6                                                                                          
005ebc   50f0     MOVF      0xf0,0x0,0x0                                                                                    
005ebe   0b20     ANDLW     0x20                                                                                            
005ec0   e00a     BZ        0x5ed6                                                                                          
                                           	{                                                                               C:\first\v2.0\src\NCSSM\interrupts.c
                                           #ifndef _USE_AVGSPEED                                                            C:\first\v2.0\src\NCSSM\interrupts.c
005ec2   0e14     MOVLW     0x14           		speedometer_handleEncoderClick( &speedometer_right );                          C:\first\v2.0\src\NCSSM\interrupts.c
005ec4   6ee6     MOVWF     0xe6,0x0                                                                                        
005ec6   0e01     MOVLW     0x1                                                                                             
005ec8   6ee6     MOVWF     0xe6,0x0                                                                                        
005eca   ec2d     CALL      0x2a5a,0x0                                                                                      
005ecc   f015                                                                                                               
005ece   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005ed0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           #else                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           		avgSpeed_handleInterrupt( &avgSpeed_right );                                   C:\first\v2.0\src\NCSSM\interrupts.c
                                           #endif                                                                           C:\first\v2.0\src\NCSSM\interrupts.c
005ed2   94f0     BCF       0xf0,0x2,0x0   		INTCON3bits.INT3IF = 0;                                                        C:\first\v2.0\src\NCSSM\interrupts.c
                                           	}                                                                               C:\first\v2.0\src\NCSSM\interrupts.c
005ed4   d002     BRA       0x5eda         	else                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           	{                                                                               C:\first\v2.0\src\NCSSM\interrupts.c
                                           #ifndef _FRC2004_                                                                C:\first\v2.0\src\NCSSM\interrupts.c
005ed6   eccc     CALL      0x4998,0x0     		CheckUartInts();    /* For Dynamic Debug Tool or buffered printf features. */  C:\first\v2.0\src\NCSSM\interrupts.c
005ed8   f024                                                                                                               
                                           #endif                                                                           C:\first\v2.0\src\NCSSM\interrupts.c
                                           	}                                                                               C:\first\v2.0\src\NCSSM\interrupts.c
005eda   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
005edc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005ede   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005ee0   ffd9                                                                                                               
005ee2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005ee4   cfe5     MOVFF     0xfe5,0xff4                                                                                     
005ee6   fff4                                                                                                               
005ee8   cfe5     MOVFF     0xfe5,0xff3                                                                                     
005eea   fff3                                                                                                               
005eec   cfe5     MOVFF     0xfe5,0xfea                                                                                     
005eee   ffea                                                                                                               
005ef0   cfe5     MOVFF     0xfe5,0xfe9                                                                                     
005ef2   ffe9                                                                                                               
005ef4   cfe5     MOVFF     0xfe5,0xfda                                                                                     
005ef6   ffda                                                                                                               
005ef8   50e5     MOVF      0xe5,0x0,0x0                                                                                    
005efa   cfe5     MOVFF     0xfe5,0xfe0                                                                                     
005efc   ffe0                                                                                                               
005efe   cfe5     MOVFF     0xfe5,0xfd8                                                                                     
005f00   ffd8                                                                                                               
005f02   0010     RETFIE    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           void interrupts_moduleInitialize(void)                                           C:\first\v2.0\src\NCSSM\interrupts.c
                                           {                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
005f04   0e8b     MOVLW     0x8b           	printf("interrupts_moduleInitialize()\r");                                      C:\first\v2.0\src\NCSSM\interrupts.c
005f06   6e2b     MOVWF     0x2b,0x0                                                                                        
005f08   0e57     MOVLW     0x57                                                                                            
005f0a   6e2c     MOVWF     0x2c,0x0                                                                                        
005f0c   6a2d     CLRF      0x2d,0x0                                                                                        
005f0e   c02b     MOVFF     0x2b,0xfe6                                                                                      
005f10   ffe6                                                                                                               
005f12   c02c     MOVFF     0x2c,0xfe6                                                                                      
005f14   ffe6                                                                                                               
005f16   c02d     MOVFF     0x2d,0xfe6                                                                                      
005f18   ffe6                                                                                                               
005f1a   ecec     CALL      0x61d8,0x0                                                                                      
005f1c   f030                                                                                                               
005f1e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005f20   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005f22   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
005f24   df17     RCALL     0x5d54         	Initialize_Timer_1();                                                           C:\first\v2.0\src\NCSSM\interrupts.c
005f26   df43     RCALL     0x5dae         	InitializeInterrupt1();                                                         C:\first\v2.0\src\NCSSM\interrupts.c
005f28   df68     RCALL     0x5dfa         	InitializeInterrupt2();                                                         C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
005f2a   0e65     MOVLW     0x65           	printf("interrupts_moduleInitialize()...done\r");                               C:\first\v2.0\src\NCSSM\interrupts.c
005f2c   6e2b     MOVWF     0x2b,0x0                                                                                        
005f2e   0e57     MOVLW     0x57                                                                                            
005f30   6e2c     MOVWF     0x2c,0x0                                                                                        
005f32   6a2d     CLRF      0x2d,0x0                                                                                        
005f34   c02b     MOVFF     0x2b,0xfe6                                                                                      
005f36   ffe6                                                                                                               
005f38   c02c     MOVFF     0x2c,0xfe6                                                                                      
005f3a   ffe6                                                                                                               
005f3c   c02d     MOVFF     0x2d,0xfe6                                                                                      
005f3e   ffe6                                                                                                               
005f40   ecec     CALL      0x61d8,0x0                                                                                      
005f42   f030                                                                                                               
005f44   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005f46   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005f48   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005f4a   0012     RETURN    0x0            }						                                                                          C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           void interrupts_enable(void) {                                                   C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                             // INT 1                                                                       C:\first\v2.0\src\NCSSM\interrupts.c
005f4c   88f0     BSF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 1;		// 0: disable interrupt	1 [91]                         C:\first\v2.0\src\NCSSM\interrupts.c
                                           								// 1: enable interrupt 1                                                 C:\first\v2.0\src\NCSSM\interrupts.c
                                             // INT 2                                                                       C:\first\v2.0\src\NCSSM\interrupts.c
005f4e   8af0     BSF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 1;		// 0: disable interrupt	2 [91]                         C:\first\v2.0\src\NCSSM\interrupts.c
                                           								// 1: enable interrupt 2                                                 C:\first\v2.0\src\NCSSM\interrupts.c
005f50   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           void interrupts_disable( void ) {                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                                                                                                            C:\first\v2.0\src\NCSSM\interrupts.c
                                           	// INT 1                                                                        C:\first\v2.0\src\NCSSM\interrupts.c
005f52   98f0     BCF       0xf0,0x4,0x0   	INTCON3bits.INT2IE = 0;		// 0: disable interrupt	1 [91]                         C:\first\v2.0\src\NCSSM\interrupts.c
                                           								// 1: enable interrupt 1                                                 C:\first\v2.0\src\NCSSM\interrupts.c
                                           	// INT 2                                                                        C:\first\v2.0\src\NCSSM\interrupts.c
005f54   9af0     BCF       0xf0,0x5,0x0   	INTCON3bits.INT3IE = 0;		// 0: disable interrupt	2 [91]                         C:\first\v2.0\src\NCSSM\interrupts.c
                                           								// 1: enable interrupt 2                                                 C:\first\v2.0\src\NCSSM\interrupts.c
005f56   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\interrupts.c
                                           /***************************************                                         C:\first\v2.0\src\NCSSM\arm.c
                                            *  Arm Driver                                                                   C:\first\v2.0\src\NCSSM\arm.c
                                            *  File: arm.c                                                                  C:\first\v2.0\src\NCSSM\arm.c
                                            *  Version 1.9 3/16/05                                                          C:\first\v2.0\src\NCSSM\arm.c
                                            *                                                                               C:\first\v2.0\src\NCSSM\arm.c
                                            ***************************************/                                        C:\first\v2.0\src\NCSSM\arm.c
                                           #define arm_c                                                                    C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           #ifndef _FRC2004_                                                                C:\first\v2.0\src\NCSSM\arm.c
                                           	#include <stdio.h>                                                              C:\first\v2.0\src\NCSSM\arm.c
                                           #else                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           	#include "printf_lib.h"                                                         C:\first\v2.0\src\NCSSM\arm.c
                                           #endif                                                                           C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           #include "ifi_aliases.h"                                                         C:\first\v2.0\src\NCSSM\arm.c
                                           #include "ifi_default.h"                                                         C:\first\v2.0\src\NCSSM\arm.c
                                           #include "ifi_utilities.h"                                                       C:\first\v2.0\src\NCSSM\arm.c
                                           #include "ifi_picdefs.h"                                                         C:\first\v2.0\src\NCSSM\arm.c
                                           #include "armOutput.h"                                                           C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           #include "arm.h"                                                                 C:\first\v2.0\src\NCSSM\arm.c
                                           //*** Variables and defines                                                      C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           // Set the finger and shoulder ADC to milliradian scaling coefficients           C:\first\v2.0\src\NCSSM\arm.c
                                           // #define Kf 8                                                                  C:\first\v2.0\src\NCSSM\arm.c
                                           #define Ks 4                                                                     C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           // Define Shoulder Comparator hysteresis values for "in position"                C:\first\v2.0\src\NCSSM\arm.c
                                           // FIXME - these need to be correctly sized based on the # of locking pin positions C:\first\v2.0\src\NCSSM\arm.c
                                           #define shoulderSmallThresh 20                                                   C:\first\v2.0\src\NCSSM\arm.c
                                           #define shoulderLargeThresh 45                                                   C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           #define STATE_IDLE 0                                                             C:\first\v2.0\src\NCSSM\arm.c
                                           #define STATE_UP 1                                                               C:\first\v2.0\src\NCSSM\arm.c
                                           #define STATE_DOWN 2                                                             C:\first\v2.0\src\NCSSM\arm.c
                                           #define STATE_P1 3                                                               C:\first\v2.0\src\NCSSM\arm.c
                                           #define STATE_P2 4                                                               C:\first\v2.0\src\NCSSM\arm.c
                                           #define STATE_P3 5                                                               C:\first\v2.0\src\NCSSM\arm.c
                                           #define STATE_P4 6                                                               C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           #define P1_POS 4                                                                 C:\first\v2.0\src\NCSSM\arm.c
                                           #define P2_POS 180                                                               C:\first\v2.0\src\NCSSM\arm.c
                                           #define P3_POS 676                                                               C:\first\v2.0\src\NCSSM\arm.c
                                           #define P4_POS 1140                                                              C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           int  shoulderPosSensor;                                                          C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           static unsigned int state = STATE_IDLE;                                          C:\first\v2.0\src\NCSSM\arm.c
                                           static char shoulderIsInPosition; // Flag                                        C:\first\v2.0\src\NCSSM\arm.c
                                           static int  fingerDriveCounter;                                                  C:\first\v2.0\src\NCSSM\arm.c
                                           static char fingerIsInPosition;   // Flag                                        C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           static unsigned char outputShoulderPWM;  //  This will be arm_UP, arm_DOWN, arm_STOP C:\first\v2.0\src\NCSSM\arm.c
                                           static unsigned char outputFingerPWM;    //  This will be arm_UP, arm_DOWN, arm_STOP C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           // Note:  This may change with the arm_moduleInitialize()                        C:\first\v2.0\src\NCSSM\arm.c
                                           // routine. it may be calculated from an offset from                             C:\first\v2.0\src\NCSSM\arm.c
                                           // "non-zero zero".                                                              C:\first\v2.0\src\NCSSM\arm.c
                                           static const int maxShoulderAngle = 2845; // milliradians                        C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           /**                                                                              C:\first\v2.0\src\NCSSM\arm.c
                                            * computes the absolute value of an Integer                                     C:\first\v2.0\src\NCSSM\arm.c
                                            */                                                                              C:\first\v2.0\src\NCSSM\arm.c
0038f0   cfd9     MOVFF     0xfd9,0xfe6    static int abs(int number){                                                      C:\first\v2.0\src\NCSSM\arm.c
0038f2   ffe6                                                                                                               
0038f4   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0038f6   ffd9                                                                                                               
0038f8   0efd     MOVLW     0xfd           	if(number < 0){                                                                 C:\first\v2.0\src\NCSSM\arm.c
0038fa   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0038fc   f02b                                                                                                               
0038fe   0efe     MOVLW     0xfe                                                                                            
003900   cfdb     MOVFF     0xfdb,0x2c                                                                                      
003902   f02c                                                                                                               
003904   0100     MOVLB     0x0                                                                                             
003906   0e80     MOVLW     0x80                                                                                            
003908   142c     ANDWF     0x2c,0x0,0x0                                                                                    
00390a   e014     BZ        0x3934                                                                                          
00390c   681d     SETF      0x1d,0x0       		return(-1*number);                                                             C:\first\v2.0\src\NCSSM\arm.c
00390e   681e     SETF      0x1e,0x0                                                                                        
003910   0efd     MOVLW     0xfd                                                                                            
003912   cfdb     MOVFF     0xfdb,0x22                                                                                      
003914   f022                                                                                                               
003916   0efe     MOVLW     0xfe                                                                                            
003918   cfdb     MOVFF     0xfdb,0x23                                                                                      
00391a   f023                                                                                                               
00391c   ec06     CALL      0x600c,0x0                                                                                      
00391e   f030                                                                                                               
003920   c01b     MOVFF     0x1b,0x2b                                                                                       
003922   f02b                                                                                                               
003924   c01c     MOVFF     0x1c,0x2c                                                                                       
003926   f02c                                                                                                               
003928   c02b     MOVFF     0x2b,0xff3                                                                                      
00392a   fff3                                                                                                               
00392c   c02c     MOVFF     0x2c,0xff4                                                                                      
00392e   fff4                                                                                                               
003930   d00c     BRA       0x394a                                                                                          
                                           	}                                                                               C:\first\v2.0\src\NCSSM\arm.c
003932   d00b     BRA       0x394a         	else{                                                                           C:\first\v2.0\src\NCSSM\arm.c
003934   0efd     MOVLW     0xfd           		return(number);                                                                C:\first\v2.0\src\NCSSM\arm.c
003936   cfdb     MOVFF     0xfdb,0x2b                                                                                      
003938   f02b                                                                                                               
00393a   0efe     MOVLW     0xfe                                                                                            
00393c   cfdb     MOVFF     0xfdb,0x2c                                                                                      
00393e   f02c                                                                                                               
003940   c02b     MOVFF     0x2b,0xff3                                                                                      
003942   fff3                                                                                                               
003944   c02c     MOVFF     0x2c,0xff4                                                                                      
003946   fff4                                                                                                               
003948   d000     BRA       0x394a                                                                                          
                                           	}                                                                               C:\first\v2.0\src\NCSSM\arm.c
00394a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\NCSSM\arm.c
00394c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00394e   ffd9                                                                                                               
003950   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
003952   cfd9     MOVFF     0xfd9,0xfe6    void arm_setShoulderSensor( int sensorValue ) {                                  C:\first\v2.0\src\NCSSM\arm.c
003954   ffe6                                                                                                               
003956   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003958   ffd9                                                                                                               
00395a   0efd     MOVLW     0xfd           	shoulderPosSensor = sensorValue;                                                C:\first\v2.0\src\NCSSM\arm.c
00395c   cfdb     MOVFF     0xfdb,0x1d4                                                                                     
00395e   f1d4                                                                                                               
003960   0efe     MOVLW     0xfe                                                                                            
003962   cfdb     MOVFF     0xfdb,0x1d5                                                                                     
003964   f1d5                                                                                                               
003966   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\NCSSM\arm.c
003968   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00396a   ffd9                                                                                                               
00396c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           /**                                                                              C:\first\v2.0\src\NCSSM\arm.c
                                            * This is an output handling function - typically this is only called internal to arm_doMain() C:\first\v2.0\src\NCSSM\arm.c
                                            * Provides the position of the arm based on an ADC reading of a potentiometer position sensor. C:\first\v2.0\src\NCSSM\arm.c
                                            */                                                                              C:\first\v2.0\src\NCSSM\arm.c
                                           int arm_getShoulderPosition( void ) {                                            C:\first\v2.0\src\NCSSM\arm.c
00396e   c1d4     MOVFF     0x1d4,0x2d     	return (int)Ks*(shoulderADC_MAX - shoulderPosSensor);                           C:\first\v2.0\src\NCSSM\arm.c
003970   f02d                                                                                                               
003972   c1d5     MOVFF     0x1d5,0x2e                                                                                      
003974   f02e                                                                                                               
003976   0eb7     MOVLW     0xb7                                                                                            
003978   80d8     BSF       0xd8,0x0,0x0                                                                                    
00397a   562d     SUBFWB    0x2d,0x1,0x0                                                                                    
00397c   0e02     MOVLW     0x2                                                                                             
00397e   562e     SUBFWB    0x2e,0x1,0x0                                                                                    
003980   0e04     MOVLW     0x4                                                                                             
003982   6e1d     MOVWF     0x1d,0x0                                                                                        
003984   6a1e     CLRF      0x1e,0x0                                                                                        
003986   c02d     MOVFF     0x2d,0x22                                                                                       
003988   f022                                                                                                               
00398a   c02e     MOVFF     0x2e,0x23                                                                                       
00398c   f023                                                                                                               
00398e   ec06     CALL      0x600c,0x0                                                                                      
003990   f030                                                                                                               
003992   c01b     MOVFF     0x1b,0x2b                                                                                       
003994   f02b                                                                                                               
003996   c01c     MOVFF     0x1c,0x2c                                                                                       
003998   f02c                                                                                                               
00399a   c02b     MOVFF     0x2b,0xff3                                                                                      
00399c   fff3                                                                                                               
00399e   c02c     MOVFF     0x2c,0xff4                                                                                      
0039a0   fff4                                                                                                               
0039a2   d000     BRA       0x39a4                                                                                          
0039a4   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           /**                                                                              C:\first\v2.0\src\NCSSM\arm.c
                                            * The Comparator function is called locally only to arm.c                       C:\first\v2.0\src\NCSSM\arm.c
                                            * The comparator does most of the actual work - the "PID" module                C:\first\v2.0\src\NCSSM\arm.c
                                            * is folded into the Comparator - a single value for a speed will be used to    C:\first\v2.0\src\NCSSM\arm.c
                                            * drive the arm motor into position, thus no PID - "bang bang" controller.      C:\first\v2.0\src\NCSSM\arm.c
                                            */                                                                              C:\first\v2.0\src\NCSSM\arm.c
0039a6   cfd9     MOVFF     0xfd9,0xfe6    static int computeShoulderError( int desiredShoulderPosition) {                  C:\first\v2.0\src\NCSSM\arm.c
0039a8   ffe6                                                                                                               
0039aa   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0039ac   ffd9                                                                                                               
0039ae   0e04     MOVLW     0x4                                                                                             
0039b0   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           	static char state = 0;                                                          C:\first\v2.0\src\NCSSM\arm.c
                                           	static int counter = 0;                                                         C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
0039b2   6ade     CLRF      0xde,0x0       	int error = 0;                                                                  C:\first\v2.0\src\NCSSM\arm.c
0039b4   6add     CLRF      0xdd,0x0                                                                                        
0039b6   0e02     MOVLW     0x2            	int errorMagnitude = 0;                                                         C:\first\v2.0\src\NCSSM\arm.c
0039b8   6adb     CLRF      0xdb,0x0                                                                                        
0039ba   0e03     MOVLW     0x3                                                                                             
0039bc   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
0039be   0efd     MOVLW     0xfd           	error = desiredShoulderPosition - arm_getShoulderPosition();                    C:\first\v2.0\src\NCSSM\arm.c
0039c0   cfdb     MOVFF     0xfdb,0x2d                                                                                      
0039c2   f02d                                                                                                               
0039c4   0efe     MOVLW     0xfe                                                                                            
0039c6   cfdb     MOVFF     0xfdb,0x2e                                                                                      
0039c8   f02e                                                                                                               
0039ca   c02d     MOVFF     0x2d,0xfe6                                                                                      
0039cc   ffe6                                                                                                               
0039ce   c02e     MOVFF     0x2e,0xfe6                                                                                      
0039d0   ffe6                                                                                                               
0039d2   dfcd     RCALL     0x396e                                                                                          
0039d4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0039d6   cfe7     MOVFF     0xfe7,0x2e                                                                                      
0039d8   f02e                                                                                                               
0039da   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0039dc   cfe7     MOVFF     0xfe7,0x2d                                                                                      
0039de   f02d                                                                                                               
0039e0   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0039e2   5c2d     SUBWF     0x2d,0x0,0x0                                                                                    
0039e4   6e2b     MOVWF     0x2b,0x0                                                                                        
0039e6   50f4     MOVF      0xf4,0x0,0x0                                                                                    
0039e8   582e     SUBWFB    0x2e,0x0,0x0                                                                                    
0039ea   6e2c     MOVWF     0x2c,0x0                                                                                        
0039ec   c02b     MOVFF     0x2b,0xfde                                                                                      
0039ee   ffde                                                                                                               
0039f0   c02c     MOVFF     0x2c,0xfdd                                                                                      
0039f2   ffdd                                                                                                               
0039f4   cfde     MOVFF     0xfde,0xfe6    	errorMagnitude = abs(error);                                                    C:\first\v2.0\src\NCSSM\arm.c
0039f6   ffe6                                                                                                               
0039f8   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
0039fa   ffe6                                                                                                               
0039fc   df79     RCALL     0x38f0                                                                                          
0039fe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003a00   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003a02   0e02     MOVLW     0x2                                                                                             
003a04   cff3     MOVFF     0xff3,0xfdb                                                                                     
003a06   ffdb                                                                                                               
003a08   0e03     MOVLW     0x3                                                                                             
003a0a   cff4     MOVFF     0xff4,0xfdb                                                                                     
003a0c   ffdb                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
003a0e   0101     MOVLB     0x1            	if( counter == 0 ) {                                                            C:\first\v2.0\src\NCSSM\arm.c
003a10   51e1     MOVF      0xe1,0x0,0x1                                                                                    
003a12   11e2     IORWF     0xe2,0x0,0x1                                                                                    
003a14   e123     BNZ       0x3a5c                                                                                          
003a16   c1e0     MOVFF     0x1e0,0x2b     		printf("shoulderERROR [state]: %d [%d]\r", error, (int)state);                 C:\first\v2.0\src\NCSSM\arm.c
003a18   f02b                                                                                                               
003a1a   6a2c     CLRF      0x2c,0x0                                                                                        
003a1c   be2b     BTFSC     0x2b,0x7,0x0                                                                                    
003a1e   682c     SETF      0x2c,0x0                                                                                        
003a20   c02b     MOVFF     0x2b,0xfe6                                                                                      
003a22   ffe6                                                                                                               
003a24   c02c     MOVFF     0x2c,0xfe6                                                                                      
003a26   ffe6                                                                                                               
003a28   cfde     MOVFF     0xfde,0xfe6                                                                                     
003a2a   ffe6                                                                                                               
003a2c   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
003a2e   ffe6                                                                                                               
003a30   0e02     MOVLW     0x2                                                                                             
003a32   6e2d     MOVWF     0x2d,0x0                                                                                        
003a34   0e58     MOVLW     0x58                                                                                            
003a36   6e2e     MOVWF     0x2e,0x0                                                                                        
003a38   6a2f     CLRF      0x2f,0x0                                                                                        
003a3a   c02d     MOVFF     0x2d,0xfe6                                                                                      
003a3c   ffe6                                                                                                               
003a3e   c02e     MOVFF     0x2e,0xfe6                                                                                      
003a40   ffe6                                                                                                               
003a42   c02f     MOVFF     0x2f,0xfe6                                                                                      
003a44   ffe6                                                                                                               
003a46   ecec     CALL      0x61d8,0x0                                                                                      
003a48   f030                                                                                                               
003a4a   6ef5     MOVWF     0xf5,0x0                                                                                        
003a4c   0e07     MOVLW     0x7                                                                                             
003a4e   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003a50   50f5     MOVF      0xf5,0x0,0x0                                                                                    
003a52   0101     MOVLB     0x1            		++counter;                                                                     C:\first\v2.0\src\NCSSM\arm.c
003a54   2be1     INCF      0xe1,0x1,0x1                                                                                    
003a56   0e00     MOVLW     0x0                                                                                             
003a58   23e2     ADDWFC    0xe2,0x1,0x1                                                                                    
003a5a   d00b     BRA       0x3a72         	} else if( counter == 100 ) {                                                   C:\first\v2.0\src\NCSSM\arm.c
003a5c   0e64     MOVLW     0x64                                                                                            
003a5e   19e1     XORWF     0xe1,0x0,0x1                                                                                    
003a60   e101     BNZ       0x3a64                                                                                          
003a62   51e2     MOVF      0xe2,0x0,0x1                                                                                    
003a64   e103     BNZ       0x3a6c                                                                                          
003a66   6be1     CLRF      0xe1,0x1       		counter = 0;                                                                   C:\first\v2.0\src\NCSSM\arm.c
003a68   6be2     CLRF      0xe2,0x1                                                                                        
003a6a   d003     BRA       0x3a72         	} else {                                                                        C:\first\v2.0\src\NCSSM\arm.c
003a6c   2be1     INCF      0xe1,0x1,0x1   		++counter;                                                                     C:\first\v2.0\src\NCSSM\arm.c
003a6e   0e00     MOVLW     0x0                                                                                             
003a70   23e2     ADDWFC    0xe2,0x1,0x1                                                                                    
                                           	}                                                                               C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           	// 5 < error < 50                                                               C:\first\v2.0\src\NCSSM\arm.c
                                           	// error < 5 ( and 50 )                                                         C:\first\v2.0\src\NCSSM\arm.c
                                           	// error > 50 (and also > 5 )                                                   C:\first\v2.0\src\NCSSM\arm.c
                                           	// error < 5 and greater than 50 - cannot happen                                C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
003a72   51e0     MOVF      0xe0,0x0,0x1   	switch ( state ) { // 2 States - InPosition=0, OutPosition=1                    C:\first\v2.0\src\NCSSM\arm.c
003a74   0a01     XORLW     0x1                                                                                             
003a76   e027     BZ        0x3ac6                                                                                          
003a78   0a01     XORLW     0x1                                                                                             
003a7a   e009     BZ        0x3a8e                                                                                          
                                           		case 0:                                                                        C:\first\v2.0\src\NCSSM\arm.c
003a8e   0e02     MOVLW     0x2            			if( errorMagnitude > shoulderLargeThresh ){                                   C:\first\v2.0\src\NCSSM\arm.c
003a90   cfdb     MOVFF     0xfdb,0x2b                                                                                      
003a92   f02b                                                                                                               
003a94   0e03     MOVLW     0x3                                                                                             
003a96   cfdb     MOVFF     0xfdb,0x2c                                                                                      
003a98   f02c                                                                                                               
003a9a   342c     RLCF      0x2c,0x0,0x0                                                                                    
003a9c   e204     BC        0x3aa6                                                                                          
003a9e   502b     MOVF      0x2b,0x0,0x0                                                                                    
003aa0   082d     SUBLW     0x2d                                                                                            
003aa2   0e00     MOVLW     0x0                                                                                             
003aa4   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
003aa6   e20b     BC        0x3abe                                                                                          
003aa8   0e01     MOVLW     0x1            				state = 1;                                                                   C:\first\v2.0\src\NCSSM\arm.c
003aaa   6fe0     MOVWF     0xe0,0x1                                                                                        
003aac   cfde     MOVFF     0xfde,0x2b     				return error;                                                                C:\first\v2.0\src\NCSSM\arm.c
003aae   f02b                                                                                                               
003ab0   cfdd     MOVFF     0xfdd,0x2c                                                                                      
003ab2   f02c                                                                                                               
003ab4   c02b     MOVFF     0x2b,0xff3                                                                                      
003ab6   fff3                                                                                                               
003ab8   c02c     MOVFF     0x2c,0xff4                                                                                      
003aba   fff4                                                                                                               
003abc   d020     BRA       0x3afe                                                                                          
                                           			}                                                                             C:\first\v2.0\src\NCSSM\arm.c
003abe   6af3     CLRF      0xf3,0x0       			return 0;                                                                     C:\first\v2.0\src\NCSSM\arm.c
003ac0   6af4     CLRF      0xf4,0x0                                                                                        
003ac2   d01d     BRA       0x3afe                                                                                          
003ac4   d01c     BRA       0x3afe         		break;                                                                         C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           		case 1:                                                                        C:\first\v2.0\src\NCSSM\arm.c
003ac6   0e02     MOVLW     0x2            			if (errorMagnitude < shoulderSmallThresh) {                                   C:\first\v2.0\src\NCSSM\arm.c
003ac8   cfdb     MOVFF     0xfdb,0x2b                                                                                      
003aca   f02b                                                                                                               
003acc   0e03     MOVLW     0x3                                                                                             
003ace   cfdb     MOVFF     0xfdb,0x2c                                                                                      
003ad0   f02c                                                                                                               
003ad2   90d8     BCF       0xd8,0x0,0x0                                                                                    
003ad4   502c     MOVF      0x2c,0x0,0x0                                                                                    
003ad6   e604     BN        0x3ae0                                                                                          
003ad8   0e14     MOVLW     0x14                                                                                            
003ada   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
003adc   0e00     MOVLW     0x0                                                                                             
003ade   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
003ae0   e204     BC        0x3aea                                                                                          
003ae2   6be0     CLRF      0xe0,0x1       				state = 0;                                                                   C:\first\v2.0\src\NCSSM\arm.c
003ae4   6af3     CLRF      0xf3,0x0       				return 0;                                                                    C:\first\v2.0\src\NCSSM\arm.c
003ae6   6af4     CLRF      0xf4,0x0                                                                                        
003ae8   d00a     BRA       0x3afe                                                                                          
                                           			}                                                                             C:\first\v2.0\src\NCSSM\arm.c
003aea   cfde     MOVFF     0xfde,0x2b     			return error;                                                                 C:\first\v2.0\src\NCSSM\arm.c
003aec   f02b                                                                                                               
003aee   cfdd     MOVFF     0xfdd,0x2c                                                                                      
003af0   f02c                                                                                                               
003af2   c02b     MOVFF     0x2b,0xff3                                                                                      
003af4   fff3                                                                                                               
003af6   c02c     MOVFF     0x2c,0xff4                                                                                      
003af8   fff4                                                                                                               
003afa   d001     BRA       0x3afe                                                                                          
003afc   d000     BRA       0x3afe         		break;                                                                         C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           		default:                                                                       C:\first\v2.0\src\NCSSM\arm.c
                                           			// Should never get here...                                                   C:\first\v2.0\src\NCSSM\arm.c
003a7c   cfde     MOVFF     0xfde,0x2b     			return error;                                                                 C:\first\v2.0\src\NCSSM\arm.c
003a7e   f02b                                                                                                               
003a80   cfdd     MOVFF     0xfdd,0x2c                                                                                      
003a82   f02c                                                                                                               
003a84   c02b     MOVFF     0x2b,0xff3                                                                                      
003a86   fff3                                                                                                               
003a88   c02c     MOVFF     0x2c,0xff4                                                                                      
003a8a   fff4                                                                                                               
003a8c   d038     BRA       0x3afe                                                                                          
                                           	}                                                                               C:\first\v2.0\src\NCSSM\arm.c
003afe   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\arm.c
003b00   ffe1                                                                                                               
003b02   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003b04   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003b06   ffd9                                                                                                               
003b08   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
003b0a   cfd9     MOVFF     0xfd9,0xfe6    int arm_seekShoulderPosition( int pos ) {                                        C:\first\v2.0\src\NCSSM\arm.c
003b0c   ffe6                                                                                                               
003b0e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003b10   ffd9                                                                                                               
003b12   0e02     MOVLW     0x2                                                                                             
003b14   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
003b16   0efd     MOVLW     0xfd           	int error = computeShoulderError( pos );                                        C:\first\v2.0\src\NCSSM\arm.c
003b18   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003b1a   ffe6                                                                                                               
003b1c   0efe     MOVLW     0xfe                                                                                            
003b1e   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
003b20   ffe6                                                                                                               
003b22   df41     RCALL     0x39a6                                                                                          
003b24   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003b26   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003b28   cff3     MOVFF     0xff3,0xfde                                                                                     
003b2a   ffde                                                                                                               
003b2c   cff4     MOVFF     0xff4,0xfdd                                                                                     
003b2e   ffdd                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
003b30   cfde     MOVFF     0xfde,0x2b     	if( error > 0 ) {                                                               C:\first\v2.0\src\NCSSM\arm.c
003b32   f02b                                                                                                               
003b34   cfdd     MOVFF     0xfdd,0x2c                                                                                      
003b36   f02c                                                                                                               
003b38   342c     RLCF      0x2c,0x0,0x0                                                                                    
003b3a   e204     BC        0x3b44                                                                                          
003b3c   502b     MOVF      0x2b,0x0,0x0                                                                                    
003b3e   0800     SUBLW     0x0                                                                                             
003b40   0e00     MOVLW     0x0                                                                                             
003b42   542c     SUBFWB    0x2c,0x0,0x0                                                                                    
003b44   e203     BC        0x3b4c                                                                                          
003b46   ec1d     CALL      0x583a,0x0     		armOutput_moveShoulderUp();                                                    C:\first\v2.0\src\NCSSM\arm.c
003b48   f02c                                                                                                               
003b4a   d00d     BRA       0x3b66         	} else if( error < 0 ) {                                                        C:\first\v2.0\src\NCSSM\arm.c
003b4c   cfde     MOVFF     0xfde,0x2b                                                                                      
003b4e   f02b                                                                                                               
003b50   cfdd     MOVFF     0xfdd,0x2c                                                                                      
003b52   f02c                                                                                                               
003b54   0100     MOVLB     0x0                                                                                             
003b56   0e80     MOVLW     0x80                                                                                            
003b58   142c     ANDWF     0x2c,0x0,0x0                                                                                    
003b5a   e003     BZ        0x3b62                                                                                          
003b5c   ec21     CALL      0x5842,0x0     		armOutput_moveShoulderDown();                                                  C:\first\v2.0\src\NCSSM\arm.c
003b5e   f02c                                                                                                               
003b60   d002     BRA       0x3b66         	} else {                                                                        C:\first\v2.0\src\NCSSM\arm.c
003b62   ec31     CALL      0x5862,0x0     		armOutput_stopShoulder();                                                      C:\first\v2.0\src\NCSSM\arm.c
003b64   f02c                                                                                                               
                                           	}                                                                               C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
003b66   cfde     MOVFF     0xfde,0x2b     	return error;                                                                   C:\first\v2.0\src\NCSSM\arm.c
003b68   f02b                                                                                                               
003b6a   cfdd     MOVFF     0xfdd,0x2c                                                                                      
003b6c   f02c                                                                                                               
003b6e   c02b     MOVFF     0x2b,0xff3                                                                                      
003b70   fff3                                                                                                               
003b72   c02c     MOVFF     0x2c,0xff4                                                                                      
003b74   fff4                                                                                                               
003b76   d000     BRA       0x3b78                                                                                          
003b78   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\arm.c
003b7a   ffe1                                                                                                               
003b7c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003b7e   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003b80   ffd9                                                                                                               
003b82   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
003b84   cfd9     MOVFF     0xfd9,0xfe6    void arm_doShoulderOI(                                                           C:\first\v2.0\src\NCSSM\arm.c
003b86   ffe6                                                                                                               
003b88   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003b8a   ffd9                                                                                                               
003b8c   0e03     MOVLW     0x3                                                                                             
003b8e   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           	unsigned int toggleUp,                                                          C:\first\v2.0\src\NCSSM\arm.c
                                           	unsigned int toggleDown,                                                        C:\first\v2.0\src\NCSSM\arm.c
                                           	unsigned int preset1,                                                           C:\first\v2.0\src\NCSSM\arm.c
                                           	unsigned int preset2,                                                           C:\first\v2.0\src\NCSSM\arm.c
                                           	unsigned int preset3,                                                           C:\first\v2.0\src\NCSSM\arm.c
                                           	unsigned int preset4 )                                                          C:\first\v2.0\src\NCSSM\arm.c
                                           {                                                                                C:\first\v2.0\src\NCSSM\arm.c
003b90   50d9     MOVF      0xd9,0x0,0x0   	unsigned char isPreset = (preset1 || preset2 || preset3 || preset4);            C:\first\v2.0\src\NCSSM\arm.c
003b92   0ff9     ADDLW     0xf9                                                                                            
003b94   6ee9     MOVWF     0xe9,0x0                                                                                        
003b96   0eff     MOVLW     0xff                                                                                            
003b98   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003b9a   6eea     MOVWF     0xea,0x0                                                                                        
003b9c   50ee     MOVF      0xee,0x0,0x0                                                                                    
003b9e   10ed     IORWF     0xed,0x0,0x0                                                                                    
003ba0   e11d     BNZ       0x3bdc                                                                                          
003ba2   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003ba4   0ff7     ADDLW     0xf7                                                                                            
003ba6   6ee9     MOVWF     0xe9,0x0                                                                                        
003ba8   0eff     MOVLW     0xff                                                                                            
003baa   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003bac   6eea     MOVWF     0xea,0x0                                                                                        
003bae   50ee     MOVF      0xee,0x0,0x0                                                                                    
003bb0   10ed     IORWF     0xed,0x0,0x0                                                                                    
003bb2   e114     BNZ       0x3bdc                                                                                          
003bb4   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003bb6   0ff5     ADDLW     0xf5                                                                                            
003bb8   6ee9     MOVWF     0xe9,0x0                                                                                        
003bba   0eff     MOVLW     0xff                                                                                            
003bbc   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003bbe   6eea     MOVWF     0xea,0x0                                                                                        
003bc0   50ee     MOVF      0xee,0x0,0x0                                                                                    
003bc2   10ed     IORWF     0xed,0x0,0x0                                                                                    
003bc4   e10b     BNZ       0x3bdc                                                                                          
003bc6   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003bc8   0ff3     ADDLW     0xf3                                                                                            
003bca   6ee9     MOVWF     0xe9,0x0                                                                                        
003bcc   0eff     MOVLW     0xff                                                                                            
003bce   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003bd0   6eea     MOVWF     0xea,0x0                                                                                        
003bd2   50ee     MOVF      0xee,0x0,0x0                                                                                    
003bd4   10ed     IORWF     0xed,0x0,0x0                                                                                    
003bd6   e102     BNZ       0x3bdc                                                                                          
003bd8   0e00     MOVLW     0x0                                                                                             
003bda   d001     BRA       0x3bde                                                                                          
003bdc   0e01     MOVLW     0x1                                                                                             
003bde   6edf     MOVWF     0xdf,0x0                                                                                        
003be0   0e01     MOVLW     0x1            	int error = 0;                                                                  C:\first\v2.0\src\NCSSM\arm.c
003be2   6adb     CLRF      0xdb,0x0                                                                                        
003be4   0e02     MOVLW     0x2                                                                                             
003be6   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
003be8   0e06     MOVLW     0x6            	switch( state ) {                                                               C:\first\v2.0\src\NCSSM\arm.c
003bea   0101     MOVLB     0x1                                                                                             
003bec   19dc     XORWF     0xdc,0x0,0x1                                                                                    
003bee   e101     BNZ       0x3bf2                                                                                          
003bf0   51dd     MOVF      0xdd,0x0,0x1                                                                                    
003bf2   e101     BNZ       0x3bf6                                                                                          
003bf4   d198     BRA       0x3f26                                                                                          
003bf6   0e05     MOVLW     0x5                                                                                             
003bf8   19dc     XORWF     0xdc,0x0,0x1                                                                                    
003bfa   e101     BNZ       0x3bfe                                                                                          
003bfc   51dd     MOVF      0xdd,0x0,0x1                                                                                    
003bfe   e101     BNZ       0x3c02                                                                                          
003c00   d148     BRA       0x3e92                                                                                          
003c02   0e04     MOVLW     0x4                                                                                             
003c04   19dc     XORWF     0xdc,0x0,0x1                                                                                    
003c06   e101     BNZ       0x3c0a                                                                                          
003c08   51dd     MOVF      0xdd,0x0,0x1                                                                                    
003c0a   e101     BNZ       0x3c0e                                                                                          
003c0c   d0f9     BRA       0x3e00                                                                                          
003c0e   0e03     MOVLW     0x3                                                                                             
003c10   19dc     XORWF     0xdc,0x0,0x1                                                                                    
003c12   e101     BNZ       0x3c16                                                                                          
003c14   51dd     MOVF      0xdd,0x0,0x1                                                                                    
003c16   e101     BNZ       0x3c1a                                                                                          
003c18   d0aa     BRA       0x3d6e                                                                                          
003c1a   0e02     MOVLW     0x2                                                                                             
003c1c   19dc     XORWF     0xdc,0x0,0x1                                                                                    
003c1e   e101     BNZ       0x3c22                                                                                          
003c20   51dd     MOVF      0xdd,0x0,0x1                                                                                    
003c22   e101     BNZ       0x3c26                                                                                          
003c24   d095     BRA       0x3d50                                                                                          
003c26   0e01     MOVLW     0x1                                                                                             
003c28   19dc     XORWF     0xdc,0x0,0x1                                                                                    
003c2a   e101     BNZ       0x3c2e                                                                                          
003c2c   51dd     MOVF      0xdd,0x0,0x1                                                                                    
003c2e   e101     BNZ       0x3c32                                                                                          
003c30   d080     BRA       0x3d32                                                                                          
003c32   51dc     MOVF      0xdc,0x0,0x1                                                                                    
003c34   e101     BNZ       0x3c38                                                                                          
003c36   51dd     MOVF      0xdd,0x0,0x1                                                                                    
003c38   e001     BZ        0x3c3c                                                                                          
003c3a   d1bf     BRA       0x3fba                                                                                          
                                           		case STATE_IDLE:                                                               C:\first\v2.0\src\NCSSM\arm.c
003c3c   50df     MOVF      0xdf,0x0,0x0   			if( !isPreset ) {                                                             C:\first\v2.0\src\NCSSM\arm.c
003c3e   e133     BNZ       0x3ca6                                                                                          
003c40   50d9     MOVF      0xd9,0x0,0x0   				if( toggleUp && !toggleDown ) {                                              C:\first\v2.0\src\NCSSM\arm.c
003c42   0ffd     ADDLW     0xfd                                                                                            
003c44   6ee9     MOVWF     0xe9,0x0                                                                                        
003c46   0eff     MOVLW     0xff                                                                                            
003c48   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003c4a   6eea     MOVWF     0xea,0x0                                                                                        
003c4c   50ee     MOVF      0xee,0x0,0x0                                                                                    
003c4e   10ed     IORWF     0xed,0x0,0x0                                                                                    
003c50   e010     BZ        0x3c72                                                                                          
003c52   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003c54   0ffb     ADDLW     0xfb                                                                                            
003c56   6ee9     MOVWF     0xe9,0x0                                                                                        
003c58   0eff     MOVLW     0xff                                                                                            
003c5a   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003c5c   6eea     MOVWF     0xea,0x0                                                                                        
003c5e   50ee     MOVF      0xee,0x0,0x0                                                                                    
003c60   10ed     IORWF     0xed,0x0,0x0                                                                                    
003c62   e107     BNZ       0x3c72                                                                                          
003c64   ec1d     CALL      0x583a,0x0     					armOutput_moveShoulderUp();                                                 C:\first\v2.0\src\NCSSM\arm.c
003c66   f02c                                                                                                               
003c68   0e01     MOVLW     0x1            					state = STATE_UP;                                                           C:\first\v2.0\src\NCSSM\arm.c
003c6a   0101     MOVLB     0x1                                                                                             
003c6c   6fdc     MOVWF     0xdc,0x1                                                                                        
003c6e   6bdd     CLRF      0xdd,0x1                                                                                        
                                           				}                                                                            C:\first\v2.0\src\NCSSM\arm.c
003c70   d018     BRA       0x3ca2         				else if( !toggleUp && toggleDown ) {                                         C:\first\v2.0\src\NCSSM\arm.c
003c72   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003c74   0ffd     ADDLW     0xfd                                                                                            
003c76   6ee9     MOVWF     0xe9,0x0                                                                                        
003c78   0eff     MOVLW     0xff                                                                                            
003c7a   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003c7c   6eea     MOVWF     0xea,0x0                                                                                        
003c7e   50ee     MOVF      0xee,0x0,0x0                                                                                    
003c80   10ed     IORWF     0xed,0x0,0x0                                                                                    
003c82   e10f     BNZ       0x3ca2                                                                                          
003c84   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003c86   0ffb     ADDLW     0xfb                                                                                            
003c88   6ee9     MOVWF     0xe9,0x0                                                                                        
003c8a   0eff     MOVLW     0xff                                                                                            
003c8c   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003c8e   6eea     MOVWF     0xea,0x0                                                                                        
003c90   50ee     MOVF      0xee,0x0,0x0                                                                                    
003c92   10ed     IORWF     0xed,0x0,0x0                                                                                    
003c94   e006     BZ        0x3ca2                                                                                          
003c96   ec21     CALL      0x5842,0x0     					armOutput_moveShoulderDown();                                               C:\first\v2.0\src\NCSSM\arm.c
003c98   f02c                                                                                                               
003c9a   0e02     MOVLW     0x2            					state = STATE_DOWN;                                                         C:\first\v2.0\src\NCSSM\arm.c
003c9c   0101     MOVLB     0x1                                                                                             
003c9e   6fdc     MOVWF     0xdc,0x1                                                                                        
003ca0   6bdd     CLRF      0xdd,0x1                                                                                        
                                           				}                                                                            C:\first\v2.0\src\NCSSM\arm.c
003ca2   d18d     BRA       0x3fbe         				break;                                                                       C:\first\v2.0\src\NCSSM\arm.c
003ca4   d046     BRA       0x3d32         			} else {                                                                      C:\first\v2.0\src\NCSSM\arm.c
003ca6   50d9     MOVF      0xd9,0x0,0x0   				if( !toggleUp && !toggleDown ) {                                             C:\first\v2.0\src\NCSSM\arm.c
003ca8   0ffd     ADDLW     0xfd                                                                                            
003caa   6ee9     MOVWF     0xe9,0x0                                                                                        
003cac   0eff     MOVLW     0xff                                                                                            
003cae   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003cb0   6eea     MOVWF     0xea,0x0                                                                                        
003cb2   50ee     MOVF      0xee,0x0,0x0                                                                                    
003cb4   10ed     IORWF     0xed,0x0,0x0                                                                                    
003cb6   e13c     BNZ       0x3d30                                                                                          
003cb8   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003cba   0ffb     ADDLW     0xfb                                                                                            
003cbc   6ee9     MOVWF     0xe9,0x0                                                                                        
003cbe   0eff     MOVLW     0xff                                                                                            
003cc0   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003cc2   6eea     MOVWF     0xea,0x0                                                                                        
003cc4   50ee     MOVF      0xee,0x0,0x0                                                                                    
003cc6   10ed     IORWF     0xed,0x0,0x0                                                                                    
003cc8   e133     BNZ       0x3d30                                                                                          
003cca   50d9     MOVF      0xd9,0x0,0x0   					if( preset1 ) {                                                             C:\first\v2.0\src\NCSSM\arm.c
003ccc   0ff9     ADDLW     0xf9                                                                                            
003cce   6ee9     MOVWF     0xe9,0x0                                                                                        
003cd0   0eff     MOVLW     0xff                                                                                            
003cd2   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003cd4   6eea     MOVWF     0xea,0x0                                                                                        
003cd6   50ee     MOVF      0xee,0x0,0x0                                                                                    
003cd8   10ed     IORWF     0xed,0x0,0x0                                                                                    
003cda   e004     BZ        0x3ce4                                                                                          
003cdc   0e03     MOVLW     0x3            						state = STATE_P1;                                                          C:\first\v2.0\src\NCSSM\arm.c
003cde   6fdc     MOVWF     0xdc,0x1                                                                                        
003ce0   6bdd     CLRF      0xdd,0x1                                                                                        
003ce2   d026     BRA       0x3d30         					} else if( preset2 ) {                                                      C:\first\v2.0\src\NCSSM\arm.c
003ce4   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003ce6   0ff7     ADDLW     0xf7                                                                                            
003ce8   6ee9     MOVWF     0xe9,0x0                                                                                        
003cea   0eff     MOVLW     0xff                                                                                            
003cec   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003cee   6eea     MOVWF     0xea,0x0                                                                                        
003cf0   50ee     MOVF      0xee,0x0,0x0                                                                                    
003cf2   10ed     IORWF     0xed,0x0,0x0                                                                                    
003cf4   e004     BZ        0x3cfe                                                                                          
003cf6   0e04     MOVLW     0x4            						state = STATE_P2;                                                          C:\first\v2.0\src\NCSSM\arm.c
003cf8   6fdc     MOVWF     0xdc,0x1                                                                                        
003cfa   6bdd     CLRF      0xdd,0x1                                                                                        
003cfc   d019     BRA       0x3d30         					} else if( preset3 ) {                                                      C:\first\v2.0\src\NCSSM\arm.c
003cfe   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003d00   0ff5     ADDLW     0xf5                                                                                            
003d02   6ee9     MOVWF     0xe9,0x0                                                                                        
003d04   0eff     MOVLW     0xff                                                                                            
003d06   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003d08   6eea     MOVWF     0xea,0x0                                                                                        
003d0a   50ee     MOVF      0xee,0x0,0x0                                                                                    
003d0c   10ed     IORWF     0xed,0x0,0x0                                                                                    
003d0e   e004     BZ        0x3d18                                                                                          
003d10   0e05     MOVLW     0x5            						state = STATE_P3;                                                          C:\first\v2.0\src\NCSSM\arm.c
003d12   6fdc     MOVWF     0xdc,0x1                                                                                        
003d14   6bdd     CLRF      0xdd,0x1                                                                                        
003d16   d00c     BRA       0x3d30         					} else if( preset4 ) {                                                      C:\first\v2.0\src\NCSSM\arm.c
003d18   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003d1a   0ff3     ADDLW     0xf3                                                                                            
003d1c   6ee9     MOVWF     0xe9,0x0                                                                                        
003d1e   0eff     MOVLW     0xff                                                                                            
003d20   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003d22   6eea     MOVWF     0xea,0x0                                                                                        
003d24   50ee     MOVF      0xee,0x0,0x0                                                                                    
003d26   10ed     IORWF     0xed,0x0,0x0                                                                                    
003d28   e003     BZ        0x3d30                                                                                          
003d2a   0e06     MOVLW     0x6            						state = STATE_P4;                                                          C:\first\v2.0\src\NCSSM\arm.c
003d2c   6fdc     MOVWF     0xdc,0x1                                                                                        
003d2e   6bdd     CLRF      0xdd,0x1                                                                                        
                                           					}                                                                           C:\first\v2.0\src\NCSSM\arm.c
                                           				}                                                                            C:\first\v2.0\src\NCSSM\arm.c
003d30   d146     BRA       0x3fbe         				break;                                                                       C:\first\v2.0\src\NCSSM\arm.c
                                           			}                                                                             C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           		case STATE_UP:                                                                 C:\first\v2.0\src\NCSSM\arm.c
003d32   50d9     MOVF      0xd9,0x0,0x0   			if( !toggleUp ) {                                                             C:\first\v2.0\src\NCSSM\arm.c
003d34   0ffd     ADDLW     0xfd                                                                                            
003d36   6ee9     MOVWF     0xe9,0x0                                                                                        
003d38   0eff     MOVLW     0xff                                                                                            
003d3a   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003d3c   6eea     MOVWF     0xea,0x0                                                                                        
003d3e   50ee     MOVF      0xee,0x0,0x0                                                                                    
003d40   10ed     IORWF     0xed,0x0,0x0                                                                                    
003d42   e105     BNZ       0x3d4e                                                                                          
003d44   ec31     CALL      0x5862,0x0     				armOutput_stopShoulder();                                                    C:\first\v2.0\src\NCSSM\arm.c
003d46   f02c                                                                                                               
003d48   0101     MOVLB     0x1            				state = STATE_IDLE;                                                          C:\first\v2.0\src\NCSSM\arm.c
003d4a   6bdc     CLRF      0xdc,0x1                                                                                        
003d4c   6bdd     CLRF      0xdd,0x1                                                                                        
                                           			}                                                                             C:\first\v2.0\src\NCSSM\arm.c
003d4e   d137     BRA       0x3fbe         			break;                                                                        C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           		case STATE_DOWN:                                                               C:\first\v2.0\src\NCSSM\arm.c
003d50   50d9     MOVF      0xd9,0x0,0x0   			if( !toggleDown ) {                                                           C:\first\v2.0\src\NCSSM\arm.c
003d52   0ffb     ADDLW     0xfb                                                                                            
003d54   6ee9     MOVWF     0xe9,0x0                                                                                        
003d56   0eff     MOVLW     0xff                                                                                            
003d58   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003d5a   6eea     MOVWF     0xea,0x0                                                                                        
003d5c   50ee     MOVF      0xee,0x0,0x0                                                                                    
003d5e   10ed     IORWF     0xed,0x0,0x0                                                                                    
003d60   e105     BNZ       0x3d6c                                                                                          
003d62   ec31     CALL      0x5862,0x0     				armOutput_stopShoulder();                                                    C:\first\v2.0\src\NCSSM\arm.c
003d64   f02c                                                                                                               
003d66   0101     MOVLB     0x1            				state = STATE_IDLE;                                                          C:\first\v2.0\src\NCSSM\arm.c
003d68   6bdc     CLRF      0xdc,0x1                                                                                        
003d6a   6bdd     CLRF      0xdd,0x1                                                                                        
                                           			}                                                                             C:\first\v2.0\src\NCSSM\arm.c
003d6c   d128     BRA       0x3fbe         			break;                                                                        C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           		case STATE_P1:                                                                 C:\first\v2.0\src\NCSSM\arm.c
003d6e   50d9     MOVF      0xd9,0x0,0x0   			if( preset2 || preset3 || preset4 || toggleUp || toggleDown ) {               C:\first\v2.0\src\NCSSM\arm.c
003d70   0ff7     ADDLW     0xf7                                                                                            
003d72   6ee9     MOVWF     0xe9,0x0                                                                                        
003d74   0eff     MOVLW     0xff                                                                                            
003d76   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003d78   6eea     MOVWF     0xea,0x0                                                                                        
003d7a   50ee     MOVF      0xee,0x0,0x0                                                                                    
003d7c   10ed     IORWF     0xed,0x0,0x0                                                                                    
003d7e   e124     BNZ       0x3dc8                                                                                          
003d80   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003d82   0ff5     ADDLW     0xf5                                                                                            
003d84   6ee9     MOVWF     0xe9,0x0                                                                                        
003d86   0eff     MOVLW     0xff                                                                                            
003d88   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003d8a   6eea     MOVWF     0xea,0x0                                                                                        
003d8c   50ee     MOVF      0xee,0x0,0x0                                                                                    
003d8e   10ed     IORWF     0xed,0x0,0x0                                                                                    
003d90   e11b     BNZ       0x3dc8                                                                                          
003d92   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003d94   0ff3     ADDLW     0xf3                                                                                            
003d96   6ee9     MOVWF     0xe9,0x0                                                                                        
003d98   0eff     MOVLW     0xff                                                                                            
003d9a   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003d9c   6eea     MOVWF     0xea,0x0                                                                                        
003d9e   50ee     MOVF      0xee,0x0,0x0                                                                                    
003da0   10ed     IORWF     0xed,0x0,0x0                                                                                    
003da2   e112     BNZ       0x3dc8                                                                                          
003da4   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003da6   0ffd     ADDLW     0xfd                                                                                            
003da8   6ee9     MOVWF     0xe9,0x0                                                                                        
003daa   0eff     MOVLW     0xff                                                                                            
003dac   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003dae   6eea     MOVWF     0xea,0x0                                                                                        
003db0   50ee     MOVF      0xee,0x0,0x0                                                                                    
003db2   10ed     IORWF     0xed,0x0,0x0                                                                                    
003db4   e109     BNZ       0x3dc8                                                                                          
003db6   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003db8   0ffb     ADDLW     0xfb                                                                                            
003dba   6ee9     MOVWF     0xe9,0x0                                                                                        
003dbc   0eff     MOVLW     0xff                                                                                            
003dbe   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003dc0   6eea     MOVWF     0xea,0x0                                                                                        
003dc2   50ee     MOVF      0xee,0x0,0x0                                                                                    
003dc4   10ed     IORWF     0xed,0x0,0x0                                                                                    
003dc6   e004     BZ        0x3dd0                                                                                          
003dc8   6bdc     CLRF      0xdc,0x1       				state = STATE_IDLE;                                                          C:\first\v2.0\src\NCSSM\arm.c
003dca   6bdd     CLRF      0xdd,0x1                                                                                        
003dcc   d922     RCALL     0x4012         				arm_reset();                                                                 C:\first\v2.0\src\NCSSM\arm.c
003dce   d017     BRA       0x3dfe         			} else {                                                                      C:\first\v2.0\src\NCSSM\arm.c
003dd0   0e04     MOVLW     0x4            				error = arm_seekShoulderPosition( P1_POS );                                  C:\first\v2.0\src\NCSSM\arm.c
003dd2   6ee6     MOVWF     0xe6,0x0                                                                                        
003dd4   6ae6     CLRF      0xe6,0x0                                                                                        
003dd6   de99     RCALL     0x3b0a                                                                                          
003dd8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003dda   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003ddc   52de     MOVF      0xde,0x1,0x0                                                                                    
003dde   cff3     MOVFF     0xff3,0xfde                                                                                     
003de0   ffde                                                                                                               
003de2   cff4     MOVFF     0xff4,0xfdd                                                                                     
003de4   ffdd                                                                                                               
003de6   52dd     MOVF      0xdd,0x1,0x0                                                                                    
003de8   50d9     MOVF      0xd9,0x0,0x0   				if( error == 0 ) {                                                           C:\first\v2.0\src\NCSSM\arm.c
003dea   0f01     ADDLW     0x1                                                                                             
003dec   6ee9     MOVWF     0xe9,0x0                                                                                        
003dee   cfda     MOVFF     0xfda,0xfea                                                                                     
003df0   ffea                                                                                                               
003df2   50ee     MOVF      0xee,0x0,0x0                                                                                    
003df4   10ed     IORWF     0xed,0x0,0x0                                                                                    
003df6   e103     BNZ       0x3dfe                                                                                          
003df8   0101     MOVLB     0x1            					state = STATE_IDLE;                                                         C:\first\v2.0\src\NCSSM\arm.c
003dfa   6bdc     CLRF      0xdc,0x1                                                                                        
003dfc   6bdd     CLRF      0xdd,0x1                                                                                        
                                           				}                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           			}                                                                             C:\first\v2.0\src\NCSSM\arm.c
003dfe   d0df     BRA       0x3fbe         			break;                                                                        C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           		case STATE_P2:                                                                 C:\first\v2.0\src\NCSSM\arm.c
003e00   50d9     MOVF      0xd9,0x0,0x0   			if( preset1 || preset3 || preset4 || toggleUp || toggleDown ) {               C:\first\v2.0\src\NCSSM\arm.c
003e02   0ff9     ADDLW     0xf9                                                                                            
003e04   6ee9     MOVWF     0xe9,0x0                                                                                        
003e06   0eff     MOVLW     0xff                                                                                            
003e08   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003e0a   6eea     MOVWF     0xea,0x0                                                                                        
003e0c   50ee     MOVF      0xee,0x0,0x0                                                                                    
003e0e   10ed     IORWF     0xed,0x0,0x0                                                                                    
003e10   e124     BNZ       0x3e5a                                                                                          
003e12   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003e14   0ff5     ADDLW     0xf5                                                                                            
003e16   6ee9     MOVWF     0xe9,0x0                                                                                        
003e18   0eff     MOVLW     0xff                                                                                            
003e1a   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003e1c   6eea     MOVWF     0xea,0x0                                                                                        
003e1e   50ee     MOVF      0xee,0x0,0x0                                                                                    
003e20   10ed     IORWF     0xed,0x0,0x0                                                                                    
003e22   e11b     BNZ       0x3e5a                                                                                          
003e24   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003e26   0ff3     ADDLW     0xf3                                                                                            
003e28   6ee9     MOVWF     0xe9,0x0                                                                                        
003e2a   0eff     MOVLW     0xff                                                                                            
003e2c   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003e2e   6eea     MOVWF     0xea,0x0                                                                                        
003e30   50ee     MOVF      0xee,0x0,0x0                                                                                    
003e32   10ed     IORWF     0xed,0x0,0x0                                                                                    
003e34   e112     BNZ       0x3e5a                                                                                          
003e36   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003e38   0ffd     ADDLW     0xfd                                                                                            
003e3a   6ee9     MOVWF     0xe9,0x0                                                                                        
003e3c   0eff     MOVLW     0xff                                                                                            
003e3e   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003e40   6eea     MOVWF     0xea,0x0                                                                                        
003e42   50ee     MOVF      0xee,0x0,0x0                                                                                    
003e44   10ed     IORWF     0xed,0x0,0x0                                                                                    
003e46   e109     BNZ       0x3e5a                                                                                          
003e48   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003e4a   0ffb     ADDLW     0xfb                                                                                            
003e4c   6ee9     MOVWF     0xe9,0x0                                                                                        
003e4e   0eff     MOVLW     0xff                                                                                            
003e50   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003e52   6eea     MOVWF     0xea,0x0                                                                                        
003e54   50ee     MOVF      0xee,0x0,0x0                                                                                    
003e56   10ed     IORWF     0xed,0x0,0x0                                                                                    
003e58   e004     BZ        0x3e62                                                                                          
003e5a   6bdc     CLRF      0xdc,0x1       				state = STATE_IDLE;                                                          C:\first\v2.0\src\NCSSM\arm.c
003e5c   6bdd     CLRF      0xdd,0x1                                                                                        
003e5e   d8d9     RCALL     0x4012         				arm_reset();                                                                 C:\first\v2.0\src\NCSSM\arm.c
003e60   d017     BRA       0x3e90         			} else {                                                                      C:\first\v2.0\src\NCSSM\arm.c
003e62   0eb4     MOVLW     0xb4           				error = arm_seekShoulderPosition( P2_POS );                                  C:\first\v2.0\src\NCSSM\arm.c
003e64   6ee6     MOVWF     0xe6,0x0                                                                                        
003e66   6ae6     CLRF      0xe6,0x0                                                                                        
003e68   de50     RCALL     0x3b0a                                                                                          
003e6a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003e6c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003e6e   52de     MOVF      0xde,0x1,0x0                                                                                    
003e70   cff3     MOVFF     0xff3,0xfde                                                                                     
003e72   ffde                                                                                                               
003e74   cff4     MOVFF     0xff4,0xfdd                                                                                     
003e76   ffdd                                                                                                               
003e78   52dd     MOVF      0xdd,0x1,0x0                                                                                    
003e7a   50d9     MOVF      0xd9,0x0,0x0   				if( error == 0 ) {                                                           C:\first\v2.0\src\NCSSM\arm.c
003e7c   0f01     ADDLW     0x1                                                                                             
003e7e   6ee9     MOVWF     0xe9,0x0                                                                                        
003e80   cfda     MOVFF     0xfda,0xfea                                                                                     
003e82   ffea                                                                                                               
003e84   50ee     MOVF      0xee,0x0,0x0                                                                                    
003e86   10ed     IORWF     0xed,0x0,0x0                                                                                    
003e88   e103     BNZ       0x3e90                                                                                          
003e8a   0101     MOVLB     0x1            					state = STATE_IDLE;                                                         C:\first\v2.0\src\NCSSM\arm.c
003e8c   6bdc     CLRF      0xdc,0x1                                                                                        
003e8e   6bdd     CLRF      0xdd,0x1                                                                                        
                                           				}                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           			}                                                                             C:\first\v2.0\src\NCSSM\arm.c
003e90   d096     BRA       0x3fbe         			break;                                                                        C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           		case STATE_P3:                                                                 C:\first\v2.0\src\NCSSM\arm.c
003e92   50d9     MOVF      0xd9,0x0,0x0   			if( preset1 || preset2 || preset4 || toggleUp || toggleDown ) {               C:\first\v2.0\src\NCSSM\arm.c
003e94   0ff9     ADDLW     0xf9                                                                                            
003e96   6ee9     MOVWF     0xe9,0x0                                                                                        
003e98   0eff     MOVLW     0xff                                                                                            
003e9a   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003e9c   6eea     MOVWF     0xea,0x0                                                                                        
003e9e   50ee     MOVF      0xee,0x0,0x0                                                                                    
003ea0   10ed     IORWF     0xed,0x0,0x0                                                                                    
003ea2   e124     BNZ       0x3eec                                                                                          
003ea4   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003ea6   0ff7     ADDLW     0xf7                                                                                            
003ea8   6ee9     MOVWF     0xe9,0x0                                                                                        
003eaa   0eff     MOVLW     0xff                                                                                            
003eac   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003eae   6eea     MOVWF     0xea,0x0                                                                                        
003eb0   50ee     MOVF      0xee,0x0,0x0                                                                                    
003eb2   10ed     IORWF     0xed,0x0,0x0                                                                                    
003eb4   e11b     BNZ       0x3eec                                                                                          
003eb6   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003eb8   0ff3     ADDLW     0xf3                                                                                            
003eba   6ee9     MOVWF     0xe9,0x0                                                                                        
003ebc   0eff     MOVLW     0xff                                                                                            
003ebe   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003ec0   6eea     MOVWF     0xea,0x0                                                                                        
003ec2   50ee     MOVF      0xee,0x0,0x0                                                                                    
003ec4   10ed     IORWF     0xed,0x0,0x0                                                                                    
003ec6   e112     BNZ       0x3eec                                                                                          
003ec8   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003eca   0ffd     ADDLW     0xfd                                                                                            
003ecc   6ee9     MOVWF     0xe9,0x0                                                                                        
003ece   0eff     MOVLW     0xff                                                                                            
003ed0   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003ed2   6eea     MOVWF     0xea,0x0                                                                                        
003ed4   50ee     MOVF      0xee,0x0,0x0                                                                                    
003ed6   10ed     IORWF     0xed,0x0,0x0                                                                                    
003ed8   e109     BNZ       0x3eec                                                                                          
003eda   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003edc   0ffb     ADDLW     0xfb                                                                                            
003ede   6ee9     MOVWF     0xe9,0x0                                                                                        
003ee0   0eff     MOVLW     0xff                                                                                            
003ee2   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003ee4   6eea     MOVWF     0xea,0x0                                                                                        
003ee6   50ee     MOVF      0xee,0x0,0x0                                                                                    
003ee8   10ed     IORWF     0xed,0x0,0x0                                                                                    
003eea   e004     BZ        0x3ef4                                                                                          
003eec   6bdc     CLRF      0xdc,0x1       				state = STATE_IDLE;                                                          C:\first\v2.0\src\NCSSM\arm.c
003eee   6bdd     CLRF      0xdd,0x1                                                                                        
003ef0   d890     RCALL     0x4012         				arm_reset();                                                                 C:\first\v2.0\src\NCSSM\arm.c
003ef2   d018     BRA       0x3f24         			} else {                                                                      C:\first\v2.0\src\NCSSM\arm.c
003ef4   0ea4     MOVLW     0xa4           				error = arm_seekShoulderPosition( P3_POS );                                  C:\first\v2.0\src\NCSSM\arm.c
003ef6   6ee6     MOVWF     0xe6,0x0                                                                                        
003ef8   0e02     MOVLW     0x2                                                                                             
003efa   6ee6     MOVWF     0xe6,0x0                                                                                        
003efc   de06     RCALL     0x3b0a                                                                                          
003efe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003f00   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003f02   52de     MOVF      0xde,0x1,0x0                                                                                    
003f04   cff3     MOVFF     0xff3,0xfde                                                                                     
003f06   ffde                                                                                                               
003f08   cff4     MOVFF     0xff4,0xfdd                                                                                     
003f0a   ffdd                                                                                                               
003f0c   52dd     MOVF      0xdd,0x1,0x0                                                                                    
003f0e   50d9     MOVF      0xd9,0x0,0x0   				if( error == 0 ) {                                                           C:\first\v2.0\src\NCSSM\arm.c
003f10   0f01     ADDLW     0x1                                                                                             
003f12   6ee9     MOVWF     0xe9,0x0                                                                                        
003f14   cfda     MOVFF     0xfda,0xfea                                                                                     
003f16   ffea                                                                                                               
003f18   50ee     MOVF      0xee,0x0,0x0                                                                                    
003f1a   10ed     IORWF     0xed,0x0,0x0                                                                                    
003f1c   e103     BNZ       0x3f24                                                                                          
003f1e   0101     MOVLB     0x1            					state = STATE_IDLE;                                                         C:\first\v2.0\src\NCSSM\arm.c
003f20   6bdc     CLRF      0xdc,0x1                                                                                        
003f22   6bdd     CLRF      0xdd,0x1                                                                                        
                                           				}                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           			}                                                                             C:\first\v2.0\src\NCSSM\arm.c
003f24   d04c     BRA       0x3fbe         			break;                                                                        C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           		case STATE_P4:                                                                 C:\first\v2.0\src\NCSSM\arm.c
003f26   50d9     MOVF      0xd9,0x0,0x0   			if( preset1 || preset2 || preset3 || toggleUp || toggleDown ) {               C:\first\v2.0\src\NCSSM\arm.c
003f28   0ff9     ADDLW     0xf9                                                                                            
003f2a   6ee9     MOVWF     0xe9,0x0                                                                                        
003f2c   0eff     MOVLW     0xff                                                                                            
003f2e   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003f30   6eea     MOVWF     0xea,0x0                                                                                        
003f32   50ee     MOVF      0xee,0x0,0x0                                                                                    
003f34   10ed     IORWF     0xed,0x0,0x0                                                                                    
003f36   e124     BNZ       0x3f80                                                                                          
003f38   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003f3a   0ff7     ADDLW     0xf7                                                                                            
003f3c   6ee9     MOVWF     0xe9,0x0                                                                                        
003f3e   0eff     MOVLW     0xff                                                                                            
003f40   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003f42   6eea     MOVWF     0xea,0x0                                                                                        
003f44   50ee     MOVF      0xee,0x0,0x0                                                                                    
003f46   10ed     IORWF     0xed,0x0,0x0                                                                                    
003f48   e11b     BNZ       0x3f80                                                                                          
003f4a   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003f4c   0ff5     ADDLW     0xf5                                                                                            
003f4e   6ee9     MOVWF     0xe9,0x0                                                                                        
003f50   0eff     MOVLW     0xff                                                                                            
003f52   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003f54   6eea     MOVWF     0xea,0x0                                                                                        
003f56   50ee     MOVF      0xee,0x0,0x0                                                                                    
003f58   10ed     IORWF     0xed,0x0,0x0                                                                                    
003f5a   e112     BNZ       0x3f80                                                                                          
003f5c   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003f5e   0ffd     ADDLW     0xfd                                                                                            
003f60   6ee9     MOVWF     0xe9,0x0                                                                                        
003f62   0eff     MOVLW     0xff                                                                                            
003f64   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003f66   6eea     MOVWF     0xea,0x0                                                                                        
003f68   50ee     MOVF      0xee,0x0,0x0                                                                                    
003f6a   10ed     IORWF     0xed,0x0,0x0                                                                                    
003f6c   e109     BNZ       0x3f80                                                                                          
003f6e   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003f70   0ffb     ADDLW     0xfb                                                                                            
003f72   6ee9     MOVWF     0xe9,0x0                                                                                        
003f74   0eff     MOVLW     0xff                                                                                            
003f76   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003f78   6eea     MOVWF     0xea,0x0                                                                                        
003f7a   50ee     MOVF      0xee,0x0,0x0                                                                                    
003f7c   10ed     IORWF     0xed,0x0,0x0                                                                                    
003f7e   e004     BZ        0x3f88                                                                                          
003f80   6bdc     CLRF      0xdc,0x1       				state = STATE_IDLE;                                                          C:\first\v2.0\src\NCSSM\arm.c
003f82   6bdd     CLRF      0xdd,0x1                                                                                        
003f84   d846     RCALL     0x4012         				arm_reset();                                                                 C:\first\v2.0\src\NCSSM\arm.c
003f86   d018     BRA       0x3fb8         			} else {                                                                      C:\first\v2.0\src\NCSSM\arm.c
003f88   0e74     MOVLW     0x74           				error = arm_seekShoulderPosition( P4_POS );                                  C:\first\v2.0\src\NCSSM\arm.c
003f8a   6ee6     MOVWF     0xe6,0x0                                                                                        
003f8c   0e04     MOVLW     0x4                                                                                             
003f8e   6ee6     MOVWF     0xe6,0x0                                                                                        
003f90   ddbc     RCALL     0x3b0a                                                                                          
003f92   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003f94   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003f96   52de     MOVF      0xde,0x1,0x0                                                                                    
003f98   cff3     MOVFF     0xff3,0xfde                                                                                     
003f9a   ffde                                                                                                               
003f9c   cff4     MOVFF     0xff4,0xfdd                                                                                     
003f9e   ffdd                                                                                                               
003fa0   52dd     MOVF      0xdd,0x1,0x0                                                                                    
003fa2   50d9     MOVF      0xd9,0x0,0x0   				if( error == 0 ) {                                                           C:\first\v2.0\src\NCSSM\arm.c
003fa4   0f01     ADDLW     0x1                                                                                             
003fa6   6ee9     MOVWF     0xe9,0x0                                                                                        
003fa8   cfda     MOVFF     0xfda,0xfea                                                                                     
003faa   ffea                                                                                                               
003fac   50ee     MOVF      0xee,0x0,0x0                                                                                    
003fae   10ed     IORWF     0xed,0x0,0x0                                                                                    
003fb0   e103     BNZ       0x3fb8                                                                                          
003fb2   0101     MOVLB     0x1            					state = STATE_IDLE;                                                         C:\first\v2.0\src\NCSSM\arm.c
003fb4   6bdc     CLRF      0xdc,0x1                                                                                        
003fb6   6bdd     CLRF      0xdd,0x1                                                                                        
                                           				}                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           			}                                                                             C:\first\v2.0\src\NCSSM\arm.c
003fb8   d002     BRA       0x3fbe         			break;                                                                        C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           		default:                                                                       C:\first\v2.0\src\NCSSM\arm.c
003fba   6bdc     CLRF      0xdc,0x1       			state = STATE_IDLE;                                                           C:\first\v2.0\src\NCSSM\arm.c
003fbc   6bdd     CLRF      0xdd,0x1                                                                                        
                                           	}                                                                               C:\first\v2.0\src\NCSSM\arm.c
003fbe   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\arm.c
003fc0   ffe1                                                                                                               
003fc2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003fc4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003fc6   ffd9                                                                                                               
003fc8   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
003fca   cfd9     MOVFF     0xfd9,0xfe6    void arm_doFingerOI( int moveUp, int moveDown ) {                                C:\first\v2.0\src\NCSSM\arm.c
003fcc   ffe6                                                                                                               
003fce   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003fd0   ffd9                                                                                                               
003fd2   50d9     MOVF      0xd9,0x0,0x0   	if( moveUp ) {                                                                  C:\first\v2.0\src\NCSSM\arm.c
003fd4   0ffd     ADDLW     0xfd                                                                                            
003fd6   6ee9     MOVWF     0xe9,0x0                                                                                        
003fd8   0eff     MOVLW     0xff                                                                                            
003fda   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003fdc   6eea     MOVWF     0xea,0x0                                                                                        
003fde   50ee     MOVF      0xee,0x0,0x0                                                                                    
003fe0   10ed     IORWF     0xed,0x0,0x0                                                                                    
003fe2   e003     BZ        0x3fea                                                                                          
003fe4   ec29     CALL      0x5852,0x0     		armOutput_moveFingerUp();                                                      C:\first\v2.0\src\NCSSM\arm.c
003fe6   f02c                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
003fe8   d00e     BRA       0x4006         	} else if( moveDown ) {                                                         C:\first\v2.0\src\NCSSM\arm.c
003fea   50d9     MOVF      0xd9,0x0,0x0                                                                                    
003fec   0ffb     ADDLW     0xfb                                                                                            
003fee   6ee9     MOVWF     0xe9,0x0                                                                                        
003ff0   0eff     MOVLW     0xff                                                                                            
003ff2   20da     ADDWFC    0xda,0x0,0x0                                                                                    
003ff4   6eea     MOVWF     0xea,0x0                                                                                        
003ff6   50ee     MOVF      0xee,0x0,0x0                                                                                    
003ff8   10ed     IORWF     0xed,0x0,0x0                                                                                    
003ffa   e003     BZ        0x4002                                                                                          
003ffc   ec25     CALL      0x584a,0x0     		armOutput_moveFingerDown();                                                    C:\first\v2.0\src\NCSSM\arm.c
003ffe   f02c                                                                                                               
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
004000   d002     BRA       0x4006         	} else {                                                                        C:\first\v2.0\src\NCSSM\arm.c
004002   ec2d     CALL      0x585a,0x0     		armOutput_stopFinger();                                                        C:\first\v2.0\src\NCSSM\arm.c
004004   f02c                                                                                                               
                                           	}	                                                                              C:\first\v2.0\src\NCSSM\arm.c
004006   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\NCSSM\arm.c
004008   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00400a   ffd9                                                                                                               
00400c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           void arm_moduleInitialize( void ){                                               C:\first\v2.0\src\NCSSM\arm.c
00400e   ef09     GOTO      0x4012         	arm_reset();                                                                    C:\first\v2.0\src\NCSSM\arm.c
004010   f020                                                                                                               
                                           }                                                                                C:\first\v2.0\src\NCSSM\arm.c
                                                                                                                            C:\first\v2.0\src\NCSSM\arm.c
                                           void arm_reset( void ) {                                                         C:\first\v2.0\src\NCSSM\arm.c
004012   ec31     CALL      0x5862,0x0     	armOutput_stopShoulder();                                                       C:\first\v2.0\src\NCSSM\arm.c
004014   f02c                                                                                                               
004016   ec2d     CALL      0x585a,0x0     	armOutput_stopFinger();                                                         C:\first\v2.0\src\NCSSM\arm.c
004018   f02c                                                                                                               
00401a   0101     MOVLB     0x1            	state = STATE_IDLE;                                                             C:\first\v2.0\src\NCSSM\arm.c
00401c   6bdc     CLRF      0xdc,0x1                                                                                        
00401e   6bdd     CLRF      0xdd,0x1                                                                                        
004020   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\arm.c
                                           #define _armOutput_c                                                             C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           #include "armOutput.h"                                                           C:\first\v2.0\src\NCSSM\armOutput.c
                                           #include "arm.h"                                                                 C:\first\v2.0\src\NCSSM\armOutput.c
                                           #include <ifi_aliases.h>                                                         C:\first\v2.0\src\NCSSM\armOutput.c
                                           #include <ifi_default.h>                                                         C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define STATE_LOCKED 0                                                           C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define STATE_BUMPUP 1                                                           C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define STATE_BUMPDOWN 2                                                         C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define STATE_UNLOCKED 3                                                         C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define BUMP_TIME_SHOULDER_UP 1                                                  C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define BUMP_TIME_SHOULDER_DOWN 1                                                C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define PWM_SHOULDER_STOPPED 127                                                 C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define PWM_SHOULDER_BUMP_UP 127                                                 C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define PWM_SHOULDER_BUMP_DOWN 127                                               C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define BUMP_TIME_FINGER_UP 3                                                    C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define BUMP_TIME_FINGER_DOWN 3                                                  C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define PWM_FINGER_STOPPED 127                                                   C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define PWM_FINGER_BUMP_UP 170                                                   C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define PWM_FINGER_BUMP_DOWN 115                                                 C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           // Define PWM output Values                                                      C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define PWM_SHOULDER_UP 190                                                      C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define PWM_SHOULDER_DOWN  117                                                   C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define PWM_FINGER_UP 190                                                        C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define PWM_FINGER_DOWN 110                                                      C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define sOut pwm03                                                               C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define fOut pwm04                                                               C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define sLockOut relay4_fwd                                                      C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define sUnlockOut relay5_fwd                                                    C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define fLockOut relay6_fwd                                                      C:\first\v2.0\src\NCSSM\armOutput.c
                                           #define fUnlockOut relay7_fwd                                                    C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           static short int sLockState;                                                     C:\first\v2.0\src\NCSSM\armOutput.c
                                           static short int fLockState;                                                     C:\first\v2.0\src\NCSSM\armOutput.c
                                           static short int sBumpCounter;                                                   C:\first\v2.0\src\NCSSM\armOutput.c
                                           static short int fBumpCounter;                                                   C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           static unsigned char suggestedShoulderPWM = 127;                                 C:\first\v2.0\src\NCSSM\armOutput.c
                                           static unsigned char suggestedFingerPWM = 127;                                   C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           static void unlockShoulder( void ) {                                             C:\first\v2.0\src\NCSSM\armOutput.c
005822   888d     BSF       0x8d,0x4,0x0   	sUnlockOut = 1;                                                                 C:\first\v2.0\src\NCSSM\armOutput.c
005824   968d     BCF       0x8d,0x3,0x0   	sLockOut = 0;                                                                   C:\first\v2.0\src\NCSSM\armOutput.c
005826   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           static void lockShoulder( void ) {                                               C:\first\v2.0\src\NCSSM\armOutput.c
005828   868d     BSF       0x8d,0x3,0x0   	sLockOut = 1;                                                                   C:\first\v2.0\src\NCSSM\armOutput.c
00582a   988d     BCF       0x8d,0x4,0x0   	sUnlockOut = 0;                                                                 C:\first\v2.0\src\NCSSM\armOutput.c
00582c   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           static void unlockFinger( void ) {                                               C:\first\v2.0\src\NCSSM\armOutput.c
00582e   8c8d     BSF       0x8d,0x6,0x0   	fUnlockOut = 1;                                                                 C:\first\v2.0\src\NCSSM\armOutput.c
005830   9a8d     BCF       0x8d,0x5,0x0   	fLockOut = 0;                                                                   C:\first\v2.0\src\NCSSM\armOutput.c
005832   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           static void lockFinger( void ) {                                                 C:\first\v2.0\src\NCSSM\armOutput.c
005834   8a8d     BSF       0x8d,0x5,0x0   	fLockOut = 1;                                                                   C:\first\v2.0\src\NCSSM\armOutput.c
005836   9c8d     BCF       0x8d,0x6,0x0   	fUnlockOut = 0;                                                                 C:\first\v2.0\src\NCSSM\armOutput.c
005838   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           void armOutput_moveShoulderUp() {                                                C:\first\v2.0\src\NCSSM\armOutput.c
00583a   0101     MOVLB     0x1            	suggestedShoulderPWM = PWM_SHOULDER_UP;                                         C:\first\v2.0\src\NCSSM\armOutput.c
00583c   0ebe     MOVLW     0xbe                                                                                            
00583e   6ff5     MOVWF     0xf5,0x1                                                                                        
005840   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           void armOutput_moveShoulderDown() {                                              C:\first\v2.0\src\NCSSM\armOutput.c
005842   0101     MOVLB     0x1            	suggestedShoulderPWM = PWM_SHOULDER_DOWN;                                       C:\first\v2.0\src\NCSSM\armOutput.c
005844   0e75     MOVLW     0x75                                                                                            
005846   6ff5     MOVWF     0xf5,0x1                                                                                        
005848   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           void armOutput_moveFingerDown() {                                                C:\first\v2.0\src\NCSSM\armOutput.c
00584a   0101     MOVLB     0x1            	suggestedFingerPWM = PWM_FINGER_DOWN;                                           C:\first\v2.0\src\NCSSM\armOutput.c
00584c   0e6e     MOVLW     0x6e                                                                                            
00584e   6ff6     MOVWF     0xf6,0x1                                                                                        
005850   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           void armOutput_moveFingerUp() {                                                  C:\first\v2.0\src\NCSSM\armOutput.c
005852   0101     MOVLB     0x1            	suggestedFingerPWM = PWM_FINGER_UP;                                             C:\first\v2.0\src\NCSSM\armOutput.c
005854   0ebe     MOVLW     0xbe                                                                                            
005856   6ff6     MOVWF     0xf6,0x1                                                                                        
005858   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           void armOutput_stopFinger() {                                                    C:\first\v2.0\src\NCSSM\armOutput.c
00585a   0101     MOVLB     0x1            	suggestedFingerPWM = PWM_FINGER_STOPPED;                                        C:\first\v2.0\src\NCSSM\armOutput.c
00585c   0e7f     MOVLW     0x7f                                                                                            
00585e   6ff6     MOVWF     0xf6,0x1                                                                                        
005860   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           void armOutput_stopShoulder() {                                                  C:\first\v2.0\src\NCSSM\armOutput.c
005862   0101     MOVLB     0x1            	suggestedShoulderPWM = PWM_SHOULDER_STOPPED;                                    C:\first\v2.0\src\NCSSM\armOutput.c
005864   0e7f     MOVLW     0x7f                                                                                            
005866   6ff5     MOVWF     0xf5,0x1                                                                                        
005868   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           void armOutput_reset( void ) {                                                   C:\first\v2.0\src\NCSSM\armOutput.c
00586a   0101     MOVLB     0x1            	sBumpCounter = 0;                                                               C:\first\v2.0\src\NCSSM\armOutput.c
00586c   6bd0     CLRF      0xd0,0x1                                                                                        
00586e   6bd1     CLRF      0xd1,0x1                                                                                        
005870   6bd2     CLRF      0xd2,0x1       	fBumpCounter = 0;                                                               C:\first\v2.0\src\NCSSM\armOutput.c
005872   6bd3     CLRF      0xd3,0x1                                                                                        
005874   6bcc     CLRF      0xcc,0x1       	sLockState = STATE_LOCKED;                                                      C:\first\v2.0\src\NCSSM\armOutput.c
005876   6bcd     CLRF      0xcd,0x1                                                                                        
005878   6bce     CLRF      0xce,0x1       	fLockState = STATE_LOCKED;                                                      C:\first\v2.0\src\NCSSM\armOutput.c
00587a   6bcf     CLRF      0xcf,0x1                                                                                        
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
00587c   dfd5     RCALL     0x5828         	lockShoulder();                                                                 C:\first\v2.0\src\NCSSM\armOutput.c
00587e   dfda     RCALL     0x5834         	lockFinger();                                                                   C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
005880   0102     MOVLB     0x2            	sOut = PWM_SHOULDER_STOPPED;                                                    C:\first\v2.0\src\NCSSM\armOutput.c
005882   0e7f     MOVLW     0x7f                                                                                            
005884   6f48     MOVWF     0x48,0x1                                                                                        
005886   6f49     MOVWF     0x49,0x1       	fOut = PWM_FINGER_STOPPED;                                                      C:\first\v2.0\src\NCSSM\armOutput.c
005888   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           void armOutput_moduleInitialize()                                                C:\first\v2.0\src\NCSSM\armOutput.c
                                           {                                                                                C:\first\v2.0\src\NCSSM\armOutput.c
00588a   ef35     GOTO      0x586a         	armOutput_reset();                                                              C:\first\v2.0\src\NCSSM\armOutput.c
00588c   f02c                                                                                                               
                                           }                                                                                C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
00588e   cfd9     MOVFF     0xfd9,0xfe6    void armOutput_doShoulderOutput() {                                              C:\first\v2.0\src\NCSSM\armOutput.c
005890   ffe6                                                                                                               
005892   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
005894   ffd9                                                                                                               
005896   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
005898   0e7f     MOVLW     0x7f           	char isInPosition = (suggestedShoulderPWM == PWM_SHOULDER_STOPPED);             C:\first\v2.0\src\NCSSM\armOutput.c
00589a   0101     MOVLB     0x1                                                                                             
00589c   5df5     SUBWF     0xf5,0x0,0x1                                                                                    
00589e   e002     BZ        0x58a4                                                                                          
0058a0   0e00     MOVLW     0x0                                                                                             
0058a2   d001     BRA       0x58a6                                                                                          
0058a4   0e01     MOVLW     0x1                                                                                             
0058a6   6edf     MOVWF     0xdf,0x0                                                                                        
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
0058a8   0e03     MOVLW     0x3            	switch( sLockState ) {                                                          C:\first\v2.0\src\NCSSM\armOutput.c
0058aa   0101     MOVLB     0x1                                                                                             
0058ac   19cc     XORWF     0xcc,0x0,0x1                                                                                    
0058ae   e101     BNZ       0x58b2                                                                                          
0058b0   51cd     MOVF      0xcd,0x0,0x1                                                                                    
0058b2   e05a     BZ        0x5968                                                                                          
0058b4   0e02     MOVLW     0x2                                                                                             
0058b6   19cc     XORWF     0xcc,0x0,0x1                                                                                    
0058b8   e101     BNZ       0x58bc                                                                                          
0058ba   51cd     MOVF      0xcd,0x0,0x1                                                                                    
0058bc   e039     BZ        0x5930                                                                                          
0058be   0e01     MOVLW     0x1                                                                                             
0058c0   19cc     XORWF     0xcc,0x0,0x1                                                                                    
0058c2   e101     BNZ       0x58c6                                                                                          
0058c4   51cd     MOVF      0xcd,0x0,0x1                                                                                    
0058c6   e016     BZ        0x58f4                                                                                          
0058c8   51cc     MOVF      0xcc,0x0,0x1                                                                                    
0058ca   e101     BNZ       0x58ce                                                                                          
0058cc   51cd     MOVF      0xcd,0x0,0x1                                                                                    
0058ce   e001     BZ        0x58d2                                                                                          
0058d0   d084     BRA       0x59da                                                                                          
                                           		case STATE_LOCKED:                                                             C:\first\v2.0\src\NCSSM\armOutput.c
0058d2   50df     MOVF      0xdf,0x0,0x0   			if( ! isInPosition ) {                                                        C:\first\v2.0\src\NCSSM\armOutput.c
0058d4   e10b     BNZ       0x58ec                                                                                          
0058d6   dfa5     RCALL     0x5822         				unlockShoulder();                                                            C:\first\v2.0\src\NCSSM\armOutput.c
0058d8   0102     MOVLB     0x2            				sOut = PWM_SHOULDER_STOPPED;                                                 C:\first\v2.0\src\NCSSM\armOutput.c
0058da   0e7f     MOVLW     0x7f                                                                                            
0058dc   6f48     MOVWF     0x48,0x1                                                                                        
0058de   0e01     MOVLW     0x1            				sBumpCounter = BUMP_TIME_SHOULDER_UP;                                        C:\first\v2.0\src\NCSSM\armOutput.c
0058e0   0101     MOVLB     0x1                                                                                             
0058e2   6fd0     MOVWF     0xd0,0x1                                                                                        
0058e4   6bd1     CLRF      0xd1,0x1                                                                                        
0058e6   6fcc     MOVWF     0xcc,0x1       				sLockState = STATE_BUMPUP;                                                   C:\first\v2.0\src\NCSSM\armOutput.c
0058e8   6bcd     CLRF      0xcd,0x1                                                                                        
0058ea   d003     BRA       0x58f2         			} else {                                                                      C:\first\v2.0\src\NCSSM\armOutput.c
0058ec   0102     MOVLB     0x2            				sOut = PWM_SHOULDER_STOPPED;                                                 C:\first\v2.0\src\NCSSM\armOutput.c
0058ee   0e7f     MOVLW     0x7f                                                                                            
0058f0   6f48     MOVWF     0x48,0x1                                                                                        
                                           			}                                                                             C:\first\v2.0\src\NCSSM\armOutput.c
0058f2   d075     BRA       0x59de         		break;                                                                         C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           		case STATE_BUMPUP:                                                             C:\first\v2.0\src\NCSSM\armOutput.c
0058f4   51d0     MOVF      0xd0,0x0,0x1   			if( sBumpCounter != 0 && !shoulderMaxLimit) {                                 C:\first\v2.0\src\NCSSM\armOutput.c
0058f6   11d1     IORWF     0xd1,0x0,0x1                                                                                    
0058f8   e010     BZ        0x591a                                                                                          
0058fa   0101     MOVLB     0x1                                                                                             
0058fc   35d5     RLCF      0xd5,0x0,0x1                                                                                    
0058fe   e204     BC        0x5908                                                                                          
005900   51d4     MOVF      0xd4,0x0,0x1                                                                                    
005902   08a7     SUBLW     0xa7                                                                                            
005904   0e01     MOVLW     0x1                                                                                             
005906   55d5     SUBFWB    0xd5,0x0,0x1                                                                                    
005908   e208     BC        0x591a                                                                                          
00590a   0102     MOVLB     0x2            				sOut = PWM_SHOULDER_BUMP_UP;                                                 C:\first\v2.0\src\NCSSM\armOutput.c
00590c   0e7f     MOVLW     0x7f                                                                                            
00590e   6f48     MOVWF     0x48,0x1                                                                                        
005910   0101     MOVLB     0x1            				--sBumpCounter;                                                              C:\first\v2.0\src\NCSSM\armOutput.c
005912   07d0     DECF      0xd0,0x1,0x1                                                                                    
005914   0e00     MOVLW     0x0                                                                                             
005916   5bd1     SUBWFB    0xd1,0x1,0x1                                                                                    
005918   d00a     BRA       0x592e         			} else {                                                                      C:\first\v2.0\src\NCSSM\armOutput.c
00591a   0102     MOVLB     0x2            				sOut = PWM_SHOULDER_STOPPED;                                                 C:\first\v2.0\src\NCSSM\armOutput.c
00591c   0e7f     MOVLW     0x7f                                                                                            
00591e   6f48     MOVWF     0x48,0x1                                                                                        
005920   0e01     MOVLW     0x1            				sBumpCounter = BUMP_TIME_SHOULDER_DOWN;                                      C:\first\v2.0\src\NCSSM\armOutput.c
005922   0101     MOVLB     0x1                                                                                             
005924   6fd0     MOVWF     0xd0,0x1                                                                                        
005926   6bd1     CLRF      0xd1,0x1                                                                                        
005928   0e02     MOVLW     0x2            				sLockState = STATE_BUMPDOWN;                                                 C:\first\v2.0\src\NCSSM\armOutput.c
00592a   6fcc     MOVWF     0xcc,0x1                                                                                        
00592c   6bcd     CLRF      0xcd,0x1                                                                                        
                                           			}                                                                             C:\first\v2.0\src\NCSSM\armOutput.c
00592e   d057     BRA       0x59de         		break;                                                                         C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           		case STATE_BUMPDOWN:                                                           C:\first\v2.0\src\NCSSM\armOutput.c
005930   51d0     MOVF      0xd0,0x0,0x1   			if( sBumpCounter != 0 && !shoulderMinLimit ) {                                C:\first\v2.0\src\NCSSM\armOutput.c
005932   11d1     IORWF     0xd1,0x0,0x1                                                                                    
005934   e011     BZ        0x5958                                                                                          
005936   0101     MOVLB     0x1                                                                                             
005938   90d8     BCF       0xd8,0x0,0x0                                                                                    
00593a   51d5     MOVF      0xd5,0x0,0x1                                                                                    
00593c   e604     BN        0x5946                                                                                          
00593e   0ea3     MOVLW     0xa3                                                                                            
005940   5dd4     SUBWF     0xd4,0x0,0x1                                                                                    
005942   0e02     MOVLW     0x2                                                                                             
005944   59d5     SUBWFB    0xd5,0x0,0x1                                                                                    
005946   e208     BC        0x5958                                                                                          
005948   0102     MOVLB     0x2            				sOut = PWM_SHOULDER_BUMP_DOWN;                                               C:\first\v2.0\src\NCSSM\armOutput.c
00594a   0e7f     MOVLW     0x7f                                                                                            
00594c   6f48     MOVWF     0x48,0x1                                                                                        
00594e   0101     MOVLB     0x1            				--sBumpCounter;                                                              C:\first\v2.0\src\NCSSM\armOutput.c
005950   07d0     DECF      0xd0,0x1,0x1                                                                                    
005952   0e00     MOVLW     0x0                                                                                             
005954   5bd1     SUBWFB    0xd1,0x1,0x1                                                                                    
005956   d007     BRA       0x5966         			} else {                                                                      C:\first\v2.0\src\NCSSM\armOutput.c
005958   0102     MOVLB     0x2            				sOut = PWM_SHOULDER_STOPPED;                                                 C:\first\v2.0\src\NCSSM\armOutput.c
00595a   0e7f     MOVLW     0x7f                                                                                            
00595c   6f48     MOVWF     0x48,0x1                                                                                        
00595e   0e03     MOVLW     0x3            				sLockState = STATE_UNLOCKED;                                                 C:\first\v2.0\src\NCSSM\armOutput.c
005960   0101     MOVLB     0x1                                                                                             
005962   6fcc     MOVWF     0xcc,0x1                                                                                        
005964   6bcd     CLRF      0xcd,0x1                                                                                        
                                           			}		                                                                           C:\first\v2.0\src\NCSSM\armOutput.c
005966   d03b     BRA       0x59de         		break;                                                                         C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           		case STATE_UNLOCKED:                                                           C:\first\v2.0\src\NCSSM\armOutput.c
005968   50df     MOVF      0xdf,0x0,0x0   			if( isInPosition ) {                                                          C:\first\v2.0\src\NCSSM\armOutput.c
00596a   e008     BZ        0x597c                                                                                          
00596c   0102     MOVLB     0x2            				sOut = PWM_SHOULDER_STOPPED;                                                 C:\first\v2.0\src\NCSSM\armOutput.c
00596e   0e7f     MOVLW     0x7f                                                                                            
005970   6f48     MOVWF     0x48,0x1                                                                                        
005972   df5a     RCALL     0x5828         				lockShoulder();                                                              C:\first\v2.0\src\NCSSM\armOutput.c
005974   0101     MOVLB     0x1            				sLockState = STATE_LOCKED;                                                   C:\first\v2.0\src\NCSSM\armOutput.c
005976   6bcc     CLRF      0xcc,0x1                                                                                        
005978   6bcd     CLRF      0xcd,0x1                                                                                        
00597a   d02e     BRA       0x59d8         			} else {                                                                      C:\first\v2.0\src\NCSSM\armOutput.c
00597c   0101     MOVLB     0x1            				if( suggestedShoulderPWM > PWM_SHOULDER_STOPPED ) {                          C:\first\v2.0\src\NCSSM\armOutput.c
00597e   51f5     MOVF      0xf5,0x0,0x1                                                                                    
005980   087f     SUBLW     0x7f                                                                                            
005982   e215     BC        0x59ae                                                                                          
                                           					// moving up                                                                C:\first\v2.0\src\NCSSM\armOutput.c
005984   0101     MOVLB     0x1            					if( shoulderMaxLimit ) {                                                    C:\first\v2.0\src\NCSSM\armOutput.c
005986   35d5     RLCF      0xd5,0x0,0x1                                                                                    
005988   e204     BC        0x5992                                                                                          
00598a   51d4     MOVF      0xd4,0x0,0x1                                                                                    
00598c   08a7     SUBLW     0xa7                                                                                            
00598e   0e01     MOVLW     0x1                                                                                             
005990   55d5     SUBFWB    0xd5,0x0,0x1                                                                                    
005992   e30a     BNC       0x59a8                                                                                          
005994   0101     MOVLB     0x1            						suggestedShoulderPWM = PWM_SHOULDER_STOPPED;                               C:\first\v2.0\src\NCSSM\armOutput.c
005996   0e7f     MOVLW     0x7f                                                                                            
005998   6ff5     MOVWF     0xf5,0x1                                                                                        
00599a   0102     MOVLB     0x2            						sOut = PWM_SHOULDER_STOPPED;                                               C:\first\v2.0\src\NCSSM\armOutput.c
00599c   6f48     MOVWF     0x48,0x1                                                                                        
00599e   df44     RCALL     0x5828         						lockShoulder();                                                            C:\first\v2.0\src\NCSSM\armOutput.c
0059a0   0101     MOVLB     0x1            						sLockState = STATE_LOCKED;                                                 C:\first\v2.0\src\NCSSM\armOutput.c
0059a2   6bcc     CLRF      0xcc,0x1                                                                                        
0059a4   6bcd     CLRF      0xcd,0x1                                                                                        
0059a6   d002     BRA       0x59ac         					} else {                                                                    C:\first\v2.0\src\NCSSM\armOutput.c
0059a8   c1f5     MOVFF     0x1f5,0x248    						sOut = suggestedShoulderPWM;                                               C:\first\v2.0\src\NCSSM\armOutput.c
0059aa   f248                                                                                                               
                                           					}                                                                           C:\first\v2.0\src\NCSSM\armOutput.c
0059ac   d015     BRA       0x59d8         				} else {                                                                     C:\first\v2.0\src\NCSSM\armOutput.c
                                           					// moving down                                                              C:\first\v2.0\src\NCSSM\armOutput.c
0059ae   0101     MOVLB     0x1            					if( shoulderMinLimit ) {                                                    C:\first\v2.0\src\NCSSM\armOutput.c
0059b0   90d8     BCF       0xd8,0x0,0x0                                                                                    
0059b2   51d5     MOVF      0xd5,0x0,0x1                                                                                    
0059b4   e604     BN        0x59be                                                                                          
0059b6   0ea3     MOVLW     0xa3                                                                                            
0059b8   5dd4     SUBWF     0xd4,0x0,0x1                                                                                    
0059ba   0e02     MOVLW     0x2                                                                                             
0059bc   59d5     SUBWFB    0xd5,0x0,0x1                                                                                    
0059be   e30a     BNC       0x59d4                                                                                          
0059c0   0101     MOVLB     0x1            						suggestedShoulderPWM = PWM_SHOULDER_STOPPED;                               C:\first\v2.0\src\NCSSM\armOutput.c
0059c2   0e7f     MOVLW     0x7f                                                                                            
0059c4   6ff5     MOVWF     0xf5,0x1                                                                                        
0059c6   0102     MOVLB     0x2            						sOut = PWM_SHOULDER_STOPPED;                                               C:\first\v2.0\src\NCSSM\armOutput.c
0059c8   6f48     MOVWF     0x48,0x1                                                                                        
0059ca   df2e     RCALL     0x5828         						lockShoulder();                                                            C:\first\v2.0\src\NCSSM\armOutput.c
0059cc   0101     MOVLB     0x1            						sLockState = STATE_LOCKED;                                                 C:\first\v2.0\src\NCSSM\armOutput.c
0059ce   6bcc     CLRF      0xcc,0x1                                                                                        
0059d0   6bcd     CLRF      0xcd,0x1                                                                                        
0059d2   d002     BRA       0x59d8         					} else {                                                                    C:\first\v2.0\src\NCSSM\armOutput.c
0059d4   c1f5     MOVFF     0x1f5,0x248    						sOut = suggestedShoulderPWM;                                               C:\first\v2.0\src\NCSSM\armOutput.c
0059d6   f248                                                                                                               
                                           					}                                                                           C:\first\v2.0\src\NCSSM\armOutput.c
                                           				}                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           			}                                                                             C:\first\v2.0\src\NCSSM\armOutput.c
0059d8   d002     BRA       0x59de         		break;                                                                         C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           		default:                                                                       C:\first\v2.0\src\NCSSM\armOutput.c
0059da   6bcc     CLRF      0xcc,0x1       			sLockState = STATE_LOCKED;                                                    C:\first\v2.0\src\NCSSM\armOutput.c
0059dc   6bcd     CLRF      0xcd,0x1                                                                                        
                                           	}                                                                               C:\first\v2.0\src\NCSSM\armOutput.c
0059de   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\NCSSM\armOutput.c
0059e0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0059e2   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0059e4   ffd9                                                                                                               
0059e6   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
0059e8   cfd9     MOVFF     0xfd9,0xfe6    void armOutput_doFingerOutput() {                                                C:\first\v2.0\src\NCSSM\armOutput.c
0059ea   ffe6                                                                                                               
0059ec   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0059ee   ffd9                                                                                                               
0059f0   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
0059f2   0e7f     MOVLW     0x7f           	char isInPosition = (suggestedFingerPWM == PWM_FINGER_STOPPED);                 C:\first\v2.0\src\NCSSM\armOutput.c
0059f4   0101     MOVLB     0x1                                                                                             
0059f6   5df6     SUBWF     0xf6,0x0,0x1                                                                                    
0059f8   e002     BZ        0x59fe                                                                                          
0059fa   0e00     MOVLW     0x0                                                                                             
0059fc   d001     BRA       0x5a00                                                                                          
0059fe   0e01     MOVLW     0x1                                                                                             
005a00   6edf     MOVWF     0xdf,0x0                                                                                        
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
005a02   0e03     MOVLW     0x3            	switch( fLockState ) {                                                          C:\first\v2.0\src\NCSSM\armOutput.c
005a04   0101     MOVLB     0x1                                                                                             
005a06   19ce     XORWF     0xce,0x0,0x1                                                                                    
005a08   e101     BNZ       0x5a0c                                                                                          
005a0a   51cf     MOVF      0xcf,0x0,0x1                                                                                    
005a0c   e04a     BZ        0x5aa2                                                                                          
005a0e   0e02     MOVLW     0x2                                                                                             
005a10   19ce     XORWF     0xce,0x0,0x1                                                                                    
005a12   e101     BNZ       0x5a16                                                                                          
005a14   51cf     MOVF      0xcf,0x0,0x1                                                                                    
005a16   e032     BZ        0x5a7c                                                                                          
005a18   0e01     MOVLW     0x1                                                                                             
005a1a   19ce     XORWF     0xce,0x0,0x1                                                                                    
005a1c   e101     BNZ       0x5a20                                                                                          
005a1e   51cf     MOVF      0xcf,0x0,0x1                                                                                    
005a20   e017     BZ        0x5a50                                                                                          
005a22   51ce     MOVF      0xce,0x0,0x1                                                                                    
005a24   e101     BNZ       0x5a28                                                                                          
005a26   51cf     MOVF      0xcf,0x0,0x1                                                                                    
005a28   e001     BZ        0x5a2c                                                                                          
005a2a   d050     BRA       0x5acc                                                                                          
                                           		case STATE_LOCKED:                                                             C:\first\v2.0\src\NCSSM\armOutput.c
005a2c   50df     MOVF      0xdf,0x0,0x0   			if( ! isInPosition ) {                                                        C:\first\v2.0\src\NCSSM\armOutput.c
005a2e   e10c     BNZ       0x5a48                                                                                          
005a30   defe     RCALL     0x582e         				unlockFinger();                                                              C:\first\v2.0\src\NCSSM\armOutput.c
005a32   0102     MOVLB     0x2            				fOut = PWM_FINGER_STOPPED;                                                   C:\first\v2.0\src\NCSSM\armOutput.c
005a34   0e7f     MOVLW     0x7f                                                                                            
005a36   6f49     MOVWF     0x49,0x1                                                                                        
005a38   0e03     MOVLW     0x3            				fBumpCounter = BUMP_TIME_FINGER_UP;                                          C:\first\v2.0\src\NCSSM\armOutput.c
005a3a   0101     MOVLB     0x1                                                                                             
005a3c   6fd2     MOVWF     0xd2,0x1                                                                                        
005a3e   6bd3     CLRF      0xd3,0x1                                                                                        
005a40   0e01     MOVLW     0x1            				fLockState = STATE_BUMPUP;                                                   C:\first\v2.0\src\NCSSM\armOutput.c
005a42   6fce     MOVWF     0xce,0x1                                                                                        
005a44   6bcf     CLRF      0xcf,0x1                                                                                        
005a46   d003     BRA       0x5a4e         			} else {                                                                      C:\first\v2.0\src\NCSSM\armOutput.c
005a48   0102     MOVLB     0x2            				fOut = PWM_FINGER_STOPPED;                                                   C:\first\v2.0\src\NCSSM\armOutput.c
005a4a   0e7f     MOVLW     0x7f                                                                                            
005a4c   6f49     MOVWF     0x49,0x1                                                                                        
                                           			}                                                                             C:\first\v2.0\src\NCSSM\armOutput.c
005a4e   d040     BRA       0x5ad0         		break;                                                                         C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           		case STATE_BUMPUP:                                                             C:\first\v2.0\src\NCSSM\armOutput.c
005a50   51d2     MOVF      0xd2,0x0,0x1   			if( (fBumpCounter != 0) && !fingerMaxLimit) {                                 C:\first\v2.0\src\NCSSM\armOutput.c
005a52   11d3     IORWF     0xd3,0x0,0x1                                                                                    
005a54   e008     BZ        0x5a66                                                                                          
005a56   0102     MOVLB     0x2            				fOut = PWM_FINGER_BUMP_UP;                                                   C:\first\v2.0\src\NCSSM\armOutput.c
005a58   0eaa     MOVLW     0xaa                                                                                            
005a5a   6f49     MOVWF     0x49,0x1                                                                                        
005a5c   0101     MOVLB     0x1            				--fBumpCounter;                                                              C:\first\v2.0\src\NCSSM\armOutput.c
005a5e   07d2     DECF      0xd2,0x1,0x1                                                                                    
005a60   0e00     MOVLW     0x0                                                                                             
005a62   5bd3     SUBWFB    0xd3,0x1,0x1                                                                                    
005a64   d00a     BRA       0x5a7a         			} else {                                                                      C:\first\v2.0\src\NCSSM\armOutput.c
005a66   0102     MOVLB     0x2            				fOut = PWM_FINGER_STOPPED;                                                   C:\first\v2.0\src\NCSSM\armOutput.c
005a68   0e7f     MOVLW     0x7f                                                                                            
005a6a   6f49     MOVWF     0x49,0x1                                                                                        
005a6c   0e03     MOVLW     0x3            				fBumpCounter = BUMP_TIME_FINGER_DOWN;                                        C:\first\v2.0\src\NCSSM\armOutput.c
005a6e   0101     MOVLB     0x1                                                                                             
005a70   6fd2     MOVWF     0xd2,0x1                                                                                        
005a72   6bd3     CLRF      0xd3,0x1                                                                                        
005a74   0e02     MOVLW     0x2            				fLockState = STATE_BUMPDOWN;                                                 C:\first\v2.0\src\NCSSM\armOutput.c
005a76   6fce     MOVWF     0xce,0x1                                                                                        
005a78   6bcf     CLRF      0xcf,0x1                                                                                        
                                           			}                                                                             C:\first\v2.0\src\NCSSM\armOutput.c
005a7a   d02a     BRA       0x5ad0         		break;                                                                         C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           		case STATE_BUMPDOWN:                                                           C:\first\v2.0\src\NCSSM\armOutput.c
005a7c   51d2     MOVF      0xd2,0x0,0x1   			if( (fBumpCounter != 0) && !fingerMinLimit) {                                 C:\first\v2.0\src\NCSSM\armOutput.c
005a7e   11d3     IORWF     0xd3,0x0,0x1                                                                                    
005a80   e008     BZ        0x5a92                                                                                          
005a82   0102     MOVLB     0x2            				fOut = PWM_FINGER_BUMP_DOWN;                                                 C:\first\v2.0\src\NCSSM\armOutput.c
005a84   0e73     MOVLW     0x73                                                                                            
005a86   6f49     MOVWF     0x49,0x1                                                                                        
005a88   0101     MOVLB     0x1            				--fBumpCounter;                                                              C:\first\v2.0\src\NCSSM\armOutput.c
005a8a   07d2     DECF      0xd2,0x1,0x1                                                                                    
005a8c   0e00     MOVLW     0x0                                                                                             
005a8e   5bd3     SUBWFB    0xd3,0x1,0x1                                                                                    
005a90   d007     BRA       0x5aa0         			} else {                                                                      C:\first\v2.0\src\NCSSM\armOutput.c
005a92   0102     MOVLB     0x2            				fOut = PWM_FINGER_STOPPED;                                                   C:\first\v2.0\src\NCSSM\armOutput.c
005a94   0e7f     MOVLW     0x7f                                                                                            
005a96   6f49     MOVWF     0x49,0x1                                                                                        
005a98   0e03     MOVLW     0x3            				fLockState = STATE_UNLOCKED;                                                 C:\first\v2.0\src\NCSSM\armOutput.c
005a9a   0101     MOVLB     0x1                                                                                             
005a9c   6fce     MOVWF     0xce,0x1                                                                                        
005a9e   6bcf     CLRF      0xcf,0x1                                                                                        
                                           			}		                                                                           C:\first\v2.0\src\NCSSM\armOutput.c
005aa0   d017     BRA       0x5ad0         		break;                                                                         C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           		case STATE_UNLOCKED:                                                           C:\first\v2.0\src\NCSSM\armOutput.c
005aa2   50df     MOVF      0xdf,0x0,0x0   			if( isInPosition ) {                                                          C:\first\v2.0\src\NCSSM\armOutput.c
005aa4   e008     BZ        0x5ab6                                                                                          
005aa6   0102     MOVLB     0x2            				fOut = PWM_FINGER_STOPPED;                                                   C:\first\v2.0\src\NCSSM\armOutput.c
005aa8   0e7f     MOVLW     0x7f                                                                                            
005aaa   6f49     MOVWF     0x49,0x1                                                                                        
005aac   dec3     RCALL     0x5834         				lockFinger();                                                                C:\first\v2.0\src\NCSSM\armOutput.c
005aae   0101     MOVLB     0x1            				fLockState = STATE_LOCKED;                                                   C:\first\v2.0\src\NCSSM\armOutput.c
005ab0   6bce     CLRF      0xce,0x1                                                                                        
005ab2   6bcf     CLRF      0xcf,0x1                                                                                        
005ab4   d00a     BRA       0x5aca         			} else {                                                                      C:\first\v2.0\src\NCSSM\armOutput.c
005ab6   d007     BRA       0x5ac6         				if( (fingerMaxLimit && (suggestedFingerPWM > PWM_FINGER_STOPPED)) || (fingerMinLimit && (suggestedFingerPWM < PWM_FINGER_STOPPED)) )  C:\first\v2.0\src\NCSSM\armOutput.c
                                           				{                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
005ab8   0101     MOVLB     0x1            					suggestedFingerPWM = PWM_FINGER_STOPPED;                                    C:\first\v2.0\src\NCSSM\armOutput.c
005aba   0e7f     MOVLW     0x7f                                                                                            
005abc   6ff6     MOVWF     0xf6,0x1                                                                                        
005abe   deba     RCALL     0x5834         					lockFinger();                                                               C:\first\v2.0\src\NCSSM\armOutput.c
005ac0   0101     MOVLB     0x1            					fLockState = STATE_LOCKED;                                                  C:\first\v2.0\src\NCSSM\armOutput.c
005ac2   6bce     CLRF      0xce,0x1                                                                                        
005ac4   6bcf     CLRF      0xcf,0x1                                                                                        
                                           				}                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
005ac6   c1f6     MOVFF     0x1f6,0x249    				fOut = suggestedFingerPWM;                                                   C:\first\v2.0\src\NCSSM\armOutput.c
005ac8   f249                                                                                                               
                                           			}                                                                             C:\first\v2.0\src\NCSSM\armOutput.c
005aca   d002     BRA       0x5ad0         		break;                                                                         C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                                                                                                            C:\first\v2.0\src\NCSSM\armOutput.c
                                           		default:                                                                       C:\first\v2.0\src\NCSSM\armOutput.c
005acc   6bce     CLRF      0xce,0x1       			fLockState = STATE_LOCKED;                                                    C:\first\v2.0\src\NCSSM\armOutput.c
005ace   6bcf     CLRF      0xcf,0x1                                                                                        
                                           	}                                                                               C:\first\v2.0\src\NCSSM\armOutput.c
005ad0   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\NCSSM\armOutput.c
005ad2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005ad4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
005ad6   ffd9                                                                                                               
005ad8   0012     RETURN    0x0                                                                                             
                                           #define _aut1_c                                                                  C:\first\v2.0\src\NCSSM\aut1.c
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           #include "aut1.h"                                                                C:\first\v2.0\src\NCSSM\aut1.c
                                           #include "speedometer.h"                                                         C:\first\v2.0\src\NCSSM\aut1.c
                                           #include "arm.h"                                                                 C:\first\v2.0\src\NCSSM\aut1.c
                                           #include "user_routines.h"                                                       C:\first\v2.0\src\NCSSM\aut1.c
                                           #include "wheels.h"                                                              C:\first\v2.0\src\NCSSM\aut1.c
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           #define STATE_INITIAL 0                                                          C:\first\v2.0\src\NCSSM\aut1.c
                                           #define WAIT_TURN1 1                                                             C:\first\v2.0\src\NCSSM\aut1.c
                                           #define ARM_TO_POS0 3                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           #define SEEK_FINGER_CENTER 4                                                     C:\first\v2.0\src\NCSSM\aut1.c
                                           #define ARM_TO_POS1 6                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           #define ARM_TO_POS2 7                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           #define END_IDLE 8                                                               C:\first\v2.0\src\NCSSM\aut1.c
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           #define INITIAL_TURN_TARGET   0  // ? needs to be 90deg left                     C:\first\v2.0\src\NCSSM\aut1.c
                                           #define INITIAL_TURN_SPEED    0  // ?                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           #define SHOULDER_POSITION_0   500  // ?? should be our start position            C:\first\v2.0\src\NCSSM\aut1.c
                                           #define SHOULDER_POSITION_1   1000 // ?? way up - needs to bump the tetra        C:\first\v2.0\src\NCSSM\aut1.c
                                           #define SHOULDER_POSITION_2   900  // ?? a little bump down from pos1            C:\first\v2.0\src\NCSSM\aut1.c
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           typedef struct {                                                                 C:\first\v2.0\src\NCSSM\aut1.c
                                           	int turnMonitor_initial;                                                        C:\first\v2.0\src\NCSSM\aut1.c
                                           	int turnMonitor_target;                                                         C:\first\v2.0\src\NCSSM\aut1.c
                                           	int dist_initial;                                                               C:\first\v2.0\src\NCSSM\aut1.c
                                           	int dist_target;                                                                C:\first\v2.0\src\NCSSM\aut1.c
                                           	char aut_state;                                                                 C:\first\v2.0\src\NCSSM\aut1.c
                                           } aut1_struct;                                                                   C:\first\v2.0\src\NCSSM\aut1.c
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           static aut1_struct aut1_data;                                                    C:\first\v2.0\src\NCSSM\aut1.c
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           /**                                                                              C:\first\v2.0\src\NCSSM\aut1.c
                                            * target is target delta between wheel distance.                                C:\first\v2.0\src\NCSSM\aut1.c
                                            * left turn is positive, right turn is negative                                 C:\first\v2.0\src\NCSSM\aut1.c
                                            *                                                                               C:\first\v2.0\src\NCSSM\aut1.c
                                            */                                                                              C:\first\v2.0\src\NCSSM\aut1.c
004ce8   cfd9     MOVFF     0xfd9,0xfe6    static void turnMonitor_start( int target ) {                                    C:\first\v2.0\src\NCSSM\aut1.c
004cea   ffe6                                                                                                               
004cec   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004cee   ffd9                                                                                                               
004cf0   0e14     MOVLW     0x14           	aut1_data.turnMonitor_initial = speedometer_getDistance( &speedometer_right ) - speedometer_getDistance( &speedometer_left ); C:\first\v2.0\src\NCSSM\aut1.c
004cf2   6ee6     MOVWF     0xe6,0x0                                                                                        
004cf4   0e01     MOVLW     0x1                                                                                             
004cf6   6ee6     MOVWF     0xe6,0x0                                                                                        
004cf8   ec28     CALL      0x2c50,0x0                                                                                      
004cfa   f016                                                                                                               
004cfc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004cfe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d00   c01b     MOVFF     0x1b,0x2f                                                                                       
004d02   f02f                                                                                                               
004d04   c01c     MOVFF     0x1c,0x30                                                                                       
004d06   f030                                                                                                               
004d08   c01d     MOVFF     0x1d,0x31                                                                                       
004d0a   f031                                                                                                               
004d0c   c01e     MOVFF     0x1e,0x32                                                                                       
004d0e   f032                                                                                                               
004d10   c02f     MOVFF     0x2f,0xfe6                                                                                      
004d12   ffe6                                                                                                               
004d14   c030     MOVFF     0x30,0xfe6                                                                                      
004d16   ffe6                                                                                                               
004d18   c031     MOVFF     0x31,0xfe6                                                                                      
004d1a   ffe6                                                                                                               
004d1c   c032     MOVFF     0x32,0xfe6                                                                                      
004d1e   ffe6                                                                                                               
004d20   0e00     MOVLW     0x0                                                                                             
004d22   6ee6     MOVWF     0xe6,0x0                                                                                        
004d24   0e01     MOVLW     0x1                                                                                             
004d26   6ee6     MOVWF     0xe6,0x0                                                                                        
004d28   ec28     CALL      0x2c50,0x0                                                                                      
004d2a   f016                                                                                                               
004d2c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d2e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d30   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d32   cfe7     MOVFF     0xfe7,0x32                                                                                      
004d34   f032                                                                                                               
004d36   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d38   cfe7     MOVFF     0xfe7,0x31                                                                                      
004d3a   f031                                                                                                               
004d3c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d3e   cfe7     MOVFF     0xfe7,0x30                                                                                      
004d40   f030                                                                                                               
004d42   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d44   cfe7     MOVFF     0xfe7,0x2f                                                                                      
004d46   f02f                                                                                                               
004d48   501b     MOVF      0x1b,0x0,0x0                                                                                    
004d4a   5c2f     SUBWF     0x2f,0x0,0x0                                                                                    
004d4c   6e2b     MOVWF     0x2b,0x0                                                                                        
004d4e   501c     MOVF      0x1c,0x0,0x0                                                                                    
004d50   5830     SUBWFB    0x30,0x0,0x0                                                                                    
004d52   6e2c     MOVWF     0x2c,0x0                                                                                        
004d54   501d     MOVF      0x1d,0x0,0x0                                                                                    
004d56   5831     SUBWFB    0x31,0x0,0x0                                                                                    
004d58   6e2d     MOVWF     0x2d,0x0                                                                                        
004d5a   501e     MOVF      0x1e,0x0,0x0                                                                                    
004d5c   5832     SUBWFB    0x32,0x0,0x0                                                                                    
004d5e   6e2e     MOVWF     0x2e,0x0                                                                                        
004d60   c02b     MOVFF     0x2b,0x7eb                                                                                      
004d62   f7eb                                                                                                               
004d64   c02c     MOVFF     0x2c,0x7ec                                                                                      
004d66   f7ec                                                                                                               
004d68   0efd     MOVLW     0xfd           	aut1_data.turnMonitor_target = aut1_data.turnMonitor_initial + target;          C:\first\v2.0\src\NCSSM\aut1.c
004d6a   50db     MOVF      0xdb,0x0,0x0                                                                                    
004d6c   0107     MOVLB     0x7                                                                                             
004d6e   25eb     ADDWF     0xeb,0x0,0x1                                                                                    
004d70   6fed     MOVWF     0xed,0x1                                                                                        
004d72   0efe     MOVLW     0xfe                                                                                            
004d74   50db     MOVF      0xdb,0x0,0x0                                                                                    
004d76   21ec     ADDWFC    0xec,0x0,0x1                                                                                    
004d78   6fee     MOVWF     0xee,0x1                                                                                        
004d7a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\NCSSM\aut1.c
004d7c   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004d7e   ffd9                                                                                                               
004d80   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
004d82   cfd9     MOVFF     0xfd9,0xfe6    static char turnMonitor_isDone( void ) {                                         C:\first\v2.0\src\NCSSM\aut1.c
004d84   ffe6                                                                                                               
004d86   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004d88   ffd9                                                                                                               
004d8a   0e02     MOVLW     0x2                                                                                             
004d8c   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
004d8e   0e14     MOVLW     0x14           	int actualDelta = speedometer_getDistance( &speedometer_right ) - speedometer_getDistance( &speedometer_left ); C:\first\v2.0\src\NCSSM\aut1.c
004d90   6ee6     MOVWF     0xe6,0x0                                                                                        
004d92   0e01     MOVLW     0x1                                                                                             
004d94   6ee6     MOVWF     0xe6,0x0                                                                                        
004d96   ec28     CALL      0x2c50,0x0                                                                                      
004d98   f016                                                                                                               
004d9a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d9c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004d9e   c01b     MOVFF     0x1b,0x2f                                                                                       
004da0   f02f                                                                                                               
004da2   c01c     MOVFF     0x1c,0x30                                                                                       
004da4   f030                                                                                                               
004da6   c01d     MOVFF     0x1d,0x31                                                                                       
004da8   f031                                                                                                               
004daa   c01e     MOVFF     0x1e,0x32                                                                                       
004dac   f032                                                                                                               
004dae   c02f     MOVFF     0x2f,0xfe6                                                                                      
004db0   ffe6                                                                                                               
004db2   c030     MOVFF     0x30,0xfe6                                                                                      
004db4   ffe6                                                                                                               
004db6   c031     MOVFF     0x31,0xfe6                                                                                      
004db8   ffe6                                                                                                               
004dba   c032     MOVFF     0x32,0xfe6                                                                                      
004dbc   ffe6                                                                                                               
004dbe   0e00     MOVLW     0x0                                                                                             
004dc0   6ee6     MOVWF     0xe6,0x0                                                                                        
004dc2   0e01     MOVLW     0x1                                                                                             
004dc4   6ee6     MOVWF     0xe6,0x0                                                                                        
004dc6   ec28     CALL      0x2c50,0x0                                                                                      
004dc8   f016                                                                                                               
004dca   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004dcc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004dce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004dd0   cfe7     MOVFF     0xfe7,0x32                                                                                      
004dd2   f032                                                                                                               
004dd4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004dd6   cfe7     MOVFF     0xfe7,0x31                                                                                      
004dd8   f031                                                                                                               
004dda   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ddc   cfe7     MOVFF     0xfe7,0x30                                                                                      
004dde   f030                                                                                                               
004de0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004de2   cfe7     MOVFF     0xfe7,0x2f                                                                                      
004de4   f02f                                                                                                               
004de6   501b     MOVF      0x1b,0x0,0x0                                                                                    
004de8   5c2f     SUBWF     0x2f,0x0,0x0                                                                                    
004dea   6e2b     MOVWF     0x2b,0x0                                                                                        
004dec   501c     MOVF      0x1c,0x0,0x0                                                                                    
004dee   5830     SUBWFB    0x30,0x0,0x0                                                                                    
004df0   6e2c     MOVWF     0x2c,0x0                                                                                        
004df2   501d     MOVF      0x1d,0x0,0x0                                                                                    
004df4   5831     SUBWFB    0x31,0x0,0x0                                                                                    
004df6   6e2d     MOVWF     0x2d,0x0                                                                                        
004df8   501e     MOVF      0x1e,0x0,0x0                                                                                    
004dfa   5832     SUBWFB    0x32,0x0,0x0                                                                                    
004dfc   6e2e     MOVWF     0x2e,0x0                                                                                        
004dfe   c02b     MOVFF     0x2b,0xfde                                                                                      
004e00   ffde                                                                                                               
004e02   c02c     MOVFF     0x2c,0xfdd                                                                                      
004e04   ffdd                                                                                                               
004e06   0107     MOVLB     0x7            	if( aut1_data.turnMonitor_target > 0 ) {                                        C:\first\v2.0\src\NCSSM\aut1.c
004e08   35ee     RLCF      0xee,0x0,0x1                                                                                    
004e0a   e204     BC        0x4e14                                                                                          
004e0c   51ed     MOVF      0xed,0x0,0x1                                                                                    
004e0e   0800     SUBLW     0x0                                                                                             
004e10   0e00     MOVLW     0x0                                                                                             
004e12   55ee     SUBFWB    0xee,0x0,0x1                                                                                    
004e14   e214     BC        0x4e3e                                                                                          
004e16   cfde     MOVFF     0xfde,0x2b     		return (actualDelta >= aut1_data.turnMonitor_target);                          C:\first\v2.0\src\NCSSM\aut1.c
004e18   f02b                                                                                                               
004e1a   cfdd     MOVFF     0xfdd,0x2c                                                                                      
004e1c   f02c                                                                                                               
004e1e   502c     MOVF      0x2c,0x0,0x0                                                                                    
004e20   19ee     XORWF     0xee,0x0,0x1                                                                                    
004e22   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
004e24   d002     BRA       0x4e2a                                                                                          
004e26   35ee     RLCF      0xee,0x0,0x1                                                                                    
004e28   d004     BRA       0x4e32                                                                                          
004e2a   51ed     MOVF      0xed,0x0,0x1                                                                                    
004e2c   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
004e2e   51ee     MOVF      0xee,0x0,0x1                                                                                    
004e30   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
004e32   e202     BC        0x4e38                                                                                          
004e34   0e00     MOVLW     0x0                                                                                             
004e36   d001     BRA       0x4e3a                                                                                          
004e38   0e01     MOVLW     0x1                                                                                             
004e3a   d023     BRA       0x4e82                                                                                          
004e3c   d022     BRA       0x4e82         	} else if (aut1_data.turnMonitor_target < 0 ) {                                 C:\first\v2.0\src\NCSSM\aut1.c
004e3e   0e80     MOVLW     0x80                                                                                            
004e40   15ee     ANDWF     0xee,0x0,0x1                                                                                    
004e42   e014     BZ        0x4e6c                                                                                          
004e44   cfde     MOVFF     0xfde,0x2b     		return (actualDelta <= aut1_data.turnMonitor_target);                          C:\first\v2.0\src\NCSSM\aut1.c
004e46   f02b                                                                                                               
004e48   cfdd     MOVFF     0xfdd,0x2c                                                                                      
004e4a   f02c                                                                                                               
004e4c   51ee     MOVF      0xee,0x0,0x1                                                                                    
004e4e   182c     XORWF     0x2c,0x0,0x0                                                                                    
004e50   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
004e52   d002     BRA       0x4e58                                                                                          
004e54   342c     RLCF      0x2c,0x0,0x0                                                                                    
004e56   d004     BRA       0x4e60                                                                                          
004e58   502b     MOVF      0x2b,0x0,0x0                                                                                    
004e5a   5ded     SUBWF     0xed,0x0,0x1                                                                                    
004e5c   502c     MOVF      0x2c,0x0,0x0                                                                                    
004e5e   59ee     SUBWFB    0xee,0x0,0x1                                                                                    
004e60   e202     BC        0x4e66                                                                                          
004e62   0e00     MOVLW     0x0                                                                                             
004e64   d001     BRA       0x4e68                                                                                          
004e66   0e01     MOVLW     0x1                                                                                             
004e68   d00c     BRA       0x4e82                                                                                          
004e6a   d00b     BRA       0x4e82         	} else {                                                                        C:\first\v2.0\src\NCSSM\aut1.c
004e6c   cfd9     MOVFF     0xfd9,0xfe9    		return (actualDelta==0);                                                       C:\first\v2.0\src\NCSSM\aut1.c
004e6e   ffe9                                                                                                               
004e70   cfda     MOVFF     0xfda,0xfea                                                                                     
004e72   ffea                                                                                                               
004e74   50ee     MOVF      0xee,0x0,0x0                                                                                    
004e76   10ed     IORWF     0xed,0x0,0x0                                                                                    
004e78   e002     BZ        0x4e7e                                                                                          
004e7a   0e00     MOVLW     0x0                                                                                             
004e7c   d001     BRA       0x4e80                                                                                          
004e7e   0e01     MOVLW     0x1                                                                                             
004e80   d000     BRA       0x4e82                                                                                          
                                           	}                                                                               C:\first\v2.0\src\NCSSM\aut1.c
004e82   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\aut1.c
004e84   ffe1                                                                                                               
004e86   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004e88   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004e8a   ffd9                                                                                                               
004e8c   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           /**                                                                              C:\first\v2.0\src\NCSSM\aut1.c
                                            * target is delta between avg(left,right) current and avg(left,right) target    C:\first\v2.0\src\NCSSM\aut1.c
                                            * roughly target is is distance to be travled.                                  C:\first\v2.0\src\NCSSM\aut1.c
                                            * forward is positive, reverse is negative                                      C:\first\v2.0\src\NCSSM\aut1.c
                                            */                                                                              C:\first\v2.0\src\NCSSM\aut1.c
004e8e   cfd9     MOVFF     0xfd9,0xfe6    static void distance_start( int target ) {                                       C:\first\v2.0\src\NCSSM\aut1.c
004e90   ffe6                                                                                                               
004e92   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004e94   ffd9                                                                                                               
                                           	aut1_data.dist_initial =                                                        C:\first\v2.0\src\NCSSM\aut1.c
004e96   0e14     MOVLW     0x14           		(speedometer_getDistance( &speedometer_right ) + speedometer_getDistance( &speedometer_left ))/2; C:\first\v2.0\src\NCSSM\aut1.c
004e98   6ee6     MOVWF     0xe6,0x0                                                                                        
004e9a   0e01     MOVLW     0x1                                                                                             
004e9c   6ee6     MOVWF     0xe6,0x0                                                                                        
004e9e   ec28     CALL      0x2c50,0x0                                                                                      
004ea0   f016                                                                                                               
004ea2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ea4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ea6   c01b     MOVFF     0x1b,0x2b                                                                                       
004ea8   f02b                                                                                                               
004eaa   c01c     MOVFF     0x1c,0x2c                                                                                       
004eac   f02c                                                                                                               
004eae   c01d     MOVFF     0x1d,0x2d                                                                                       
004eb0   f02d                                                                                                               
004eb2   c01e     MOVFF     0x1e,0x2e                                                                                       
004eb4   f02e                                                                                                               
004eb6   c02b     MOVFF     0x2b,0xfe6                                                                                      
004eb8   ffe6                                                                                                               
004eba   c02c     MOVFF     0x2c,0xfe6                                                                                      
004ebc   ffe6                                                                                                               
004ebe   c02d     MOVFF     0x2d,0xfe6                                                                                      
004ec0   ffe6                                                                                                               
004ec2   c02e     MOVFF     0x2e,0xfe6                                                                                      
004ec4   ffe6                                                                                                               
004ec6   0e00     MOVLW     0x0                                                                                             
004ec8   6ee6     MOVWF     0xe6,0x0                                                                                        
004eca   0e01     MOVLW     0x1                                                                                             
004ecc   6ee6     MOVWF     0xe6,0x0                                                                                        
004ece   ec28     CALL      0x2c50,0x0                                                                                      
004ed0   f016                                                                                                               
004ed2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ed4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ed6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ed8   cfe7     MOVFF     0xfe7,0x2e                                                                                      
004eda   f02e                                                                                                               
004edc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ede   cfe7     MOVFF     0xfe7,0x2d                                                                                      
004ee0   f02d                                                                                                               
004ee2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004ee4   cfe7     MOVFF     0xfe7,0x2c                                                                                      
004ee6   f02c                                                                                                               
004ee8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004eea   cfe7     MOVFF     0xfe7,0x2b                                                                                      
004eec   f02b                                                                                                               
004eee   502b     MOVF      0x2b,0x0,0x0                                                                                    
004ef0   241b     ADDWF     0x1b,0x0,0x0                                                                                    
004ef2   6e1b     MOVWF     0x1b,0x0                                                                                        
004ef4   502c     MOVF      0x2c,0x0,0x0                                                                                    
004ef6   201c     ADDWFC    0x1c,0x0,0x0                                                                                    
004ef8   6e1c     MOVWF     0x1c,0x0                                                                                        
004efa   502d     MOVF      0x2d,0x0,0x0                                                                                    
004efc   201d     ADDWFC    0x1d,0x0,0x0                                                                                    
004efe   6e1d     MOVWF     0x1d,0x0                                                                                        
004f00   502e     MOVF      0x2e,0x0,0x0                                                                                    
004f02   201e     ADDWFC    0x1e,0x0,0x0                                                                                    
004f04   6e1e     MOVWF     0x1e,0x0                                                                                        
004f06   0e02     MOVLW     0x2                                                                                             
004f08   6e20     MOVWF     0x20,0x0                                                                                        
004f0a   6a21     CLRF      0x21,0x0                                                                                        
004f0c   6a22     CLRF      0x22,0x0                                                                                        
004f0e   6a23     CLRF      0x23,0x0                                                                                        
004f10   ec78     CALL      0x64f0,0x0                                                                                      
004f12   f032                                                                                                               
004f14   c01b     MOVFF     0x1b,0x7ef                                                                                      
004f16   f7ef                                                                                                               
004f18   c01c     MOVFF     0x1c,0x7f0                                                                                      
004f1a   f7f0                                                                                                               
004f1c   0efd     MOVLW     0xfd           	aut1_data.dist_target = aut1_data.dist_initial + target;                        C:\first\v2.0\src\NCSSM\aut1.c
004f1e   50db     MOVF      0xdb,0x0,0x0                                                                                    
004f20   0107     MOVLB     0x7                                                                                             
004f22   25ef     ADDWF     0xef,0x0,0x1                                                                                    
004f24   6ff1     MOVWF     0xf1,0x1                                                                                        
004f26   0efe     MOVLW     0xfe                                                                                            
004f28   50db     MOVF      0xdb,0x0,0x0                                                                                    
004f2a   21f0     ADDWFC    0xf0,0x0,0x1                                                                                    
004f2c   6ff2     MOVWF     0xf2,0x1                                                                                        
004f2e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\first\v2.0\src\NCSSM\aut1.c
004f30   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
004f32   ffd9                                                                                                               
004f34   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
004f36   cfd9     MOVFF     0xfd9,0xfe6    static char distance_isDone( void ) {                                            C:\first\v2.0\src\NCSSM\aut1.c
004f38   ffe6                                                                                                               
004f3a   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
004f3c   ffd9                                                                                                               
004f3e   0e02     MOVLW     0x2                                                                                             
004f40   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           	int actualDelta =                                                               C:\first\v2.0\src\NCSSM\aut1.c
004f42   0e14     MOVLW     0x14           		(speedometer_getDistance( &speedometer_right ) + speedometer_getDistance( &speedometer_left ))/2; C:\first\v2.0\src\NCSSM\aut1.c
004f44   6ee6     MOVWF     0xe6,0x0                                                                                        
004f46   0e01     MOVLW     0x1                                                                                             
004f48   6ee6     MOVWF     0xe6,0x0                                                                                        
004f4a   ec28     CALL      0x2c50,0x0                                                                                      
004f4c   f016                                                                                                               
004f4e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004f50   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004f52   c01b     MOVFF     0x1b,0x2b                                                                                       
004f54   f02b                                                                                                               
004f56   c01c     MOVFF     0x1c,0x2c                                                                                       
004f58   f02c                                                                                                               
004f5a   c01d     MOVFF     0x1d,0x2d                                                                                       
004f5c   f02d                                                                                                               
004f5e   c01e     MOVFF     0x1e,0x2e                                                                                       
004f60   f02e                                                                                                               
004f62   c02b     MOVFF     0x2b,0xfe6                                                                                      
004f64   ffe6                                                                                                               
004f66   c02c     MOVFF     0x2c,0xfe6                                                                                      
004f68   ffe6                                                                                                               
004f6a   c02d     MOVFF     0x2d,0xfe6                                                                                      
004f6c   ffe6                                                                                                               
004f6e   c02e     MOVFF     0x2e,0xfe6                                                                                      
004f70   ffe6                                                                                                               
004f72   0e00     MOVLW     0x0                                                                                             
004f74   6ee6     MOVWF     0xe6,0x0                                                                                        
004f76   0e01     MOVLW     0x1                                                                                             
004f78   6ee6     MOVWF     0xe6,0x0                                                                                        
004f7a   ec28     CALL      0x2c50,0x0                                                                                      
004f7c   f016                                                                                                               
004f7e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004f80   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004f82   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004f84   cfe7     MOVFF     0xfe7,0x2e                                                                                      
004f86   f02e                                                                                                               
004f88   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004f8a   cfe7     MOVFF     0xfe7,0x2d                                                                                      
004f8c   f02d                                                                                                               
004f8e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004f90   cfe7     MOVFF     0xfe7,0x2c                                                                                      
004f92   f02c                                                                                                               
004f94   52e5     MOVF      0xe5,0x1,0x0                                                                                    
004f96   cfe7     MOVFF     0xfe7,0x2b                                                                                      
004f98   f02b                                                                                                               
004f9a   502b     MOVF      0x2b,0x0,0x0                                                                                    
004f9c   241b     ADDWF     0x1b,0x0,0x0                                                                                    
004f9e   6e1b     MOVWF     0x1b,0x0                                                                                        
004fa0   502c     MOVF      0x2c,0x0,0x0                                                                                    
004fa2   201c     ADDWFC    0x1c,0x0,0x0                                                                                    
004fa4   6e1c     MOVWF     0x1c,0x0                                                                                        
004fa6   502d     MOVF      0x2d,0x0,0x0                                                                                    
004fa8   201d     ADDWFC    0x1d,0x0,0x0                                                                                    
004faa   6e1d     MOVWF     0x1d,0x0                                                                                        
004fac   502e     MOVF      0x2e,0x0,0x0                                                                                    
004fae   201e     ADDWFC    0x1e,0x0,0x0                                                                                    
004fb0   6e1e     MOVWF     0x1e,0x0                                                                                        
004fb2   0e02     MOVLW     0x2                                                                                             
004fb4   6e20     MOVWF     0x20,0x0                                                                                        
004fb6   6a21     CLRF      0x21,0x0                                                                                        
004fb8   6a22     CLRF      0x22,0x0                                                                                        
004fba   6a23     CLRF      0x23,0x0                                                                                        
004fbc   ec78     CALL      0x64f0,0x0                                                                                      
004fbe   f032                                                                                                               
004fc0   c01b     MOVFF     0x1b,0xfde                                                                                      
004fc2   ffde                                                                                                               
004fc4   c01c     MOVFF     0x1c,0xfdd                                                                                      
004fc6   ffdd                                                                                                               
004fc8   0107     MOVLB     0x7            	if( aut1_data.dist_target > 0 ) {                                               C:\first\v2.0\src\NCSSM\aut1.c
004fca   35f2     RLCF      0xf2,0x0,0x1                                                                                    
004fcc   e204     BC        0x4fd6                                                                                          
004fce   51f1     MOVF      0xf1,0x0,0x1                                                                                    
004fd0   0800     SUBLW     0x0                                                                                             
004fd2   0e00     MOVLW     0x0                                                                                             
004fd4   55f2     SUBFWB    0xf2,0x0,0x1                                                                                    
004fd6   e214     BC        0x5000                                                                                          
004fd8   cfde     MOVFF     0xfde,0x2b     		return (actualDelta >= aut1_data.dist_target);                                 C:\first\v2.0\src\NCSSM\aut1.c
004fda   f02b                                                                                                               
004fdc   cfdd     MOVFF     0xfdd,0x2c                                                                                      
004fde   f02c                                                                                                               
004fe0   502c     MOVF      0x2c,0x0,0x0                                                                                    
004fe2   19f2     XORWF     0xf2,0x0,0x1                                                                                    
004fe4   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
004fe6   d002     BRA       0x4fec                                                                                          
004fe8   35f2     RLCF      0xf2,0x0,0x1                                                                                    
004fea   d004     BRA       0x4ff4                                                                                          
004fec   51f1     MOVF      0xf1,0x0,0x1                                                                                    
004fee   5c2b     SUBWF     0x2b,0x0,0x0                                                                                    
004ff0   51f2     MOVF      0xf2,0x0,0x1                                                                                    
004ff2   582c     SUBWFB    0x2c,0x0,0x0                                                                                    
004ff4   e202     BC        0x4ffa                                                                                          
004ff6   0e00     MOVLW     0x0                                                                                             
004ff8   d001     BRA       0x4ffc                                                                                          
004ffa   0e01     MOVLW     0x1                                                                                             
004ffc   d023     BRA       0x5044                                                                                          
004ffe   d022     BRA       0x5044         	} else if (aut1_data.turnMonitor_target < 0 ) {                                 C:\first\v2.0\src\NCSSM\aut1.c
005000   0e80     MOVLW     0x80                                                                                            
005002   15ee     ANDWF     0xee,0x0,0x1                                                                                    
005004   e014     BZ        0x502e                                                                                          
005006   cfde     MOVFF     0xfde,0x2b     		return (actualDelta <= aut1_data.dist_target);                                 C:\first\v2.0\src\NCSSM\aut1.c
005008   f02b                                                                                                               
00500a   cfdd     MOVFF     0xfdd,0x2c                                                                                      
00500c   f02c                                                                                                               
00500e   51f2     MOVF      0xf2,0x0,0x1                                                                                    
005010   182c     XORWF     0x2c,0x0,0x0                                                                                    
005012   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
005014   d002     BRA       0x501a                                                                                          
005016   342c     RLCF      0x2c,0x0,0x0                                                                                    
005018   d004     BRA       0x5022                                                                                          
00501a   502b     MOVF      0x2b,0x0,0x0                                                                                    
00501c   5df1     SUBWF     0xf1,0x0,0x1                                                                                    
00501e   502c     MOVF      0x2c,0x0,0x0                                                                                    
005020   59f2     SUBWFB    0xf2,0x0,0x1                                                                                    
005022   e202     BC        0x5028                                                                                          
005024   0e00     MOVLW     0x0                                                                                             
005026   d001     BRA       0x502a                                                                                          
005028   0e01     MOVLW     0x1                                                                                             
00502a   d00c     BRA       0x5044                                                                                          
00502c   d00b     BRA       0x5044         	} else {                                                                        C:\first\v2.0\src\NCSSM\aut1.c
00502e   cfd9     MOVFF     0xfd9,0xfe9    		return (actualDelta == 0);                                                     C:\first\v2.0\src\NCSSM\aut1.c
005030   ffe9                                                                                                               
005032   cfda     MOVFF     0xfda,0xfea                                                                                     
005034   ffea                                                                                                               
005036   50ee     MOVF      0xee,0x0,0x0                                                                                    
005038   10ed     IORWF     0xed,0x0,0x0                                                                                    
00503a   e002     BZ        0x5040                                                                                          
00503c   0e00     MOVLW     0x0                                                                                             
00503e   d001     BRA       0x5042                                                                                          
005040   0e01     MOVLW     0x1                                                                                             
005042   d000     BRA       0x5044                                                                                          
                                           	}                                                                               C:\first\v2.0\src\NCSSM\aut1.c
005044   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\first\v2.0\src\NCSSM\aut1.c
005046   ffe1                                                                                                               
005048   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00504a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00504c   ffd9                                                                                                               
00504e   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           void aut1_reset( void ) {                                                        C:\first\v2.0\src\NCSSM\aut1.c
005050   0107     MOVLB     0x7            	aut1_data.aut_state = STATE_INITIAL;                                            C:\first\v2.0\src\NCSSM\aut1.c
005052   6bf3     CLRF      0xf3,0x1                                                                                        
005054   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\aut1.c
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           void aut1_moduleInitialize( void ) {                                             C:\first\v2.0\src\NCSSM\aut1.c
005056   0107     MOVLB     0x7            	aut1_data.turnMonitor_initial = 0;                                              C:\first\v2.0\src\NCSSM\aut1.c
005058   6beb     CLRF      0xeb,0x1                                                                                        
00505a   6bec     CLRF      0xec,0x1                                                                                        
00505c   6bed     CLRF      0xed,0x1       	aut1_data.turnMonitor_target = 0;                                               C:\first\v2.0\src\NCSSM\aut1.c
00505e   6bee     CLRF      0xee,0x1                                                                                        
005060   ef28     GOTO      0x5050         	aut1_reset();                                                                   C:\first\v2.0\src\NCSSM\aut1.c
005062   f028                                                                                                               
                                           }                                                                                C:\first\v2.0\src\NCSSM\aut1.c
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           void aut1_doMain( void ) {                                                       C:\first\v2.0\src\NCSSM\aut1.c
005064   0101     MOVLB     0x1            	if( ur_data.aut_reset ) {                                                       C:\first\v2.0\src\NCSSM\aut1.c
005066   a5f0     BTFSS     0xf0,0x2,0x1                                                                                    
005068   d002     BRA       0x506e                                                                                          
00506a   95f0     BCF       0xf0,0x2,0x1   		ur_data.aut_reset = 0;                                                         C:\first\v2.0\src\NCSSM\aut1.c
00506c   dff1     RCALL     0x5050         		aut1_reset();                                                                  C:\first\v2.0\src\NCSSM\aut1.c
                                           	}                                                                               C:\first\v2.0\src\NCSSM\aut1.c
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
00506e   0107     MOVLB     0x7            	switch( aut1_data.aut_state ) {                                                 C:\first\v2.0\src\NCSSM\aut1.c
005070   51f3     MOVF      0xf3,0x0,0x1                                                                                    
005072   0a07     XORLW     0x7                                                                                             
005074   e039     BZ        0x50e8                                                                                          
005076   0a01     XORLW     0x1                                                                                             
005078   e024     BZ        0x50c2                                                                                          
00507a   0a07     XORLW     0x7                                                                                             
00507c   e014     BZ        0x50a6                                                                                          
00507e   0a01     XORLW     0x1                                                                                             
005080   e001     BZ        0x5084                                                                                          
                                           		case STATE_INITIAL:                                                            C:\first\v2.0\src\NCSSM\aut1.c
005084   0e00     MOVLW     0x0            			turnMonitor_start( INITIAL_TURN_TARGET );                                     C:\first\v2.0\src\NCSSM\aut1.c
005086   6ee6     MOVWF     0xe6,0x0                                                                                        
005088   6ae6     CLRF      0xe6,0x0                                                                                        
00508a   de2e     RCALL     0x4ce8                                                                                          
00508c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00508e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
005090   0e00     MOVLW     0x0            			wheels_setTurningSpeed( INITIAL_TURN_SPEED );                                 C:\first\v2.0\src\NCSSM\aut1.c
005092   6ee6     MOVWF     0xe6,0x0                                                                                        
005094   6ae6     CLRF      0xe6,0x0                                                                                        
005096   ecad     CALL      0x155a,0x0                                                                                      
005098   f00a                                                                                                               
00509a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00509c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00509e   0107     MOVLB     0x7            			aut1_data.aut_state = WAIT_TURN1;                                             C:\first\v2.0\src\NCSSM\aut1.c
0050a0   0e01     MOVLW     0x1                                                                                             
0050a2   6ff3     MOVWF     0xf3,0x1                                                                                        
0050a4   d034     BRA       0x510e         		break;                                                                         C:\first\v2.0\src\NCSSM\aut1.c
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           		case WAIT_TURN1:                                                               C:\first\v2.0\src\NCSSM\aut1.c
0050a6   de6d     RCALL     0x4d82         			if( turnMonitor_isDone() ) {                                                  C:\first\v2.0\src\NCSSM\aut1.c
0050a8   0900     IORLW     0x0                                                                                             
0050aa   e00a     BZ        0x50c0                                                                                          
0050ac   0e00     MOVLW     0x0            				wheels_setTurningSpeed( 0 );                                                 C:\first\v2.0\src\NCSSM\aut1.c
0050ae   6ee6     MOVWF     0xe6,0x0                                                                                        
0050b0   6ae6     CLRF      0xe6,0x0                                                                                        
0050b2   ecad     CALL      0x155a,0x0                                                                                      
0050b4   f00a                                                                                                               
0050b6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0050b8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0050ba   0107     MOVLB     0x7            				aut1_data.aut_state = ARM_TO_POS1;                                           C:\first\v2.0\src\NCSSM\aut1.c
0050bc   0e06     MOVLW     0x6                                                                                             
0050be   6ff3     MOVWF     0xf3,0x1                                                                                        
                                           			}                                                                             C:\first\v2.0\src\NCSSM\aut1.c
0050c0   d026     BRA       0x510e         		break;                                                                         C:\first\v2.0\src\NCSSM\aut1.c
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           		case ARM_TO_POS1:                                                              C:\first\v2.0\src\NCSSM\aut1.c
0050c2   0ee8     MOVLW     0xe8           			if( 0 == arm_seekShoulderPosition( SHOULDER_POSITION_1 ) ) {                  C:\first\v2.0\src\NCSSM\aut1.c
0050c4   6ee6     MOVWF     0xe6,0x0                                                                                        
0050c6   0e03     MOVLW     0x3                                                                                             
0050c8   6ee6     MOVWF     0xe6,0x0                                                                                        
0050ca   ec85     CALL      0x3b0a,0x0                                                                                      
0050cc   f01d                                                                                                               
0050ce   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0050d0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0050d2   cff3     MOVFF     0xff3,0x2b                                                                                      
0050d4   f02b                                                                                                               
0050d6   cff4     MOVFF     0xff4,0x2c                                                                                      
0050d8   f02c                                                                                                               
0050da   502b     MOVF      0x2b,0x0,0x0                                                                                    
0050dc   102c     IORWF     0x2c,0x0,0x0                                                                                    
0050de   e103     BNZ       0x50e6                                                                                          
0050e0   0107     MOVLB     0x7            				aut1_data.aut_state = ARM_TO_POS2;                                           C:\first\v2.0\src\NCSSM\aut1.c
0050e2   0e07     MOVLW     0x7                                                                                             
0050e4   6ff3     MOVWF     0xf3,0x1                                                                                        
                                           			}                                                                             C:\first\v2.0\src\NCSSM\aut1.c
0050e6   d013     BRA       0x510e         		break;                                                                         C:\first\v2.0\src\NCSSM\aut1.c
                                           		                                                                               C:\first\v2.0\src\NCSSM\aut1.c
                                           		case ARM_TO_POS2:                                                              C:\first\v2.0\src\NCSSM\aut1.c
0050e8   0e84     MOVLW     0x84           			if( 0 == arm_seekShoulderPosition( SHOULDER_POSITION_2 ) ) {                  C:\first\v2.0\src\NCSSM\aut1.c
0050ea   6ee6     MOVWF     0xe6,0x0                                                                                        
0050ec   0e03     MOVLW     0x3                                                                                             
0050ee   6ee6     MOVWF     0xe6,0x0                                                                                        
0050f0   ec85     CALL      0x3b0a,0x0                                                                                      
0050f2   f01d                                                                                                               
0050f4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0050f6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0050f8   cff3     MOVFF     0xff3,0x2b                                                                                      
0050fa   f02b                                                                                                               
0050fc   cff4     MOVFF     0xff4,0x2c                                                                                      
0050fe   f02c                                                                                                               
005100   502b     MOVF      0x2b,0x0,0x0                                                                                    
005102   102c     IORWF     0x2c,0x0,0x0                                                                                    
005104   e103     BNZ       0x510c                                                                                          
005106   0107     MOVLB     0x7            				aut1_data.aut_state = ARM_TO_POS1;                                           C:\first\v2.0\src\NCSSM\aut1.c
005108   0e06     MOVLW     0x6                                                                                             
00510a   6ff3     MOVWF     0xf3,0x1                                                                                        
                                           			}                                                                             C:\first\v2.0\src\NCSSM\aut1.c
00510c   d000     BRA       0x510e         		break;                                                                         C:\first\v2.0\src\NCSSM\aut1.c
                                                                                                                            C:\first\v2.0\src\NCSSM\aut1.c
                                           		default:                                                                       C:\first\v2.0\src\NCSSM\aut1.c
005082   d045     BRA       0x510e         		break;                                                                         C:\first\v2.0\src\NCSSM\aut1.c
                                           	}                                                                               C:\first\v2.0\src\NCSSM\aut1.c
00510e   0012     RETURN    0x0            }                                                                                C:\first\v2.0\src\NCSSM\aut1.c
                                           ;	RCS Header $Id: aarg.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB3                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB7		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB2                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB6		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB1                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB5		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           REMB0                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB4		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AARGB0		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           AEXP		RES 1       ; 8 bit biased exponent for argument A                         C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   GLOBAL  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                           	GLOBAL  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\aarg.asm
                                                   LIST P=18F8520                                                           C:\MCC18\SRC\TRADIT~1\PROC\p18f8520.asm
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\PROC\p18f8520.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\PROC\p18f8520.asm
                                           ;	RCS Header $Id: barg.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BARGB0		RES 1       ; most significant byte of argument B                        C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           BEXP		RES 1       ; 8 bit biased exponent for argument B                         C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   GLOBAL  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\barg.asm
                                           /* $Id: adcbusy.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           /****************************************************************                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Function Name:  BusyADC                                    *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Return Value:   char: 1 - A/D busy, 0 - Done converting    *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Parameters:     void                                       *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *    Description:    This routine checks the GO bit to see if   *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           *                    the A/D conversion is done.                *                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           ****************************************************************/                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           char BusyADC(void)                                                               C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                             /* If the GO bit is set then A/D is busy converting                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                              * Otherwise A/D is done converting                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                              */                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
00080e   50c2     MOVF      0xc2,0x0,0x0     return(ADCON0bits.GO);                                                         C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
000810   0b02     ANDLW     0x2                                                                                             
000812   e001     BZ        0x816                                                                                           
000814   0e01     MOVLW     0x1                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
000816   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcbusy.c
                                                   LIST                                                                     C:\mcc18\mpasm\p18f8520.inc
                                                                                                                            C:\mcc18\mpasm\p18f8520.inc
                                           ;==========================================================================      C:\mcc18\mpasm\p18f8520.inc
                                           ;  $Id: P18F8520.INC,v 1.11 2004/10/12 21:31:37 curtiss Exp $                    C:\mcc18\mpasm\p18f8520.inc
                                           ;  MPASM PIC18F8520 processor include                                            C:\mcc18\mpasm\p18f8520.inc
                                           ;                                                                                C:\mcc18\mpasm\p18f8520.inc
                                           ;  (c) Copyright 1999-2004 Microchip Technology, All rights reserved             C:\mcc18\mpasm\p18f8520.inc
                                           ;==========================================================================      C:\mcc18\mpasm\p18f8520.inc
                                                                                                                            C:\mcc18\mpasm\p18f8520.inc
                                                   LIST                                                                     C:\mcc18\mpasm\p18f8520.inc
                                           /* $Id: adcclose.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           /************************************************************************        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Function Name:  CloseADC                                           *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Return Value:   void                                               *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Parameters:     void                                               *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *    Description:    This routine turns the A/D off and disables        *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           *                    the A/D interrupt                                  *        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           ************************************************************************/        C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           void CloseADC(void)                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
0066e0   90c2     BCF       0xc2,0x0,0x0     ADCON0bits.ADON = 0;                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
0066e2   9c9d     BCF       0x9d,0x6,0x0     PIE1bits.ADIE = 0;                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
0066e4   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcclose.c
                                           /* $Id: adcconv.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Function Name:  ConvertADC                                     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Parameters:     void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *    Description:    This routine starts an A/D conversion by       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           *                    setting the GO bit.                            *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           void ConvertADC(void)                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
0066e6   82c2     BSF       0xc2,0x1,0x0     ADCON0bits.GO = 1;  // Set the GO bit to start a conversion                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
0066e8   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcconv.c
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Function Name: Delay10TCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Description:   This routine delays for multiples of 10          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 10 Tcy.       *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  A value of 1 to 255 provides 10 to 2550   Tcy    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  delay.  A value of 0 will provide a delay of     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;*                  2560 Tcy.                                        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10TCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           Delay10TCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0066a4   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0066a6   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0066a8   4ee8     DCFSNZ    0xe8,0x1,0x0       dcfsnz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0066aa   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10x                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0066ac   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0066ae   d000     BRA       0x66b0             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0066b0   d000     BRA       0x66b2             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0066b2   d000     BRA       0x66b4             bra     $+2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           D10_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0066b4   2ee8     DECFSZ    0xe8,0x1,0x0       decfsz  WREG,1                                                               C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0066b6   d7fa     BRA       0x66ac             bra     D10x                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
0066b8   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               GLOBAL  Delay10TCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d10tcyx.asm
                                           #include "p18cxxx.inc"                                                           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                   LIST                                                                     C:\MCC18\MPASM\p18cxxx.inc
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\p18cxxx.inc
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\p18cxxx.inc
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\p18cxxx.inc
                                             ENDIF                                                                          C:\MCC18\MPASM\p18cxxx.inc
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;/********************************************************************           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Function Name: Delay1KTCYx                                      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Return Value:  void                                             *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Parameters:    unit:                                            *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Description:   This routine delays for multiples of 1000        *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  instruction cycles that is specified in unit.    *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*   Special Note:  This routine provides multiples of 1000 Tcy      *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  A value of 1 to 255 to provides 1000 to          *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  255000 Tcy delay.  A value of 0 will provide     *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;*                  a delay of 256000 Tcy.                           *           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           ;********************************************************************/           C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               EXTERN  DelayCounter1                                                        C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1KTCYXCODE CODE                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           Delay1KTCYx                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006668   0eff     MOVLW     0xff               movlw   0xff                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00666a   50e3     MOVF      0xe3,0x0,0x0       movf    PLUSW1,0                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00666c   6e3f     MOVWF     0x3f,0x0           movwf   DelayCounter1                                                        C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00666e   0e48     MOVLW     0x48               movlw   0x48                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006670   d001     BRA       0x6674             bra     D1K_1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1Kx                                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006672   0e4c     MOVLW     0x4c               movlw   0x4c                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           D1K_1                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006674   6ee7     MOVWF     0xe7,0x0           movwf   INDF1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006676   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz  INDF1,1                                                              C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006678   d7fe     BRA       0x6676             bra     $-2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00667a   6ae7     CLRF      0xe7,0x0           clrf    INDF1                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00667c   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz  INDF1,1                                                              C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
00667e   d7fe     BRA       0x667c             bra     $-2                                                                  C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006680   2e3f     DECFSZ    0x3f,0x1,0x0       decfsz  DelayCounter1,1                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006682   d7f7     BRA       0x6672             bra     D1Kx                                                                 C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006684   0000     NOP                          nop                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
006686   0012     RETURN    0x0                return                                                                       C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               GLOBAL  Delay1KTCYx                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\d1ktcyx.asm
                                           DELAYDAT1      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           DelayCounter1  RES 1                                                             C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                                          GLOBAL DelayCounter1                                              C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           	       END                                                                      C:\MCC18\SRC\TRADIT~1\DELAYS\delayd1.asm
                                           ;	RCS Header $Id: cmath18.asm,v 1.4 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           SIGN		RES 1       ; save location for sign in MSB                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           FPFLAGSbits                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           FPFLAGS		RES 1       ; floating point library exception flags                    C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   GLOBAL  SIGN, FPFLAGS, FPFLAGSbits                                       C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\cmath18.asm
                                           ;	RCS Header $Id: fxd1616s.asm,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       16/16 Bit Signed Fixed Point Divide 16/16 -> 16.16                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Input:  16 bit fixed point dividend in AARGB0, AARGB1                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;               16 bit fixed point divisor in BARGB0, BARGB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Use:    CALL    FXD1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Output: 16 bit fixed point quotient in AARGB0, AARGB1                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;               16 bit fixed point remainder in REMB0, REMB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       Result: AARG, REM  <--  AARG / BARG                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	Testing from 100000 trials:                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;		min	max	mean                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;	Timing:	28	149	85.17	clks                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;       PM: 33            DM: 8                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		EXTERN	FXD1616U                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           FXD1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		GLOBAL		FXD1616S                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f58   6a25     CLRF      0x25,0x0       		CLRF		SIGN		; clear sign                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f5a   ae23     BTFSS     0x23,0x7,0x0           BTFSS   	BARGB0,MSB                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f5c   efb5     GOTO      0x5f6a                 GOTO    	DA1616S                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f5e   f02f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f60   6c22     NEGF      0x22,0x0               NEGF    	BARGB1		; if BARG<0, negate and toggle sign                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f62   1e23     COMF      0x23,0x1,0x0           COMF    	BARGB0,F                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f64   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f66   2223     ADDWFC    0x23,0x1,0x0   		ADDWFC		BARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f68   1e25     COMF      0x25,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           DA1616S                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f6a   ae1e     BTFSS     0x1e,0x7,0x0   		BTFSS       AARGB0,MSB                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f6c   efbd     GOTO      0x5f7a                 GOTO        D1616S                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f6e   f02f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f70   6c1d     NEGF      0x1d,0x0               NEGF        AARGB1		; if AARG<0, negate and toggle sign                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f72   1e1e     COMF      0x1e,0x1,0x0           COMF        AARGB0,F                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f74   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f76   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f78   1e25     COMF      0x25,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616S                                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f7a   ecd7     CALL      0x65ae,0x0     		CALL		FXD1616U                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f7c   f032                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f7e   be1e     BTFSC     0x1e,0x7,0x0   		BTFSC		AARGB0,MSB	; test for exception                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f80   efcd     GOTO      0x5f9a         		GOTO		D1616SX                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f82   f02f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SOK                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f84   ae25     BTFSS     0x25,0x7,0x0   		BTFSS       SIGN,MSB                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f86   0c00     RETLW     0x0            		RETLW		0x00                                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SNEG                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f88   6c1d     NEGF      0x1d,0x0               NEGF        AARGB1		; negate if result negative                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f8a   1e1e     COMF      0x1e,0x1,0x0           COMF        AARGB0,F                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f8c   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f8e   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f90   6c19     NEGF      0x19,0x0       		NEGF        REMB1                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f92   1e1a     COMF      0x1a,0x1,0x0           COMF        REMB0,F                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f94   6ae8     CLRF      0xe8,0x0               CLRF		WREG                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f96   221a     ADDWFC    0x1a,0x1,0x0   		ADDWFC		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f98   0c00     RETLW     0x0                    RETLW       0x00                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           D1616SX                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f9a   be25     BTFSC     0x25,0x7,0x0   		BTFSC		SIGN,MSB                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f9c   efc4     GOTO      0x5f88         		GOTO		D1616SNEG                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005f9e   f02f                                                                                                               
005fa0   8826     BSF       0x26,0x4,0x0   		BSF			FPFLAGS,NAN	; NAN exception if AARG=0x8000                               C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           								; with positive sign                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
005fa2   0cff     RETLW     0xff           		RETLW		0xFF                                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd1616s.asm
                                           /*** Unsigned Integer Division: 16-bit by 16-bit                                 C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***                                                                             C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***       for: Saved (for the worst case) at least 5*16 = 80 instruction cycles C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                            ***/                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           void FXD1616U (/*unsigned arg0, unsigned arg1*/)                                 C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             // use INDF1 for the counter...                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                 _asm                                                                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // REM = 0                                                                   C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065ae   6a1a     CLRF      0x1a,0x0           clrf REMB0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065b0   6a19     CLRF      0x19,0x0           clrf REMB1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // INDF1 = 16                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065b2   0e10     MOVLW     0x10               movlw 16                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065b4   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               // Clear the carry                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065b6   90d8     BCF       0xd8,0x0,0x0   	bcf STATUS, 0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           loop:                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//AARG16 <<= 1; Carry is always clear at this point.                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065b8   361d     RLCF      0x1d,0x1,0x0   	rlcf AARGB1, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065ba   361e     RLCF      0x1e,0x1,0x0   	rlcf AARGB0, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//PROD = (PROD << 1) | (AARG16 >> 16)                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065bc   3619     RLCF      0x19,0x1,0x0   	rlcf REMB1, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065be   361a     RLCF      0x1a,0x1,0x0   	rlcf REMB0, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	//if (PROD >= BARG16)                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065c0   5022     MOVF      0x22,0x0,0x0   	movf BARGB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065c2   5c19     SUBWF     0x19,0x0,0x0   	subwf REMB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065c4   5023     MOVF      0x23,0x0,0x0   	movf BARGB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065c6   581a     SUBWFB    0x1a,0x0,0x0   	subwfb REMB0, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065c8   e305     BNC       0x65d4         	bnc endloop                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               //{                                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	    //PROD -= BARG16;                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065ca   5022     MOVF      0x22,0x0,0x0   	    movf BARGB1, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065cc   5e19     SUBWF     0x19,0x1,0x0   	    subwf REMB1, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065ce   5023     MOVF      0x23,0x0,0x0   	    movf BARGB0, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065d0   5a1a     SUBWFB    0x1a,0x1,0x0   	    subwfb REMB0, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           	    //++AARG16; Since AARG16 was shift to the left above, the increment will    C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                   //          simply set the LSbit. Using incf also clears the carry, which C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                   //          means we don't have to clear the carry at the top of the loop. C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065d2   2a1d     INCF      0x1d,0x1,0x0           incf AARGB1, 1, 0                                                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                               //}                                                                          C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           endloop:                                                                         C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065d4   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065d6   d7f0     BRA       0x65b8             bra loop                                                                     C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             _endasm                                                                        C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                             /* result in AARG already... */                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
0065d8   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxd1616u.c
                                           ;	RCS Header $Id: fxd3232s.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       32/32 Bit Signed Fixed Point Divide 32/32 -> 32.32                       C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Input:  32 bit fixed point dividend in AARGB0, AARGB1, AARGB2            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;               32 bit fixed point divisor in BARGB0, BARGB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Use:    CALL    FXD3232S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Output: 32 bit fixed point quotient in AARGB0, AARGB1, AARGB2            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;               32 bit fixed point remainder in REMB0, REMB1                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       Result: AARG, REM  <--  AARG / BARG                                      C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	Testing from 100000 trials:                                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;		min	max	mean                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;	Timing:	32	410	127.22	clks                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;       PM: 50             DM: 12                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           ;---------------------------------------------------------------------------------------------- C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		EXTERN		FXD3232U                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           FXD3232S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		GLOBAL		FXD3232S                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fa4   6a25     CLRF      0x25,0x0       		CLRF		SIGN		; clear sign                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fa6   6ae8     CLRF      0xe8,0x0       		CLRF		WREG                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fa8   ae23     BTFSS     0x23,0x7,0x0   		BTFSS		BARGB0,MSB                                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005faa   efdf     GOTO      0x5fbe         		GOTO 		DA3232S                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fac   f02f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fae   6c20     NEGF      0x20,0x0       		NEGF 		BARGB3		; if BARG<0, negate and toggle sign                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fb0   1e21     COMF      0x21,0x1,0x0   		COMF 		BARGB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fb2   1e22     COMF      0x22,0x1,0x0   		COMF 		BARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fb4   1e23     COMF      0x23,0x1,0x0   		COMF 		BARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fb6   2221     ADDWFC    0x21,0x1,0x0   		ADDWFC		BARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fb8   2222     ADDWFC    0x22,0x1,0x0   		ADDWFC		BARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fba   2223     ADDWFC    0x23,0x1,0x0   		ADDWFC		BARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fbc   1e25     COMF      0x25,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           DA3232S                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fbe   ae1e     BTFSS     0x1e,0x7,0x0   		BTFSS       AARGB0,MSB                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fc0   efea     GOTO      0x5fd4         		GOTO        D3232S                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fc2   f02f                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fc4   6c1b     NEGF      0x1b,0x0       		NEGF        AARGB3		; if AARG<0, negate and toggle sign                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fc6   1e1c     COMF      0x1c,0x1,0x0   		COMF        AARGB2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fc8   1e1d     COMF      0x1d,0x1,0x0   		COMF        AARGB1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fca   1e1e     COMF      0x1e,0x1,0x0   		COMF        AARGB0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fcc   221c     ADDWFC    0x1c,0x1,0x0   		ADDWFC      AARGB2,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fce   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC      AARGB1,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fd0   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC      AARGB0,F                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fd2   1e25     COMF      0x25,0x1,0x0   		COMF		SIGN,F                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232S                                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fd4   ec78     CALL      0x64f0,0x0     		CALL		FXD3232U                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fd6   f032                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fd8   be1e     BTFSC     0x1e,0x7,0x0   		BTFSC		AARGB0,MSB	; test for exception                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fda   ef01     GOTO      0x6002         		GOTO		D3232SX                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fdc   f030                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SOK                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fde   ae25     BTFSS     0x25,0x7,0x0   		BTFSS       SIGN,MSB                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fe0   0c00     RETLW     0x0                    RETLW       0x00                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SNEG                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fe2   6c1b     NEGF      0x1b,0x0       		NEGF  		AARGB3		; negate if result negative                                    C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fe4   1e1c     COMF      0x1c,0x1,0x0   		COMF  		AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fe6   1e1d     COMF      0x1d,0x1,0x0   		COMF  		AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fe8   1e1e     COMF      0x1e,0x1,0x0   		COMF  		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fea   6ae8     CLRF      0xe8,0x0       		CLRF  		WREG                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fec   221c     ADDWFC    0x1c,0x1,0x0   		ADDWFC		AARGB2,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005fee   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC		AARGB1,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005ff0   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC		AARGB0,F                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005ff2   6c17     NEGF      0x17,0x0       		NEGF  		REMB3                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005ff4   1e18     COMF      0x18,0x1,0x0   		COMF  		REMB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005ff6   1e19     COMF      0x19,0x1,0x0   		COMF  		REMB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005ff8   1e1a     COMF      0x1a,0x1,0x0   		COMF  		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005ffa   2218     ADDWFC    0x18,0x1,0x0   		ADDWFC		REMB2,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005ffc   2219     ADDWFC    0x19,0x1,0x0   		ADDWFC		REMB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
005ffe   221a     ADDWFC    0x1a,0x1,0x0   		ADDWFC		REMB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
006000   0c00     RETLW     0x0            		RETLW 		0x00                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           D3232SX                                                                          C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
006002   be25     BTFSC     0x25,0x7,0x0   		BTFSC		SIGN,MSB                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
006004   eff1     GOTO      0x5fe2         		GOTO		D3232SNEG                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
006006   f02f                                                                                                               
006008   8826     BSF       0x26,0x4,0x0   		BSF			FPFLAGS,NAN	; NAN exception if AARG=0x800000                             C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
00600a   0cff     RETLW     0xff           		RETLW		0xFF		; with positive sign                                              C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxd3232s.asm
                                           /*** Unsigned Integer Division: 32-bit by 32-bit                                 C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***                                                                             C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            *** Optimized: Dec. 21, 2000                                                    C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***        by: Daniel R. Madill, Quanser Consulting Inc.                        C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***       for: Saved (for the worst case) at least 8*32 = 256 instruction cycles C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***            over the code supplied with MCC18 v1.00.12                       C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                            ***/                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           void  FXD3232U(void/* ulong aarg, ulong barg */)                                 C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             // use INDF1 for the counter...                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               _asm                                                                         C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // REM = 0                                                                   C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0064f0   6a1a     CLRF      0x1a,0x0           clrf REMB0, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0064f2   6a19     CLRF      0x19,0x0           clrf REMB1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0064f4   6a18     CLRF      0x18,0x0           clrf REMB2, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0064f6   6a17     CLRF      0x17,0x0           clrf REMB3, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // INDF1 = 32                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0064f8   0e20     MOVLW     0x20               movlw 32                                                                     C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0064fa   6ee7     MOVWF     0xe7,0x0           movwf INDF1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               // Clear the carry                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0064fc   90d8     BCF       0xd8,0x0,0x0       bcf STATUS, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           loop:                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//AARG32 <<= 1; The carry is always clear at the top of the loop.               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
0064fe   361b     RLCF      0x1b,0x1,0x0   	rlcf AARGB3, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006500   361c     RLCF      0x1c,0x1,0x0   	rlcf AARGB2, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006502   361d     RLCF      0x1d,0x1,0x0   	rlcf AARGB1, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006504   361e     RLCF      0x1e,0x1,0x0   	rlcf AARGB0, 1, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//REM32 = (REM32 << 1) | (AARG32 >> 32)                                         C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006506   3617     RLCF      0x17,0x1,0x0   	rlcf REMB3, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006508   3618     RLCF      0x18,0x1,0x0   	rlcf REMB2, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00650a   3619     RLCF      0x19,0x1,0x0   	rlcf REMB1, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00650c   361a     RLCF      0x1a,0x1,0x0   	rlcf REMB0, 1, 0                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	//if (PROD >= BARG32)                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00650e   5020     MOVF      0x20,0x0,0x0   	movf BARGB3, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006510   5c17     SUBWF     0x17,0x0,0x0   	subwf REMB3, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006512   5021     MOVF      0x21,0x0,0x0   	movf BARGB2, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006514   5818     SUBWFB    0x18,0x0,0x0   	subwfb REMB2, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006516   5022     MOVF      0x22,0x0,0x0   	movf BARGB1, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006518   5819     SUBWFB    0x19,0x0,0x0   	subwfb REMB1, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00651a   5023     MOVF      0x23,0x0,0x0   	movf BARGB0, 0, 0                                                               C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00651c   581a     SUBWFB    0x1a,0x0,0x0   	subwfb REMB0, 0, 0                                                              C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00651e   e309     BNC       0x6532         	bnc _false                                                                      C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               //{                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	    //REM32-= BARG32;                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006520   5020     MOVF      0x20,0x0,0x0   	    movf BARGB3, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006522   5e17     SUBWF     0x17,0x1,0x0   	    subwf REMB3, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006524   5021     MOVF      0x21,0x0,0x0   	    movf BARGB2, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006526   5a18     SUBWFB    0x18,0x1,0x0   	    subwfb REMB2, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006528   5022     MOVF      0x22,0x0,0x0   	    movf BARGB1, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00652a   5a19     SUBWFB    0x19,0x1,0x0   	    subwfb REMB1, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00652c   5023     MOVF      0x23,0x0,0x0   	    movf BARGB0, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
00652e   5a1a     SUBWFB    0x1a,0x1,0x0   	    subwfb REMB0, 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           	    //++AARG32; Since AARG32 was shift to the left above, we only need to set   C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                   //          the lowest bit. Use incf so that the carry flag will also be cleared. C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                   //          Thus, the carry will always be clear at the top of the loop. C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006530   2a1b     INCF      0x1b,0x1,0x0   	    incf AARGB3, 1, 0                                                           C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                               //}                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           _false:                                                                          C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006532   2ee7     DECFSZ    0xe7,0x1,0x0       decfsz INDF1, 1, 0    // does not affect the carry bit                       C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006534   d7e4     BRA       0x64fe             bra loop                                                                     C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             /* result in AARG already... */                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                             _endasm                                                                        C:\mcc18\src\TRADIT~1\math\fxd3232u.c
006536   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxd3232u.c
                                           ;	RCS Header $Id: fxm1616s.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           	include <TEMPARG.INC>		; TEMPARG declarations                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: temparg.inc,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                   EXTERN  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       16x16 Bit Signed Fixed Point Multiply 16 x 16 -> 32                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Input:  16 bit signed fixed point multiplicand in AARGB0, AARGB1         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               16 bit signed fixed point multiplier in BARGB0, BARGB1           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Use:    CALL    FXM1616S                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Output: 32 bit signed fixed point product in AARGB0, AARGB1,             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;               AARGB2, AARGB3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Result: AARG  <--  AARG * BARG                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Max Timing:     39 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       Min Timing:     31 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;       PM: 38              DM: 8                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           FXM1616S                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		GLOBAL	FXM1616S                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00600c   c01e     MOVFF     0x1e,0x2a      		MOVFF	AARGB0,TEMPB0                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00600e   f02a                                                                                                               
006010   c01d     MOVFF     0x1d,0x29      		MOVFF	AARGB1,TEMPB1	                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006012   f029                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006014   501d     MOVF      0x1d,0x0,0x0   		MOVF	AARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006016   0222     MULWF     0x22,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006018   cff4     MOVFF     0xff4,0x1c     		MOVFF	PRODH,AARGB2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00601a   f01c                                                                                                               
00601c   cff3     MOVFF     0xff3,0x1b     		MOVFF	PRODL,AARGB3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00601e   f01b                                                                                                               
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006020   501e     MOVF      0x1e,0x0,0x0   		MOVF	AARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006022   0223     MULWF     0x23,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006024   cff4     MOVFF     0xff4,0x1e     		MOVFF	PRODH,AARGB0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006026   f01e                                                                                                               
006028   cff3     MOVFF     0xff3,0x1d     		MOVFF	PRODL,AARGB1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00602a   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00602c   0222     MULWF     0x22,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00602e   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006030   261c     ADDWF     0x1c,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006032   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006034   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006036   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006038   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00603a   5029     MOVF      0x29,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00603c   0223     MULWF     0x23,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00603e   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006040   261c     ADDWF     0x1c,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006042   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006044   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006046   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006048   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00604a   ae23     BTFSS     0x23,0x7,0x0   		BTFSS	BARGB0,MSB                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00604c   ef2c     GOTO      0x6058         		GOTO	TSIGN1616A                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00604e   f030                                                                                                               
006050   5029     MOVF      0x29,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006052   5e1d     SUBWF     0x1d,0x1,0x0   		SUBWF	AARGB1,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006054   502a     MOVF      0x2a,0x0,0x0   		MOVF	TEMPB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006056   5a1e     SUBWFB    0x1e,0x1,0x0   		SUBWFB	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           TSIGN1616A                                                                       C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006058   ae2a     BTFSS     0x2a,0x7,0x0   		BTFSS	TEMPB0,MSB                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00605a   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00605c   5022     MOVF      0x22,0x0,0x0   		MOVF	BARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
00605e   5e1d     SUBWF     0x1d,0x1,0x0   		SUBWF	AARGB1,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006060   5023     MOVF      0x23,0x0,0x0   		MOVF	BARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006062   5a1e     SUBWFB    0x1e,0x1,0x0   		SUBWFB	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
006064   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616s.asm
                                           ;	RCS Header $Id: fxm1616u.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           	include <P18CXXX.INC>		; general Golden Gate definitions                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           	include <CMATH18.INC>		; Math library definitions                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;	RCS Header $Id: cmath18.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ;	$Revision: 1.2 $                                                               C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                               LIST                                                                         C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                           ; CMATH18.INC  v1.0  Microchip Technology, Inc. / F.J. Testa                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\MATH\CMATH18.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           	include <AARG.INC>		; AARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;	RCS Header $Id: aarg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN	AARGB0, AARGB1, AARGB2, AARGB3                                           C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                                   EXTERN  AARGB4, AARGB5, AARGB6, AARGB7                                   C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  AEXP                                                                    C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	EXTERN  REMB3, REMB2, REMB1, REMB0                                              C:\MCC18\SRC\TRADIT~1\MATH\AARG.INC
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           	include <BARG.INC>		; BARG declarations                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;	RCS Header $Id: barg.inc,v 1.2 2004/10/01 19:13:22 GrosbaJ Exp $               C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BARGB3, BARGB2, BARGB1, BARGB0                                   C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                   EXTERN  BEXP                                                             C:\MCC18\SRC\TRADIT~1\MATH\BARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           	include <TEMPARG.INC>		; TEMPARG declarations                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;	RCS Header $Id: temparg.inc,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                           ;       CMATH18 DATA DECLARATION FILE                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                   EXTERN  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\TEMPARG.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;********************************************************************************************** C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       16x16 Bit Unsigned Fixed Point Multiply 16 x 16 -> 32                    C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       Input:  16 bit unsigned fixed point multiplicand in AARGB0, AARGB1       C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;               16 bit unsigned fixed point multiplier in BARGB0, BARGB1         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       Use:    CALL    FXM1616U                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       Output: 32 bit unsigned fixed point product in AARGB0, AARGB1,           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;               AARGB2, AARGB3                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       Result: AARG  <--  AARG * BARG                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       Max Timing:     26 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       Min Timing:     26 clks                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           ;       PM: 25              DM: 7                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           PROG	CODE                                                                        C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           FXM1616U                                                                         C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           		GLOBAL	FXM1616U                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006066   c01d     MOVFF     0x1d,0x29      		MOVFF	AARGB1,TEMPB1	                                                           C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006068   f029                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
00606a   501d     MOVF      0x1d,0x0,0x0   		MOVF	AARGB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
00606c   0222     MULWF     0x22,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
00606e   cff4     MOVFF     0xff4,0x1c     		MOVFF	PRODH,AARGB2                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006070   f01c                                                                                                               
006072   cff3     MOVFF     0xff3,0x1b     		MOVFF	PRODL,AARGB3                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006074   f01b                                                                                                               
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006076   501e     MOVF      0x1e,0x0,0x0   		MOVF	AARGB0,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006078   0223     MULWF     0x23,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
00607a   cff4     MOVFF     0xff4,0x1e     		MOVFF	PRODH,AARGB0                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
00607c   f01e                                                                                                               
00607e   cff3     MOVFF     0xff3,0x1d     		MOVFF	PRODL,AARGB1                                                             C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006080   f01d                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006082   0222     MULWF     0x22,0x0       		MULWF	BARGB1                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006084   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006086   261c     ADDWF     0x1c,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006088   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
00608a   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
00608c   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
00608e   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006090   5029     MOVF      0x29,0x0,0x0   		MOVF	TEMPB1,W                                                                  C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006092   0223     MULWF     0x23,0x0       		MULWF	BARGB0                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006094   50f3     MOVF      0xf3,0x0,0x0   		MOVF	PRODL,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006096   261c     ADDWF     0x1c,0x1,0x0   		ADDWF	AARGB2,F                                                                 C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
006098   50f4     MOVF      0xf4,0x0,0x0   		MOVF	PRODH,W                                                                   C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
00609a   221d     ADDWFC    0x1d,0x1,0x0   		ADDWFC	AARGB1,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
00609c   6ae8     CLRF      0xe8,0x0       		CLRF	WREG                                                                      C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
00609e   221e     ADDWFC    0x1e,0x1,0x0   		ADDWFC	AARGB0,F                                                                C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           		                                                                               C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
0060a0   0c00     RETLW     0x0            		RETLW	0x00                                                                     C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           		END                                                                            C:\MCC18\SRC\TRADIT~1\MATH\fxm1616u.asm
                                           /* a signed multiply is only different from an unsigned multiply                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            * if the upper bytes of the result matter, which for us they                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            * don't.                                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                            */                                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           #define PRODH	(PRODL + 1)                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char AARGB3, BARGB3;                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           extern near unsigned char AARGB7;                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           void FXM3232 (void)                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                             _asm                                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
0062f0   501b     MOVF      0x1b,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
0062f2   0220     MULWF     0x20,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // low byte of both operands, so result adds into the low order              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // result bytes                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
0062f4   cff3     MOVFF     0xff3,0x17         movff PRODL, AARGB7                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
0062f6   f017                                                                                                               
0062f8   cff4     MOVFF     0xff4,0x18         movff PRODH, AARGB7 + 1                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
0062fa   f018                                                                                                               
                                               // W still contains AARGB3                                                   C:\mcc18\src\TRADIT~1\math\fxm3232.c
0062fc   0221     MULWF     0x21,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[1], so result adds into AARGB7[1,2]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
0062fe   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
006300   2618     ADDWF     0x18,0x1,0x0       addwf AARGB7 + 1, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
006302   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
006304   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
006306   6e19     MOVWF     0x19,0x0           movwf AARGB7 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
006308   501b     MOVF      0x1b,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
00630a   0222     MULWF     0x22,0x0           mulwf BARGB3 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[2], so result adds into AARGB7[2,3]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
00630c   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
00630e   2619     ADDWF     0x19,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
006310   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
006312   20f4     ADDWFC    0xf4,0x0,0x0       addwfc PRODH, 0, 0                                                           C:\mcc18\src\TRADIT~1\math\fxm3232.c
006314   6e1a     MOVWF     0x1a,0x0           movwf AARGB7 + 3, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3 to continue                                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
006316   501b     MOVF      0x1b,0x0,0x0       movf AARGB3, 0, 0                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
006318   0223     MULWF     0x23,0x0           mulwf BARGB3 + 3, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // BARGB3[3], so result adds into AARGB7[3].                                 C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
00631a   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
00631c   261a     ADDWF     0x1a,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // that's the end of all terms involving AARGB3[0].                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[1] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
00631e   501c     MOVF      0x1c,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
006320   0220     MULWF     0x20,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1], so result adds into AARGB7[1,2]                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
006322   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
006324   2618     ADDWF     0x18,0x1,0x0       addwf AARGB7 + 1, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
006326   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
006328   2219     ADDWFC    0x19,0x1,0x0       addwfc AARGB7 + 2, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
00632a   0e00     MOVLW     0x0                movlw 0                                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
00632c   221a     ADDWFC    0x1a,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
00632e   501c     MOVF      0x1c,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
006330   0221     MULWF     0x21,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[1], so result adds into AARGB7[2,3]                  C:\mcc18\src\TRADIT~1\math\fxm3232.c
006332   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
006334   2619     ADDWF     0x19,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
006336   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
006338   221a     ADDWFC    0x1a,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[1] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
00633a   501c     MOVF      0x1c,0x0,0x0       movf AARGB3 + 1, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
00633c   0222     MULWF     0x22,0x0           mulwf BARGB3 + 2, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[1] and BARGB3[2], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
00633e   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
006340   261a     ADDWF     0x1a,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the term from the product of AARGB3[1] and BARGB3[3] are     C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // that term.                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[2] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
006342   501d     MOVF      0x1d,0x0,0x0       movf AARGB3 + 2, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
006344   0220     MULWF     0x20,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[0], so result adds into AARGB7[2,3]                  C:\mcc18\src\TRADIT~1\math\fxm3232.c
006346   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
006348   2619     ADDWF     0x19,0x1,0x0       addwf AARGB7 + 2, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
00634a   50f4     MOVF      0xf4,0x0,0x0       movf PRODH, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
00634c   221a     ADDWFC    0x1a,0x1,0x0       addwfc AARGB7 + 3, 1, 0                                                      C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // reload AARGB3[2] to continue                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
00634e   501d     MOVF      0x1d,0x0,0x0       movf AARGB3 + 2, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
006350   0221     MULWF     0x21,0x0           mulwf BARGB3 + 1, 0                                                          C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[2] and BARGB3[1], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // we don't care about result bytes above AARGB7[3], ignore prodh here.      C:\mcc18\src\TRADIT~1\math\fxm3232.c
006352   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
006354   261a     ADDWF     0x1a,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // all bytes of the termsfrom the products of AARGB3[2] and BARGB3[2,3] are  C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // above our 32-bit result, don't even need to bother calculating            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // those terms.                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // load AARGB3[3] to continue                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
006356   501e     MOVF      0x1e,0x0,0x0       movf AARGB3 + 3, 0, 0                                                        C:\mcc18\src\TRADIT~1\math\fxm3232.c
006358   0220     MULWF     0x20,0x0           mulwf BARGB3, 0                                                              C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               // AARGB3[3] and BARGB3[0], so result adds into AARGB7[3]                    C:\mcc18\src\TRADIT~1\math\fxm3232.c
00635a   50f3     MOVF      0xf3,0x0,0x0       movf PRODL, 0, 0                                                             C:\mcc18\src\TRADIT~1\math\fxm3232.c
00635c   261a     ADDWF     0x1a,0x1,0x0       addwf AARGB7 + 3, 1, 0                                                       C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                                                                                                            C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                               _endasm;                                                                     C:\mcc18\src\TRADIT~1\math\fxm3232.c
00635e   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\math\fxm3232.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #include <usart.h>                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #if defined(__18F6525) || defined(__18F6621) || \                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                               defined(__18F8525) || defined(__18F8621)                                     C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #define RC1IE RCIE                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #define TX1IE TXIE                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           // USART1 Status Structure                                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           extern union USART1 USART1_Status;                                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Function Name:  Open1USART                                      *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Parameters:     config: bit definitions to configure USART1     *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    spbrg: baudrate value for register SPBRG1      *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Description:    This routine first resets the USART1 regs       *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    to the POR state. It then configures the       *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    USART1 for interrupts, synch/async, 8/9-bit,    *           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    sync slave/master and single/cont. rx.         *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *    Notes:          The bit definitions for config can be found    *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           *                    in the usart.h file.                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00642a   cfd9     MOVFF     0xfd9,0xfe6    void Open1USART( unsigned char config, char spbrg)                               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00642c   ffe6                                                                                                               
00642e   cfda     MOVFF     0xfda,0xfe6                                                                                     
006430   ffe6                                                                                                               
006432   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
006434   ffd9                                                                                                               
006436   cfe2     MOVFF     0xfe2,0xfda                                                                                     
006438   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00643a   6aac     CLRF      0xac,0x0         TXSTA1 = 0;           // Reset USART registers to POR state                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00643c   6aab     CLRF      0xab,0x0         RCSTA1 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00643e   0efd     MOVLW     0xfd             if(config&0x01)      // Sync or async operation                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006440   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
006442   88ac     BSF       0xac,0x4,0x0       TXSTA1bits.SYNC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006444   a2db     BTFSS     0xdb,0x1,0x0     if(config&0x02)      // 8- or 9-bit mode                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006446   d002     BRA       0x644c                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006448   8cac     BSF       0xac,0x6,0x0       TXSTA1bits.TX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00644a   8cab     BSF       0xab,0x6,0x0       RCSTA1bits.RX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00644c   b4db     BTFSC     0xdb,0x2,0x0     if(config&0x04)      // Master or Slave (sync only)                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00644e   8eac     BSF       0xac,0x7,0x0       TXSTA1bits.CSRC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006450   a6db     BTFSS     0xdb,0x3,0x0     if(config&0x08)      // Continuous or single reception                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006452   d002     BRA       0x6458                                                                                          
006454   88ab     BSF       0xab,0x4,0x0       RCSTA1bits.CREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006456   d001     BRA       0x645a           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006458   8aab     BSF       0xab,0x5,0x0       RCSTA1bits.SREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00645a   a8db     BTFSS     0xdb,0x4,0x0     if(config&0x10)      // Baud rate select (asychronous mode only)               C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00645c   d002     BRA       0x6462                                                                                          
00645e   84ac     BSF       0xac,0x2,0x0       TXSTA1bits.BRGH = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006460   d001     BRA       0x6464           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006462   94ac     BCF       0xac,0x2,0x0       TXSTA1bits.BRGH = 0;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006464   acdb     BTFSS     0xdb,0x6,0x0     if(config&0x40)      // Interrupt on receipt                                   C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006466   d002     BRA       0x646c                                                                                          
006468   8a9d     BSF       0x9d,0x5,0x0       PIE1bits.RC1IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00646a   d001     BRA       0x646e           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00646c   9a9d     BCF       0x9d,0x5,0x0       PIE1bits.RC1IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00646e   aedb     BTFSS     0xdb,0x7,0x0     if(config&0x80)      // Interrupt on transmission                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006470   d002     BRA       0x6476                                                                                          
006472   889d     BSF       0x9d,0x4,0x0       PIE1bits.TX1IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006474   d001     BRA       0x6478           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006476   989d     BCF       0x9d,0x4,0x0       PIE1bits.TX1IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006478   0efc     MOVLW     0xfc             SPBRG1 = spbrg;       // Write baudrate to SPBRG1                              C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
00647a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00647c   6eaf     MOVWF     0xaf,0x0                                                                                        
00647e   8aac     BSF       0xac,0x5,0x0     TXSTA1bits.TXEN = 1;  // Enable transmitter                                    C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006480   8eab     BSF       0xab,0x7,0x0     RCSTA1bits.SPEN = 1;  // Enable receiver                                       C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006482   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u1open.c
006484   cfe5     MOVFF     0xfe5,0xfda                                                                                     
006486   ffda                                                                                                               
006488   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00648a   ffd9                                                                                                               
00648c   0012     RETURN    0x0                                                                                             
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                           #include <usart.h>                                                               C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                           // USART2 Status Structure                                                       C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                           extern union USART2 USART2_Status;                                               C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                           *    Function Name:  Open2USART                                      *           C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                           *    Parameters:     config: bit definitions to configure USART2     *           C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                           *                    spbrg: baudrate value for register SPBRG2      *            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                           *    Description:    This routine first resets the USART2 regs       *           C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                           *                    to the POR state. It then configures the       *            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                           *                    USART2 for interrupts, synch/async, 8/9-bit,    *           C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                           *                    sync slave/master and single/cont. rx.         *            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                           *    Notes:          The bit definitions for config can be found    *            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                           *                    in the usart.h file.                           *            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063c6   cfd9     MOVFF     0xfd9,0xfe6    void Open2USART( unsigned char config, char spbrg)                               C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063c8   ffe6                                                                                                               
0063ca   cfda     MOVFF     0xfda,0xfe6                                                                                     
0063cc   ffe6                                                                                                               
0063ce   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0063d0   ffd9                                                                                                               
0063d2   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0063d4   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063d6   6a6c     CLRF      0x6c,0x0         TXSTA2 = 0;           // Reset USART registers to POR state                    C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063d8   6a6b     CLRF      0x6b,0x0         RCSTA2 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063da   0efd     MOVLW     0xfd             if(config&0x01)      // Sync or async operation                                C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063dc   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
0063de   886c     BSF       0x6c,0x4,0x0       TXSTA2bits.SYNC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063e0   a2db     BTFSS     0xdb,0x1,0x0     if(config&0x02)      // 8- or 9-bit mode                                       C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063e2   d002     BRA       0x63e8                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063e4   8c6c     BSF       0x6c,0x6,0x0       TXSTA2bits.TX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063e6   8c6b     BSF       0x6b,0x6,0x0       RCSTA2bits.RX9 = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063e8   b4db     BTFSC     0xdb,0x2,0x0     if(config&0x04)      // Master or Slave (sync only)                            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063ea   8e6c     BSF       0x6c,0x7,0x0       TXSTA2bits.CSRC = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063ec   a6db     BTFSS     0xdb,0x3,0x0     if(config&0x08)      // Continuous or single reception                         C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063ee   d002     BRA       0x63f4                                                                                          
0063f0   886b     BSF       0x6b,0x4,0x0       RCSTA2bits.CREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063f2   d001     BRA       0x63f6           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063f4   8a6b     BSF       0x6b,0x5,0x0       RCSTA2bits.SREN = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063f6   a8db     BTFSS     0xdb,0x4,0x0     if(config&0x10)      // Baud rate select (asychronous mode only)               C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063f8   d002     BRA       0x63fe                                                                                          
0063fa   846c     BSF       0x6c,0x2,0x0       TXSTA2bits.BRGH = 1;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063fc   d001     BRA       0x6400           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
0063fe   946c     BCF       0x6c,0x2,0x0       TXSTA2bits.BRGH = 0;                                                         C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
006400   acdb     BTFSS     0xdb,0x6,0x0     if(config&0x40)      // Interrupt on receipt                                   C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
006402   d002     BRA       0x6408                                                                                          
006404   8aa3     BSF       0xa3,0x5,0x0       PIE3bits.RC2IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
006406   d001     BRA       0x640a           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
006408   9aa3     BCF       0xa3,0x5,0x0       PIE3bits.RC2IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
00640a   aedb     BTFSS     0xdb,0x7,0x0     if(config&0x80)      // Interrupt on transmission                              C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
00640c   d002     BRA       0x6412                                                                                          
00640e   88a3     BSF       0xa3,0x4,0x0       PIE3bits.TX2IE = 1;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
006410   d001     BRA       0x6414           else                                                                           C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
006412   98a3     BCF       0xa3,0x4,0x0       PIE3bits.TX2IE = 0;                                                          C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
006414   0efc     MOVLW     0xfc             SPBRG2 = spbrg;       // Write baudrate to SPBRG2                              C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
006416   50db     MOVF      0xdb,0x0,0x0                                                                                    
006418   6e6f     MOVWF     0x6f,0x0                                                                                        
00641a   8a6c     BSF       0x6c,0x5,0x0     TXSTA2bits.TXEN = 1;  // Enable transmitter                                    C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
00641c   8e6b     BSF       0x6b,0x7,0x0     RCSTA2bits.SPEN = 1;  // Enable receiver                                       C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
00641e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\USART\u2open.c
006420   cfe5     MOVFF     0xfe5,0xfda                                                                                     
006422   ffda                                                                                                               
006424   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
006426   ffd9                                                                                                               
006428   0012     RETURN    0x0                                                                                             
                                           /* $Id: adcopen.c,v 1.2 2004/02/10 22:11:33 sealep Exp $ */                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Function Name:  OpenADC                                        *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Parameters:     config: bit definitions to configure A/D       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    channel: channel selection                     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Description:    This routine first resets the A/D registers    *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    to the POR state and then configures the       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    A/D clock, interrupt, justification, vref      *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    source, and I/O.  It also sets the channel.    *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *    Notes:          The bit definitions for config and channel     *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           *                    can be found in the adc16.h file.              *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #if !defined(ADC_INTERFACE_OLD) && \                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18C601)  && !defined(__18C801)  && \                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18C658)  && !defined(__18C858)  && \                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18F6520) && !defined(__18F6620) && !defined(__18F6720) && \       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               !defined(__18F8520) && !defined(__18F8620) && !defined(__18F8720)            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           void OpenADC( unsigned char config,                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                         unsigned char config2,                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                         unsigned char portconfig)                                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               // Reset A/D Registers to POR state                                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON0 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON1 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON2 = 0;                                                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON0 = (config2 >> 1) & 0b00111100;     // Analog channel selection        C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON1 = portconfig;                      // Port configuration              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #if defined(__18F1220) || defined(__18F1320)                                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON0 |= (config2 << 6) & 0b11000000;    // Voltage reference configuration C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON1 |= (config2 << 4) & 0b00110000;    // Voltage reference configuration C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON2 = config & 0b10000000;             // Result format                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON2 |= (config >> 4) & 0b00000111;     // Conversion clock select         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON2 |= (config << 2) & 0b00111000;     // Acquisition time select         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               if( config2 & 0b10000000 )   // Test the interrupt on/off                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               {                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                 PIR1bits.ADIF = 0;         // Clear the A/D interrupt flag                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                 PIE1bits.ADIE = 1;         // Enable the A/D interrupt                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                 INTCONbits.PEIE = 1;       // Enable peripheral interrupts                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               }                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                               ADCON0bits.ADON = 1;         // Enable the A/D                               C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
00648e   cfd9     MOVFF     0xfd9,0xfe6    void OpenADC( unsigned char config, unsigned char config2)                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
006490   ffe6                                                                                                               
006492   cfda     MOVFF     0xfda,0xfe6                                                                                     
006494   ffe6                                                                                                               
006496   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
006498   ffd9                                                                                                               
00649a   cfe2     MOVFF     0xfe2,0xfda                                                                                     
00649c   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             // Reset A/D Registers to POR state                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
00649e   6ac2     CLRF      0xc2,0x0         ADCON0 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064a0   6ac1     CLRF      0xc1,0x0         ADCON1 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #ifndef ADC_INTERFACE_OLD                                                        C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064a2   6ac0     CLRF      0xc0,0x0         ADCON2 = 0;                                                                    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             // Configure ADCON registers as per config selections                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #ifdef ADC_INTERFACE_OLD                                                         C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON1 = config;             // Set the A/D clock source                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 = (config<<2) & 0xC0; // Set the I/O selection                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             ADCON0 |= config2 &0x3f;     // Set the channel mask out the interrupt bit.    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #else // New ADC interface                                                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064a4   0efc     MOVLW     0xfc             ADCON0 = (config2 >> 1) & 0b00111100;    // Analog channel selection           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064a6   40db     RRNCF     0xdb,0x0,0x0                                                                                    
0064a8   0b7f     ANDLW     0x7f                                                                                            
0064aa   0b3c     ANDLW     0x3c                                                                                            
0064ac   6ec2     MOVWF     0xc2,0x0                                                                                        
0064b6   0efc     MOVLW     0xfc             ADCON1 = ((config2 << 4) & 0b00110000) | // Voltage reference configuration    C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064b8   38db     SWAPF     0xdb,0x0,0x0                                                                                    
0064ba   0bf0     ANDLW     0xf0                                                                                            
0064bc   0b30     ANDLW     0x30                                                                                            
0064ae   0efd     MOVLW     0xfd                      (config & 0b00001111);          // Port configuration                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064b0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0064b2   0b0f     ANDLW     0xf                                                                                             
0064b4   6e2b     MOVWF     0x2b,0x0                                                                                        
0064be   102b     IORWF     0x2b,0x0,0x0                                                                                    
0064c0   6ec1     MOVWF     0xc1,0x0                                                                                        
0064cc   0efd     MOVLW     0xfd             ADCON2 = (config & 0b10000000) |         // Result format                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064ce   50db     MOVF      0xdb,0x0,0x0                                                                                    
0064d0   0b80     ANDLW     0x80                                                                                            
0064c2   0efd     MOVLW     0xfd                      ((config >> 4) & 0b00000111);   // Conversion clock select            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064c4   38db     SWAPF     0xdb,0x0,0x0                                                                                    
0064c6   0b0f     ANDLW     0xf                                                                                             
0064c8   0b07     ANDLW     0x7                                                                                             
0064ca   6e2b     MOVWF     0x2b,0x0                                                                                        
0064d2   102b     IORWF     0x2b,0x0,0x0                                                                                    
0064d4   6ec0     MOVWF     0xc0,0x0                                                                                        
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064d6   0efc     MOVLW     0xfc             if( config2 & 0b10000000 )   // Test the interrupt on/off                      C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064d8   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
0064da   d003     BRA       0x64e2                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064dc   9c9e     BCF       0x9e,0x6,0x0       PIR1bits.ADIF = 0;         // Clear the A/D interrupt flag                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064de   8c9d     BSF       0x9d,0x6,0x0       PIE1bits.ADIE = 1;         // Enable the A/D interrupt                       C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064e0   8cf2     BSF       0xf2,0x6,0x0       INTCONbits.PEIE = 1;       // Enable peripheral interrupts                   C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064e2   80c2     BSF       0xc2,0x0,0x0     ADCON0bits.ADON = 1;         // Enable the A/D                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064e4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
0064e6   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0064e8   ffda                                                                                                               
0064ea   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0064ec   ffd9                                                                                                               
0064ee   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcopen.c
                                           /* $Id: spi_open.c,v 1.1 2004/10/06 23:00:51 curtiss Exp $ */                    C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           #include <spi.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           *   Function Name:  OpenSPI                                         *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           *   Return Value:   void                                            *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           *   Parameters:     SSP peripheral setup bytes                      *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           *   Description:    This function sets up the SSP module on a       *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           *                   PIC18Cxxx device for use with a Microchip SPI   *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           *                   EEPROM device or SPI bus device.                *            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
006360   cfd9     MOVFF     0xfd9,0xfe6    void OpenSPI( unsigned char sync_mode, unsigned char bus_mode, unsigned char smp_phase) C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
006362   ffe6                                                                                                               
006364   cfda     MOVFF     0xfda,0xfe6                                                                                     
006366   ffe6                                                                                                               
006368   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00636a   ffd9                                                                                                               
00636c   cfe2     MOVFF     0xfe2,0xfda                                                                                     
00636e   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
006370   0e3f     MOVLW     0x3f             SSPSTAT &= 0x3F;                // power on state                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
006372   16c7     ANDWF     0xc7,0x1,0x0                                                                                    
006374   6ac6     CLRF      0xc6,0x0         SSPCON1 = 0x00;                 // power on state                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
006376   0efd     MOVLW     0xfd             SSPCON1 |= sync_mode;           // select serial mode                          C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
006378   50db     MOVF      0xdb,0x0,0x0                                                                                    
00637a   12c6     IORWF     0xc6,0x1,0x0                                                                                    
00637c   0efb     MOVLW     0xfb             SSPSTAT |= smp_phase;           // select data input sample phase              C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
00637e   50db     MOVF      0xdb,0x0,0x0                                                                                    
006380   12c7     IORWF     0xc7,0x1,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
006382   0efc     MOVLW     0xfc             switch( bus_mode )                                                             C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
006384   50db     MOVF      0xdb,0x0,0x0                                                                                    
006386   0a03     XORLW     0x3                                                                                             
006388   e009     BZ        0x639c                                                                                          
00638a   0a01     XORLW     0x1                                                                                             
00638c   e004     BZ        0x6396                                                                                          
00638e   0a02     XORLW     0x2                                                                                             
006390   e106     BNZ       0x639e                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                               case 0:                       // SPI bus mode 0,0                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
006392   8cc7     BSF       0xc7,0x6,0x0         SSPSTATbits.CKE = 1;        // data transmitted on rising edge             C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
006394   d004     BRA       0x639e               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                               case 2:                       // SPI bus mode 1,0                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
006396   8cc7     BSF       0xc7,0x6,0x0         SSPSTATbits.CKE = 1;        // data transmitted on falling edge            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
006398   88c6     BSF       0xc6,0x4,0x0         SSPCON1bits.CKP = 1;        // clock idle state high                       C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
00639a   d001     BRA       0x639e               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                               case 3:                       // SPI bus mode 1,1                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
00639c   88c6     BSF       0xc6,0x4,0x0         SSPCON1bits.CKP = 1;        // clock idle state high                       C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                               default:                      // default SPI bus mode 0,1                    C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
00639e   0efd     MOVLW     0xfd             switch( sync_mode )                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
0063a0   50db     MOVF      0xdb,0x0,0x0                                                                                    
0063a2   0a05     XORLW     0x5                                                                                             
0063a4   e003     BZ        0x63ac                                                                                          
0063a6   0a01     XORLW     0x1                                                                                             
0063a8   e104     BNZ       0x63b2                                                                                          
                                             {                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                               case 4:                       // slave mode w /SS enable                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           #if defined(__18F6310) || defined(__18F6390) || \                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                               defined(__18F6410) || defined(__18F6490) || \                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                               defined(__18F8310) || defined(__18F8390) || \                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                               defined(__18F8410) || defined(__18F8490)                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                                 TRISFbits.TRISF7 = 1;       // define /SS pin as input                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
0063aa   8a92     BSF       0x92,0x5,0x0         TRISAbits.TRISA5 = 1;       // define /SS pin as input                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                               case 5:                       // slave mode w/o /SS enable                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           #if defined(__18F2455) || defined(__18F2550) || \                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                               defined(__18F4455) || defined(__18F4550)                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                                 TRISBbits.TRISB1 = 1;       // define clock pin as input                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
0063ac   8694     BSF       0x94,0x3,0x0         TRISCbits.TRISC3 = 1;       // define clock pin as input                   C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
0063ae   9ec7     BCF       0xc7,0x7,0x0         SSPSTATbits.SMP = 0;        // must be cleared in slave SPI mode           C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
0063b0   d001     BRA       0x63b4               break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                               default:                      // master mode, define clock pin as output     C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           #if defined(__18F2455) || defined(__18F2550) || \                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                               defined(__18F4455) || defined(__18F4550)                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                                 TRISBbits.TRISB1 = 0;       // define clock pin as output                  C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
0063b2   9694     BCF       0x94,0x3,0x0         TRISCbits.TRISC3 = 0;       // define clock pin as output                  C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                                 break;                                                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                             }                                                                              C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           #if defined(__18F2455) || defined(__18F2550) || \                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                               defined(__18F4455) || defined(__18F4550)                                     C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                             TRISC &= 0x7F;                  // define SDO as output (master or slave)      C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                             TRISB |= 0x01;                  // define SDI as input (master or slave)       C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           #else                                                                            C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
0063b4   9a94     BCF       0x94,0x5,0x0     TRISC &= 0xDF;                  // define SDO as output (master or slave)      C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
0063b6   8894     BSF       0x94,0x4,0x0     TRISC |= 0x10;                  // define SDI as input (master or slave)       C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
                                           #endif                                                                           C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
0063b8   8ac6     BSF       0xc6,0x5,0x0     SSPCON1 |= SSPENB;              // enable synchronous serial port              C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
0063ba   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\SPI\spi_open.c
0063bc   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0063be   ffda                                                                                                               
0063c0   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0063c2   ffd9                                                                                                               
0063c4   0012     RETURN    0x0                                                                                             
                                           /* $Id: adcread.c,v 1.1 2003/12/09 22:52:09 GrosbaJ Exp $ */                     C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           #include <adc.h>                                                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Function Name:  ReadADC                                        *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Return Value:   int, A/D result                                *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Parameters:     void                                           *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *    Description:    This routine reads the ADRESL and ADRESH       *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           *                    and returns these as a long.                   *            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
006538   cfd9     MOVFF     0xfd9,0xfe6    int ReadADC(void)                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
00653a   ffe6                                                                                                               
00653c   cfda     MOVFF     0xfda,0xfe6                                                                                     
00653e   ffe6                                                                                                               
006540   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
006542   ffd9                                                                                                               
006544   cfe2     MOVFF     0xfe2,0xfda                                                                                     
006546   ffda                                                                                                               
006548   52e6     MOVF      0xe6,0x1,0x0                                                                                    
00654a   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                             union ADCResult i; // A union is used to read the                              C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                // A/D result due to issues with                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                // handling long variables                                  C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
00654c   50c3     MOVF      0xc3,0x0,0x0     i.br[0] = ADRESL;  // Read ADRESL into the lower byte                          C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
00654e   6edf     MOVWF     0xdf,0x0                                                                                        
006550   0e01     MOVLW     0x1              i.br[1] = ADRESH;  // Read ADRESH into the high byte                           C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
006552   cfc4     MOVFF     0xfc4,0xfdb                                                                                     
006554   ffdb                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
006556   cfde     MOVFF     0xfde,0x2b       return (i.lr);     // Return the long variable                                 C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
006558   f02b                                                                                                               
00655a   cfdd     MOVFF     0xfdd,0x2c                                                                                      
00655c   f02c                                                                                                               
00655e   c02b     MOVFF     0x2b,0xff3                                                                                      
006560   fff3                                                                                                               
006562   c02c     MOVFF     0x2c,0xff4                                                                                      
006564   fff4                                                                                                               
006566   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\ADC\adcread.c
006568   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00656a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00656c   cfe5     MOVFF     0xfe5,0xfda                                                                                     
00656e   ffda                                                                                                               
006570   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
006572   ffd9                                                                                                               
006574   0012     RETURN    0x0                                                                                             
                                           ;	RCS Header $Id: temparg.asm,v 1.2 2004/10/01 19:13:23 GrosbaJ Exp $            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;       CMATH18 DATA DEFINITION FILE                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;   VARIABLE ALLOCATION - Core math library routines                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           ;******************************************************************************* C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           MATH_DATA      UDATA_ACS                                                         C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB3		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB2		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB1		RES 1                                                                    C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMP                                                                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           TEMPB0		RES 1       ; temporary storage                                          C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   GLOBAL  TEMPB3, TEMPB2, TEMPB1, TEMPB0, TEMP                             C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                                   END                                                                      C:\MCC18\SRC\TRADIT~1\MATH\temparg.asm
                                           /* $Id: t1write.c,v 1.2 2004/01/07 20:37:54 sealep Exp $ */                      C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
                                           #include <p18cxxx.h>                                                             C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
                                           #include <timers.h>                                                              C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
                                           /********************************************************************            C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
                                           *    Function Name:  WriteTimer1                                    *            C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
                                           *    Return Value:   void                                           *            C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
                                           *    Parameters:     int: value to write to Timer1                  *            C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
                                           *    Description:    This routine writes a 16-bit value to Timer1.  *            C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
                                           ********************************************************************/            C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
006576   cfd9     MOVFF     0xfd9,0xfe6    void WriteTimer1(unsigned int timer1)                                            C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
006578   ffe6                                                                                                               
00657a   cfda     MOVFF     0xfda,0xfe6                                                                                     
00657c   ffe6                                                                                                               
00657e   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
006580   ffd9                                                                                                               
006582   cfe2     MOVFF     0xfe2,0xfda                                                                                     
006584   ffda                                                                                                               
006586   52e6     MOVF      0xe6,0x1,0x0                                                                                    
006588   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
                                             union Timers timer;                                                            C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
00658a   0efc     MOVLW     0xfc             timer.lt = timer1;    // Save the 16-bit value in local                        C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
00658c   cfdb     MOVFF     0xfdb,0xfde                                                                                     
00658e   ffde                                                                                                               
006590   cfdb     MOVFF     0xfdb,0xfdd                                                                                     
006592   ffdd                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
006594   0e01     MOVLW     0x1              TMR1H = timer.bt[1];  // Write high byte to Timer1 High byte                   C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
006596   50db     MOVF      0xdb,0x0,0x0                                                                                    
006598   6ecf     MOVWF     0xcf,0x0                                                                                        
00659a   50df     MOVF      0xdf,0x0,0x0     TMR1L = timer.bt[0];  // Write low byte to Timer1 Low byte                     C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
00659c   6ece     MOVWF     0xce,0x0                                                                                        
00659e   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
0065a0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0065a2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0065a4   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0065a6   ffda                                                                                                               
0065a8   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0065aa   ffd9                                                                                                               
0065ac   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\pmc\Timers\t1write.c
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                           /* printf() is a wrapper function which calls vfprintf() with stdout as the      C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                              destination output stream. EOF is returned on error, else the number          C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                              of characters output. */                                                      C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\printf.c
0061d8   cfd9     MOVFF     0xfd9,0xfe6    printf (const rom char *fmt, ...)                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
0061da   ffe6                                                                                                               
0061dc   cfda     MOVFF     0xfda,0xfe6                                                                                     
0061de   ffe6                                                                                                               
0061e0   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0061e2   ffd9                                                                                                               
0061e4   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0061e6   ffda                                                                                                               
0061e8   52e6     MOVF      0xe6,0x1,0x0                                                                                    
0061ea   52e6     MOVF      0xe6,0x1,0x0                                                                                    
0061ec   52e6     MOVF      0xe6,0x1,0x0                                                                                    
0061ee   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                             va_list ap;                                                                    C:\mcc18\src\TRADIT~1\stdclib\printf.c
                                             int n;                                                                         C:\mcc18\src\TRADIT~1\stdclib\printf.c
0061f0   50d9     MOVF      0xd9,0x0,0x0     va_start (ap, fmt);                                                            C:\mcc18\src\TRADIT~1\stdclib\printf.c
0061f2   0ffb     ADDLW     0xfb                                                                                            
0061f4   6e2b     MOVWF     0x2b,0x0                                                                                        
0061f6   0eff     MOVLW     0xff                                                                                            
0061f8   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0061fa   6e2c     MOVWF     0x2c,0x0                                                                                        
0061fc   c02b     MOVFF     0x2b,0xfde                                                                                      
0061fe   ffde                                                                                                               
006200   6edd     MOVWF     0xdd,0x0                                                                                        
006202   cfde     MOVFF     0xfde,0xfe6      n = vfprintf (stdout, fmt, ap);                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
006204   ffe6                                                                                                               
006206   cfdd     MOVFF     0xfdd,0xfe6                                                                                     
006208   ffe6                                                                                                               
00620a   0efb     MOVLW     0xfb                                                                                            
00620c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00620e   ffe6                                                                                                               
006210   0efc     MOVLW     0xfc                                                                                            
006212   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
006214   ffe6                                                                                                               
006216   0efd     MOVLW     0xfd                                                                                            
006218   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00621a   ffe6                                                                                                               
00621c   c1f3     MOVFF     0x1f3,0xfe6                                                                                     
00621e   ffe6                                                                                                               
006220   c1f4     MOVFF     0x1f4,0xfe6                                                                                     
006222   ffe6                                                                                                               
006224   ecab     CALL      0x1d56,0x0                                                                                      
006226   f00e                                                                                                               
006228   6ef5     MOVWF     0xf5,0x0                                                                                        
00622a   0e07     MOVLW     0x7                                                                                             
00622c   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
00622e   e202     BC        0x6234                                                                                          
006230   6ae1     CLRF      0xe1,0x0                                                                                        
006232   52e5     MOVF      0xe5,0x1,0x0                                                                                    
006234   6ee1     MOVWF     0xe1,0x0                                                                                        
006236   50f5     MOVF      0xf5,0x0,0x0                                                                                    
006238   0e02     MOVLW     0x2                                                                                             
00623a   cff3     MOVFF     0xff3,0xfdb                                                                                     
00623c   ffdb                                                                                                               
00623e   0e03     MOVLW     0x3                                                                                             
006240   cff4     MOVFF     0xff4,0xfdb                                                                                     
006242   ffdb                                                                                                               
                                             va_end (ap);                                                                   C:\mcc18\src\TRADIT~1\stdclib\printf.c
006244   0e02     MOVLW     0x2              return n;                                                                      C:\mcc18\src\TRADIT~1\stdclib\printf.c
006246   cfdb     MOVFF     0xfdb,0x2b                                                                                      
006248   f02b                                                                                                               
00624a   0e03     MOVLW     0x3                                                                                             
00624c   cfdb     MOVFF     0xfdb,0x2c                                                                                      
00624e   f02c                                                                                                               
006250   c02b     MOVFF     0x2b,0xff3                                                                                      
006252   fff3                                                                                                               
006254   c02c     MOVFF     0x2c,0xff4                                                                                      
006256   fff4                                                                                                               
006258   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\printf.c
00625a   ffe1                                                                                                               
00625c   cfda     MOVFF     0xfda,0xfe2                                                                                     
00625e   ffe2                                                                                                               
006260   52e5     MOVF      0xe5,0x1,0x0                                                                                    
006262   cfe5     MOVFF     0xfe5,0xfda                                                                                     
006264   ffda                                                                                                               
006266   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
006268   ffd9                                                                                                               
00626a   0012     RETURN    0x0                                                                                             
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           /* by default stdout issues to the USART */                                      C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           FILE *stdout = _H_USART;                                                         C:\mcc18\src\TRADIT~1\stdclib\stdout.c
                                           ; $Id: scpyp2r.asm,v 1.1 2003/12/09 22:53:20 GrosbaJ Exp $                       C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006152   0efe     MOVLW     0xfe                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006154   cfe3     MOVFF     0xfe3,0xfe9              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006156   ffe9                                                                                                               
006158   0eff     MOVLW     0xff                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00615a   cfe3     MOVFF     0xfe3,0xfea              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00615c   ffea                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006140   0efb     MOVLW     0xfb                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006142   cfe3     MOVFF     0xfe3,0xff6              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006144   fff6                                                                                                               
006146   0efc     MOVLW     0xfc                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006148   cfe3     MOVFF     0xfe3,0xff7              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00614a   fff7                                                                                                               
00614c   0efd     MOVLW     0xfd                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00614e   cfe3     MOVFF     0xfe3,0xff8              movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006150   fff8                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; @name strcpypgm2ram                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;The {\bf strcpypgm2ram} function performs a {\bf strcpy} where                  C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;{\bf s1} points to data memory and {\bf s2} points to program                   C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;memory.                                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;@param s1 pointer to destination in data memory                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;@param s2 pointer to source in program memory                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; char *strcpypgm2ram (char *s1, const rom char *s2);                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           strcpypgm2ram                                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             global strcpypgm2ram                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #ifdef __SMALL__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                            messg "strcpypgm2ram - SMALL"                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; Proceedure: Use FSR0 for 'dest' and TBLPTR for 'src'                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;         Assumes TBLPTRU = 0.                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Load TBLPTR with the 'src' pointer                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     Stk2CpyToReg -4,TBLPTRL                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Load FSR0 with the 'dest' pointer                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     Stk2CpyToReg -2,FSR0L                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Make a copy for the return value                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           	  movff FSR0L, PRODL                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           	  movff FSR0H, PRODH                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     movff     TABLAT, INDF0                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     tstfsz    POSTINC0,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #ifdef __LARGE__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                            messg "strcpypgm2ram - LARGE"                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; Proceedure: Three byte rom pointer.                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ;         Use FSR0 for 'dest' and TBLPTR for 'src'                               C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Load TBLPTR with the 'src' pointer                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     Stk3CpyToReg -5,TBLPTRL                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Load FSR0 with the 'dest' pointer                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                     Stk2CpyToReg -2,FSR0L                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Make a copy for the return value                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
00615e   cfe9     MOVFF     0xfe9,0xff3    	  movff FSR0L, PRODL                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
006160   fff3                                                                                                               
006162   cfea     MOVFF     0xfea,0xff4    	  movff FSR0H, PRODH                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
006164   fff4                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
006166   0009     TBLRDPOSTINC                       tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
006168   cff5     MOVFF     0xff5,0xfef              movff     TABLAT, INDF0                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
00616a   ffef                                                                                                               
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
00616c   66ee     TSTFSZ    0xee,0x0                 tstfsz    POSTINC0,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
00616e   d7fb     BRA       0x6166                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
006170   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                            error "No Model Specified"                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\scpyp2r.asm
                                           ; $Id: strlen.asm,v 1.1 2003/12/09 22:53:20 GrosbaJ Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006172   0efe     MOVLW     0xfe                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006174   cfe3     MOVFF     0xfe3,0xfe9              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006176   ffe9                                                                                                               
006178   0eff     MOVLW     0xff                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00617a   cfe3     MOVFF     0xfe3,0xfea              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00617c   ffea                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; @name strlen                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;``The {\bf strlen} function computes the length of the string pointed           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;Stack usage: 2 bytes. Re-entrant.                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;@return ``The {\bf strlen} function returns the number of characters            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; size_t strlen (const char *s);                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           strlen                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             global strlen                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           ; Proceedure: Use FSR0 for 's' and use PROD for 'n'.                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Load FSR0 by copying 's' off stack into FSR0.                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                     Stk2CpyToReg -2,FSR0L                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Clear PROD                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
00617e   6af3     CLRF      0xf3,0x0                 clrf      PRODL,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
006180   6af4     CLRF      0xf4,0x0                 clrf      PRODH,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
006182   52ee     MOVF      0xee,0x1,0x0             movf      POSTINC0,F,ACCESS   ; set Z flag                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
006184   e003     BZ        0x618c                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
006186   4af3     INFSNZ    0xf3,0x1,0x0   	  infsnz    PRODL, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
006188   2af4     INCF      0xf4,0x1,0x0   	  incf      PRODH, F, ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
00618a   d7fb     BRA       0x6182                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
00618c   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\strlen.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <ctype.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #include <string.h>                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_MINUS 0x1                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_PLUS  0x2                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SPACE 0x4                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_OCTO  0x8                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_ZERO  0x10                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FLAG_SIGNED 0x80                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           static const rom char s_digits[] = "0123456789abcdef";                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           static unsigned char                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d2a   ecd1     CALL      0x27a2,0x0     s_put_n_chars (FILE * handle, unsigned char n, char c)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d2c   f013                                                                                                               
0027a2   cfd9     MOVFF     0xfd9,0xfe6                                                                                     
0027a4   ffe6                                                                                                               
0027a6   cfda     MOVFF     0xfda,0xfe6                                                                                     
0027a8   ffe6                                                                                                               
0027aa   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0027ac   ffd9                                                                                                               
0027ae   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0027b0   ffda                                                                                                               
0027b2   0012     RETURN    0x0                                                                                             
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d2e   0efb     MOVLW     0xfb             while (n--)                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d30   cfdb     MOVFF     0xfdb,0xff3                                                                                     
001d32   fff3                                                                                                               
001d34   06db     DECF      0xdb,0x1,0x0                                                                                    
001d36   50f3     MOVF      0xf3,0x0,0x0                                                                                    
001d38   0900     IORLW     0x0                                                                                             
001d3a   e00a     BZ        0x1d50                                                                                          
001d3c   ec1f     CALL      0x283e,0x0         if (putc (c, handle) == EOF)                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d3e   f014                                                                                                               
001d40   0efa     MOVLW     0xfa                                                                                            
001d42   ec8a     CALL      0x2914,0x0                                                                                      
001d44   f014                                                                                                               
001d46   e1f3     BNZ       0x1d2e                                                                                          
001d48   1c2c     COMF      0x2c,0x0,0x0                                                                                    
001d4a   e1f1     BNZ       0x1d2e                                                                                          
001d4c   0e01     MOVLW     0x1                  return 1;                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d4e   d001     BRA       0x1d52                                                                                          
001d50   0e00     MOVLW     0x0              return 0;                                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d52   ef00     GOTO      0x2800         }                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d54   f014                                                                                                               
002800   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002802   cfe5     MOVFF     0xfe5,0xfda                                                                                     
002804   ffda                                                                                                               
002806   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
002808   ffd9                                                                                                               
00280a   0012     RETURN    0x0                                                                                             
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_UNSPECIFIED 0                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_LONG 1                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_SHLONG 2                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           #define _FMT_BYTE   3                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d56   ecd1     CALL      0x27a2,0x0     vfprintf (auto FILE *handle, auto const rom char *f, auto va_list ap)            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d58   f013                                                                                                               
001d5a   0e3b     MOVLW     0x3b                                                                                            
001d5c   24e1     ADDWF     0xe1,0x0,0x0                                                                                    
001d5e   e302     BNC       0x1d64                                                                                          
001d60   68e1     SETF      0xe1,0x0                                                                                        
001d62   52e6     MOVF      0xe6,0x1,0x0                                                                                    
001d64   6ee1     MOVWF     0xe1,0x0                                                                                        
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                             unsigned char c;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d66   0e01     MOVLW     0x1              int count = 0;                                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d68   6adb     CLRF      0xdb,0x0                                                                                        
001d6a   0e02     MOVLW     0x2                                                                                             
001d6c   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d6e   0ef9     MOVLW     0xf9             for (c = *f; c; c = *++f)                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d70   cfdb     MOVFF     0xfdb,0xff6                                                                                     
001d72   fff6                                                                                                               
001d74   0efa     MOVLW     0xfa                                                                                            
001d76   cfdb     MOVFF     0xfdb,0xff7                                                                                     
001d78   fff7                                                                                                               
001d7a   0efb     MOVLW     0xfb                                                                                            
001d7c   cfdb     MOVFF     0xfdb,0xff8                                                                                     
001d7e   fff8                                                                                                               
001d80   0008     TBLRD                                                                                                     
001d82   50f5     MOVF      0xf5,0x0,0x0                                                                                    
001d84   6edf     MOVWF     0xdf,0x0                                                                                        
001d86   50df     MOVF      0xdf,0x0,0x0                                                                                    
001d88   e102     BNZ       0x1d8e                                                                                          
001d8a   ef26     GOTO      0x264c                                                                                          
001d8c   f013                                                                                                               
002646   d977     RCALL     0x2936                                                                                          
002648   efc0     GOTO      0x1d80                                                                                          
00264a   f00e                                                                                                               
002936   50d9     MOVF      0xd9,0x0,0x0                                                                                    
002938   0ff9     ADDLW     0xf9                                                                                            
00293a   6ee9     MOVWF     0xe9,0x0                                                                                        
00293c   0eff     MOVLW     0xff                                                                                            
00293e   ef34     GOTO      0x2868                                                                                          
002940   f014                                                                                                               
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d8e   0e25     MOVLW     0x25                 if (c == '%')                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d90   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001d92   e002     BZ        0x1d98                                                                                          
001d94   ef19     GOTO      0x2632                                                                                          
001d96   f013                                                                                                               
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d98   0e03     MOVLW     0x3                      unsigned char flags = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d9a   6adb     CLRF      0xdb,0x0                                                                                        
001d9c   0e04     MOVLW     0x4                      unsigned char width = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001d9e   6adb     CLRF      0xdb,0x0                                                                                        
001da0   0e05     MOVLW     0x5                      unsigned char precision = 0;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001da2   6adb     CLRF      0xdb,0x0                                                                                        
001da4   0e06     MOVLW     0x6                      unsigned char have_precision = 0;                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001da6   6adb     CLRF      0xdb,0x0                                                                                        
001da8   0e07     MOVLW     0x7                      unsigned char size = 0;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001daa   6adb     CLRF      0xdb,0x0                                                                                        
                                                     unsigned char space_cnt;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned char cval;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     unsigned long larg;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     far rom char *romstring;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     char *ramstring;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     int n;                                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* get the first character of the conversion specifier */              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dac   ec39     CALL      0x2672,0x0               c = *++f;                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dae   f013                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /**  The conversion specification has, after the '%' character:        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         7.9.6.1                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * Zero or more flags (in any order) that modify the meaning of the  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specification.                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional minimum field width. If the converted value has       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          fewer characters than the field width, it will be padded with     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          spaces (by default) on the left (or right, if the left            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          adjustment flag, described later, has been given) to the field    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          width. The field width takes the form of an asterisk *            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (described later) or a decimal integer.                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional precision that gives the minimum number of digits     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to appear for the d, i, o, u, x, and X conversions, the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of digits to appear after the decimal point        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          character for e, E, and f conversions, the maximum number         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of significant digits for the g and G conversions, or the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          maximum number of characters to be written from a string in       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          s conversion. The precision takes the form of a period (.)        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          followed by an asterisk * (described later) or by an optional     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal integer; if only the period is specified, the precision   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          is taken as zero. If a precision appears with any other           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier, the behaviour is undefined.                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * An optional h specifying that a following d, i, o, u, x, or X     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a short int or unsigned short     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          int argument (the argument will have been promoted according      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to the integer promotions, and its value shall be converted       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          to short int or unsigned short int before printing); an           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          optional h specifying that a following n conversion specifier     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          applies to a pointer to a short int argument; an optional l       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          (ell) specifying that a following d, i, o, u, x, or X             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion specifier applies to a long int or unsigned long int   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument; or an optional L specifying that a following e, E,      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          f, g, or G conversion specifier applies to a long double          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          argument. If an h, l, or L appears with any other conversion      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specifier, the behaviour is undefined.                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        * A character that specifies the type of conversion to be applied.  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /** check for a flag.                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        7.9.6.1                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        The flag characters and their meanings are:                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        - The result of the conversion will be left-justified within        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the field. (It will be right justified if this flag is not        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          specified.)                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        + The result of a signed conversion will always begin with a        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          plus or a minus sign. (It will begin with a sign only when        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          a negative value is converted if this flag is not specified.)     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        space  If the first character of a signed conversion is not a       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          sign, or if a signed conversion results in no characters, a       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          space will be prefixed to the result. If the space and + flags    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          both appear, the space flag will be ignored.                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        # The result is to be converted to an "alternate form." For o       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversion, it increases the precision to force the first digit   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          of the result to be a zero. For x (or X) conversion, a nonzero    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result will have 0x (or 0X) prefixed to it. For e, E, f, g,       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          and G conversions, the result will always contain a decimal-      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          point character, even if no digits follow it. (Normally, a        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          decimal point character appears in the result of these            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions only if a digit follows it.) For g and G              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          conversions, trailing zeros will not be removed from the          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          result. For other conversions the behaviour is undefined.         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        0 For d, i, o, u, x, X, e, E, f, g, and G conversions, leading      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          zeros (following any indication of sign or base) are used to      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          pad to the field width; no space padding is performed. If         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          the 0 and - flags both appear, the 0 flag will be ignored.        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                          For other conversions, the behaviour is undefined.                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       */                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001db0   0e2d     MOVLW     0x2d                     while (c == '-' || c == '+' || c == ' ' || c == '#'                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001db2   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001db4   e00c     BZ        0x1dce                                                                                          
001db6   0e2b     MOVLW     0x2b                                                                                            
001db8   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001dba   e009     BZ        0x1dce                                                                                          
001dbc   0e20     MOVLW     0x20                                                                                            
001dbe   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001dc0   e006     BZ        0x1dce                                                                                          
001dc2   0e23     MOVLW     0x23                                                                                            
001e00   d7d5     BRA       0x1dac                                                                                          
001dc4   5cdf     SUBWF     0xdf,0x0,0x0                    || c == '0')                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dc6   e003     BZ        0x1dce                                                                                          
001dc8   0e30     MOVLW     0x30                                                                                            
001dca   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001dcc   e11a     BNZ       0x1e02                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dce   50df     MOVF      0xdf,0x0,0x0                 switch (c)                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dd0   0a30     XORLW     0x30                                                                                            
001dd2   e014     BZ        0x1dfc                                                                                          
001dd4   0a13     XORLW     0x13                                                                                            
001dd6   e00f     BZ        0x1df6                                                                                          
001dd8   0a03     XORLW     0x3                                                                                             
001dda   e00a     BZ        0x1df0                                                                                          
001ddc   0a0b     XORLW     0xb                                                                                             
001dde   e005     BZ        0x1dea                                                                                          
001de0   0a06     XORLW     0x6                                                                                             
001de2   e1e4     BNZ       0x1dac                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '-':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001de4   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001de6   80db     BSF       0xdb,0x0,0x0                                                                                    
001de8   d7e1     BRA       0x1dac                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '+':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dea   0e03     MOVLW     0x3                              flags |= _FLAG_PLUS;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dec   82db     BSF       0xdb,0x1,0x0                                                                                    
001dee   d7de     BRA       0x1dac                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case ' ':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001df0   0e03     MOVLW     0x3                              flags |= _FLAG_SPACE;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001df2   84db     BSF       0xdb,0x2,0x0                                                                                    
001df4   d7db     BRA       0x1dac                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '#':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001df6   0e03     MOVLW     0x3                              flags |= _FLAG_OCTO;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001df8   86db     BSF       0xdb,0x3,0x0                                                                                    
001dfa   d7d8     BRA       0x1dac                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case '0':                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dfc   0e03     MOVLW     0x3                              flags |= _FLAG_ZERO;                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001dfe   88db     BSF       0xdb,0x4,0x0                                                                                    
                                                             break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional width field is next */                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e02   0e2a     MOVLW     0x2a                     if (c == '*')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e04   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001e06   e11b     BNZ       0x1e3e                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e08   ec35     CALL      0x266a,0x0                   n = va_arg (ap, int);                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e0a   f013                                                                                                               
001e0c   ec83     CALL      0x2706,0x0                                                                                      
001e0e   f013                                                                                                               
002706   0e13     MOVLW     0x13                                                                                            
002708   cfee     MOVFF     0xfee,0xfdb                                                                                     
00270a   ffdb                                                                                                               
00270c   0e14     MOVLW     0x14                                                                                            
00270e   cfed     MOVFF     0xfed,0xfdb                                                                                     
002710   ffdb                                                                                                               
001e10   e010     BZ        0x1e32                       if (n < 0)                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002712   0e13     MOVLW     0x13                                                                                            
002714   cfdb     MOVFF     0xfdb,0x2b                                                                                      
002716   f02b                                                                                                               
002718   0e14     MOVLW     0x14                                                                                            
00271a   cfdb     MOVFF     0xfdb,0x2c                                                                                      
00271c   f02c                                                                                                               
00271e   0100     MOVLB     0x0                                                                                             
002720   0e80     MOVLW     0x80                                                                                            
002722   142c     ANDWF     0x2c,0x0,0x0                                                                                    
002724   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e12   0e03     MOVLW     0x3                              flags |= _FLAG_MINUS;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e14   80db     BSF       0xdb,0x0,0x0                                                                                    
001e16   681d     SETF      0x1d,0x0                         width = -n;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e18   681e     SETF      0x1e,0x0                                                                                        
001e1a   0e13     MOVLW     0x13                                                                                            
001e1c   cfdb     MOVFF     0xfdb,0x22                                                                                      
001e1e   f022                                                                                                               
001e20   0e14     MOVLW     0x14                                                                                            
001e22   cfdb     MOVFF     0xfdb,0x23                                                                                      
001e24   f023                                                                                                               
001e26   ec06     CALL      0x600c,0x0                                                                                      
001e28   f030                                                                                                               
001e2a   0e04     MOVLW     0x4                                                                                             
001e2c   c01b     MOVFF     0x1b,0xfdb                                                                                      
001e2e   ffdb                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e30   d003     BRA       0x1e38                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e32   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e34   ec6c     CALL      0x26d8,0x0                                                                                      
001e36   f013                                                                                                               
001e38   ec39     CALL      0x2672,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e3a   f013                                                                                                               
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e3c   d00b     BRA       0x1e54                   else                                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e3e   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e40   6adb     CLRF      0xdb,0x0                                                                                        
001e42   ecda     CALL      0x27b4,0x0                   while ((unsigned char) isdigit (c))                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e44   f013                                                                                                               
001e46   e003     BZ        0x1e4e                                                                                          
001e4c   d7fa     BRA       0x1e42                                                                                          
0027b4   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
0027b6   ffe6                                                                                                               
0027b8   6ae6     CLRF      0xe6,0x0                                                                                        
0027ba   ec01     CALL      0x6602,0x0                                                                                      
0027bc   f033                                                                                                               
0027be   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0027c0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0027c2   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0027c4   0012     RETURN    0x0                                                                                             
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e48   ec4e     CALL      0x289c,0x0                       cval = cval * 10 + c - '0';                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e4a   f014                                                                                                               
00289c   0e09     MOVLW     0x9                                                                                             
00289e   50db     MOVF      0xdb,0x0,0x0                                                                                    
0028a0   0d0a     MULLW     0xa                                                                                             
0028a2   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0028a4   24df     ADDWF     0xdf,0x0,0x0                                                                                    
0028a6   0fd0     ADDLW     0xd0                                                                                            
0028a8   6ee7     MOVWF     0xe7,0x0                                                                                        
0028aa   0e09     MOVLW     0x9                                                                                             
0028ac   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0028ae   ffdb                                                                                                               
0028b0   ef39     GOTO      0x2672                           c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0028b2   f013                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e4e   0e09     MOVLW     0x9                          width = cval;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e50   ec6c     CALL      0x26d8,0x0                                                                                      
001e52   f013                                                                                                               
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* if '-' is specified, '0' is ignored */                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e54   0e03     MOVLW     0x3                      if (flags & _FLAG_MINUS)                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e56   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
001e58   98db     BCF       0xdb,0x4,0x0               flags &= ~_FLAG_ZERO;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional precision field is next */                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e5a   0e2e     MOVLW     0x2e                     if (c == '.')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e5c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001e5e   e11b     BNZ       0x1e96                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e60   ec39     CALL      0x2672,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e62   f013                                                                                                               
001e64   0e2a     MOVLW     0x2a                         if (c == '*')                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e66   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001e68   e10b     BNZ       0x1e80                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e6a   ec35     CALL      0x266a,0x0                       n = va_arg (ap, int);                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e6c   f013                                                                                                               
001e6e   ec83     CALL      0x2706,0x0                                                                                      
001e70   f013                                                                                                               
00266a   d929     RCALL     0x28be                                                                                          
00266c   0e02     MOVLW     0x2                                                                                             
00266e   ef26     GOTO      0x284c                                                                                          
002670   f014                                                                                                               
00284c   5e2b     SUBWF     0x2b,0x1,0x0                                                                                    
00284e   0e00     MOVLW     0x0                                                                                             
002850   5a2c     SUBWFB    0x2c,0x1,0x0                                                                                    
002852   0ef7     MOVLW     0xf7                                                                                            
002854   c02b     MOVFF     0x2b,0xfdb                                                                                      
002856   ffdb                                                                                                               
002858   0ef8     MOVLW     0xf8                                                                                            
00285a   c02c     MOVFF     0x2c,0xfdb                                                                                      
00285c   ffdb                                                                                                               
00285e   c02b     MOVFF     0x2b,0xfe9                                                                                      
002860   ffe9                                                                                                               
002862   c02c     MOVFF     0x2c,0xfea                                                                                      
002864   ffea                                                                                                               
002866   0012     RETURN    0x0                                                                                             
0028be   0ef7     MOVLW     0xf7                                                                                            
0028c0   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0028c2   f02b                                                                                                               
0028c4   0ef8     MOVLW     0xf8                                                                                            
0028c6   cfdb     MOVFF     0xfdb,0x2c                                                                                      
0028c8   f02c                                                                                                               
0028ca   0012     RETURN    0x0                                                                                             
001e72   e103     BNZ       0x1e7a                           if (n >= 0)                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               {                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e74   0e13     MOVLW     0x13                                 precision = n;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e76   ecbe     CALL      0x277c,0x0                                                                                      
001e78   f013                                                                                                               
00277c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00277e   d8ce     RCALL     0x291c                                                                                          
00291c   6ee7     MOVWF     0xe7,0x0                                                                                        
00291e   0e05     MOVLW     0x5                                                                                             
002920   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002922   ffdb                                                                                                               
002924   0012     RETURN    0x0                                                                                             
002780   0e01     MOVLW     0x1                                  have_precision = 1;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002782   6ef3     MOVWF     0xf3,0x0                                                                                        
002784   0e06     MOVLW     0x6                                                                                             
002786   cff3     MOVFF     0xff3,0xfdb                                                                                     
002788   ffdb                                                                                                               
00278a   0012     RETURN    0x0                                                                                             
                                                               }                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e7a   ec39     CALL      0x2672,0x0                       c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e7c   f013                                                                                                               
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e7e   d00b     BRA       0x1e96                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e80   0e09     MOVLW     0x9                              cval = 0;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e82   6adb     CLRF      0xdb,0x0                                                                                        
001e84   ecda     CALL      0x27b4,0x0                       while ((unsigned char) isdigit (c))                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e86   f013                                                                                                               
001e88   e003     BZ        0x1e90                                                                                          
001e8e   d7fa     BRA       0x1e84                                                                                          
                                                               {                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e8a   ec4e     CALL      0x289c,0x0                           cval = cval * 10 + c - '0';                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e8c   f014                                                                                                               
                                                                 c = *++f;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               }                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e90   0e09     MOVLW     0x9                              precision = cval;                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e92   ecbe     CALL      0x277c,0x0                                                                                      
001e94   f013                                                                                                               
                                                             have_precision = 1;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the optional 'h' specifier. since int and short int are             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the same size for MPLAB C18, this is a NOP for us. */               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e96   0e68     MOVLW     0x68                     if (c == 'h')                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e98   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001e9a   e107     BNZ       0x1eaa                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e9c   ec39     CALL      0x2672,0x0                   c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001e9e   f013                                                                                                               
                                                         /* if 'c' is another 'h' character, this is an 'hh'                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifier and the size is 8 bits */                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ea0   0e68     MOVLW     0x68                         if (c == 'h')                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ea2   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001ea4   e11d     BNZ       0x1ee0                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ea6   0e03     MOVLW     0x3                              size = _FMT_BYTE;                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             c = *++f;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* 'z' and 't' are both 16-bit and so are NOPs */                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ea8   d018     BRA       0x1eda                   else if (c == 't' || c == 'z')                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eaa   0e74     MOVLW     0x74                                                                                            
001eac   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001eae   e017     BZ        0x1ede                                                                                          
001eb0   0e7a     MOVLW     0x7a                                                                                            
001eb2   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001eb4   e014     BZ        0x1ede                                                                                          
                                                       c = *++f;                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'H' specifier tells us to deal with 24-bit integers.            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        the 'T' and 'Z' specifiers are also 24 bit */                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eb6   0e48     MOVLW     0x48                     else if (c == 'H' || c == 'T' || c == 'Z')                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eb8   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001eba   e006     BZ        0x1ec8                                                                                          
001ebc   0e54     MOVLW     0x54                                                                                            
001ebe   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001ec0   e003     BZ        0x1ec8                                                                                          
001ec2   0e5a     MOVLW     0x5a                                                                                            
001ec4   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001ec6   e102     BNZ       0x1ecc                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ec8   0e02     MOVLW     0x2                          size = _FMT_SHLONG;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                     /* the 'l' specifier tells us to deal with 32-bit integers             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                        'j' specifies intmax_t (long in our case). */                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eca   d007     BRA       0x1eda                   else if (c == 'l' || c == 'j')                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ecc   0e6c     MOVLW     0x6c                                                                                            
001ece   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001ed0   e003     BZ        0x1ed8                                                                                          
001ed2   0e6a     MOVLW     0x6a                                                                                            
001ed4   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
001ed6   e104     BNZ       0x1ee0                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ed8   0e01     MOVLW     0x1                          size = _FMT_LONG;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001eda   ec11     CALL      0x2822,0x0                                                                                      
001edc   f014                                                                                                               
001ede   dbc9     RCALL     0x2672                       c = *++f;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002672   d961     RCALL     0x2936                                                                                          
002674   0008     TBLRD                                                                                                     
002676   50f5     MOVF      0xf5,0x0,0x0                                                                                    
002678   6edf     MOVWF     0xdf,0x0                                                                                        
00267a   0012     RETURN    0x0                                                                                             
002868   20da     ADDWFC    0xda,0x0,0x0                                                                                    
00286a   6eea     MOVWF     0xea,0x0                                                                                        
00286c   2aef     INCF      0xef,0x1,0x0                                                                                    
00286e   cfee     MOVFF     0xfee,0xff6                                                                                     
002870   fff6                                                                                                               
002872   0e00     MOVLW     0x0                                                                                             
002874   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
002876   cfee     MOVFF     0xfee,0xff7                                                                                     
002878   fff7                                                                                                               
00287a   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
00287c   cfee     MOVFF     0xfee,0xff8                                                                                     
00287e   fff8                                                                                                               
002880   0012     RETURN    0x0                                                                                             
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ee0   50df     MOVF      0xdf,0x0,0x0             switch (c)                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001ee2   0a6e     XORLW     0x6e                                                                                            
001ee4   e101     BNZ       0x1ee8                                                                                          
001ee6   d381     BRA       0x25ea                                                                                          
001ee8   0a1e     XORLW     0x1e                                                                                            
001eea   e101     BNZ       0x1eee                                                                                          
001eec   d192     BRA       0x2212                                                                                          
001eee   0a20     XORLW     0x20                                                                                            
001ef0   e101     BNZ       0x1ef4                                                                                          
001ef2   d18f     BRA       0x2212                                                                                          
001ef4   0a3f     XORLW     0x3f                                                                                            
001ef6   e101     BNZ       0x1efa                                                                                          
001ef8   d149     BRA       0x218c                                                                                          
001efa   0a1a     XORLW     0x1a                                                                                            
001efc   e101     BNZ       0x1f00                                                                                          
001efe   d146     BRA       0x218c                                                                                          
001f00   0a0d     XORLW     0xd                                                                                             
001f02   e101     BNZ       0x1f06                                                                                          
001f04   d143     BRA       0x218c                                                                                          
001f06   0a20     XORLW     0x20                                                                                            
001f08   e101     BNZ       0x1f0c                                                                                          
001f0a   d140     BRA       0x218c                                                                                          
001f0c   0a3a     XORLW     0x3a                                                                                            
001f0e   e101     BNZ       0x1f12                                                                                          
001f10   d13d     BRA       0x218c                                                                                          
001f12   0a20     XORLW     0x20                                                                                            
001f14   e101     BNZ       0x1f18                                                                                          
001f16   d13a     BRA       0x218c                                                                                          
001f18   0a26     XORLW     0x26                                                                                            
001f1a   e101     BNZ       0x1f1e                                                                                          
001f1c   d135     BRA       0x2188                                                                                          
001f1e   0a0d     XORLW     0xd                                                                                             
001f20   e101     BNZ       0x1f24                                                                                          
001f22   d132     BRA       0x2188                                                                                          
001f24   0a1a     XORLW     0x1a                                                                                            
001f26   e101     BNZ       0x1f2a                                                                                          
001f28   d0d9     BRA       0x20dc                                                                                          
001f2a   0a20     XORLW     0x20                                                                                            
001f2c   e04a     BZ        0x1fc2                                                                                          
001f2e   0a30     XORLW     0x30                                                                                            
001f30   e01f     BZ        0x1f70                                                                                          
001f32   0a46     XORLW     0x46                                                                                            
001f34   e00e     BZ        0x1f52                                                                                          
001f36   0a25     XORLW     0x25                                                                                            
001f38   e001     BZ        0x1f3c                                                                                          
001f3a   d385     BRA       0x2646                                                                                          
                                                       {                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '\0':                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* this is undefined behaviour. we have a trailing '%' character   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            in the string, perhaps with some flags, width, precision        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            stuff as well, but no format specifier. We'll, arbitrarily,     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            back up a character so that the loop will terminate             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            properly when it loops back and we'll output a '%'              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            character. */                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f3c   50d9     MOVF      0xd9,0x0,0x0                 --f;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f3e   0ff9     ADDLW     0xf9                                                                                            
001f40   6ee9     MOVWF     0xe9,0x0                                                                                        
001f42   0eff     MOVLW     0xff                                                                                            
001f44   20da     ADDWFC    0xda,0x0,0x0                                                                                    
001f46   6eea     MOVWF     0xea,0x0                                                                                        
001f48   0e01     MOVLW     0x1                                                                                             
001f4a   5eee     SUBWF     0xee,0x1,0x0                                                                                    
001f4c   0e00     MOVLW     0x0                                                                                             
001f4e   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
001f50   5aee     SUBWFB    0xee,0x1,0x0                                                                                    
                                                         /* fallthrough */                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case '%':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f52   ec1f     CALL      0x283e,0x0                   if (putc ('%', handle) == EOF)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f54   f014                                                                                                               
001f56   0e25     MOVLW     0x25                                                                                            
001f58   6ee6     MOVWF     0xe6,0x0                                                                                        
001f5a   db95     RCALL     0x2686                                                                                          
001f5c   e103     BNZ       0x1f64                                                                                          
001f5e   1c2c     COMF      0x2c,0x0,0x0                                                                                    
001f60   e101     BNZ       0x1f64                                                                                          
001f62   d36b     BRA       0x263a                                                                                          
                                                           return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f64   ec1b     CALL      0x2836,0x0                   ++count;                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f66   f014                                                                                                               
001f68   e201     BC        0x1f6c                                                                                          
001f6a   d36d     BRA       0x2646                                                                                          
001f6c   2adb     INCF      0xdb,0x1,0x0                                                                                    
001f6e   d36b     BRA       0x2646                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'c':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f70   0e08     MOVLW     0x8                          space_cnt = 0;                                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f72   6adb     CLRF      0xdb,0x0                                                                                        
001f74   0e04     MOVLW     0x4                          if (width > 1)                                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f76   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f78   0801     SUBLW     0x1                                                                                             
001f7a   e206     BC        0x1f88                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f7c   0e04     MOVLW     0x4                              space_cnt = width - 1;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f7e   04db     DECF      0xdb,0x0,0x0                                                                                    
001f80   ece3     CALL      0x27c6,0x0                                                                                      
001f82   f013                                                                                                               
001f84   50db     MOVF      0xdb,0x0,0x0                     count += space_cnt;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f86   db8b     RCALL     0x269e                                                                                          
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f88   0e08     MOVLW     0x8                          if (space_cnt && !(flags & _FLAG_MINUS))                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f8a   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f8c   e009     BZ        0x1fa0                                                                                          
001f8e   0e03     MOVLW     0x3                                                                                             
001f90   50db     MOVF      0xdb,0x0,0x0                                                                                    
001f92   0b01     ANDLW     0x1                                                                                             
001f94   e105     BNZ       0x1fa0                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f96   db72     RCALL     0x267c                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f98   e001     BZ        0x1f9c                                                                                          
001f9a   d34f     BRA       0x263a                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f9c   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001f9e   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fa0   db64     RCALL     0x266a                       c = va_arg (ap, int);                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fa2   cfef     MOVFF     0xfef,0xfdf                                                                                     
001fa4   ffdf                                                                                                               
001fa6   ec93     CALL      0x2926,0x0                   if (putc (c, handle) == EOF)                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fa8   f014                                                                                                               
001faa   e103     BNZ       0x1fb2                                                                                          
001fac   1c2c     COMF      0x2c,0x0,0x0                                                                                    
001fae   e101     BNZ       0x1fb2                                                                                          
001fb0   d344     BRA       0x263a                                                                                          
                                                           return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fb2   ec1b     CALL      0x2836,0x0                   ++count;                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fb4   f014                                                                                                               
001fb6   e301     BNC       0x1fba                                                                                          
001fb8   2adb     INCF      0xdb,0x1,0x0                                                                                    
001fba   db60     RCALL     0x267c                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fbc   e101     BNZ       0x1fc0                                                                                          
001fbe   d343     BRA       0x2646                                                                                          
001fc0   d33c     BRA       0x263a                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'S':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fc2   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fc4   50db     MOVF      0xdb,0x0,0x0                                                                                    
001fc6   0802     SUBLW     0x2                                                                                             
001fc8   e10f     BNZ       0x1fe8                                                                                          
001fca   ec5f     CALL      0x28be,0x0                     romstring = va_arg (ap, rom far char *);                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fcc   f014                                                                                                               
001fce   0e03     MOVLW     0x3                                                                                             
001fd0   ec26     CALL      0x284c,0x0                                                                                      
001fd2   f014                                                                                                               
001fd4   0e0e     MOVLW     0xe                                                                                             
001fd6   cfee     MOVFF     0xfee,0xfdb                                                                                     
001fd8   ffdb                                                                                                               
001fda   0e0f     MOVLW     0xf                                                                                             
001fdc   cfee     MOVFF     0xfee,0xfdb                                                                                     
001fde   ffdb                                                                                                               
001fe0   0e10     MOVLW     0x10                                                                                            
001fe2   cfee     MOVFF     0xfee,0xfdb                                                                                     
001fe4   ffdb                                                                                                               
001fe6   d020     BRA       0x2028                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fe8   0ef7     MOVLW     0xf7                           romstring = (far rom char*)va_arg (ap, rom near char *);         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
001fea   cfdb     MOVFF     0xfdb,0x2e                                                                                      
001fec   f02e                                                                                                               
001fee   0ef8     MOVLW     0xf8                                                                                            
001ff0   cfdb     MOVFF     0xfdb,0x2f                                                                                      
001ff2   f02f                                                                                                               
001ff4   0e02     MOVLW     0x2                                                                                             
001ff6   5e2e     SUBWF     0x2e,0x1,0x0                                                                                    
001ff8   0e00     MOVLW     0x0                                                                                             
001ffa   5a2f     SUBWFB    0x2f,0x1,0x0                                                                                    
001ffc   0ef7     MOVLW     0xf7                                                                                            
001ffe   c02e     MOVFF     0x2e,0xfdb                                                                                      
002000   ffdb                                                                                                               
002002   0ef8     MOVLW     0xf8                                                                                            
002004   c02f     MOVFF     0x2f,0xfdb                                                                                      
002006   ffdb                                                                                                               
002008   c02e     MOVFF     0x2e,0xfe9                                                                                      
00200a   ffe9                                                                                                               
00200c   c02f     MOVFF     0x2f,0xfea                                                                                      
00200e   ffea                                                                                                               
002010   ec16     CALL      0x282c,0x0                                                                                      
002012   f014                                                                                                               
002014   6a2d     CLRF      0x2d,0x0                                                                                        
002016   0e0e     MOVLW     0xe                                                                                             
002018   c02b     MOVFF     0x2b,0xfdb                                                                                      
00201a   ffdb                                                                                                               
00201c   0e0f     MOVLW     0xf                                                                                             
00201e   c02c     MOVFF     0x2c,0xfdb                                                                                      
002020   ffdb                                                                                                               
002022   0e10     MOVLW     0x10                                                                                            
002024   c02d     MOVFF     0x2d,0xfdb                                                                                      
002026   ffdb                                                                                                               
002028   0e0e     MOVLW     0xe                          n = strlenpgm (romstring);                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00202a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00202c   ffe6                                                                                                               
00202e   0e0f     MOVLW     0xf                                                                                             
002030   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002032   ffe6                                                                                                               
002034   0e10     MOVLW     0x10                                                                                            
002036   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002038   ffe6                                                                                                               
00203a   ecc7     CALL      0x618e,0x0                                                                                      
00203c   f030                                                                                                               
00203e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002040   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002042   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002044   0e13     MOVLW     0x13                                                                                            
002046   c01c     MOVFF     0x1c,0xfdb                                                                                      
002048   ffdb                                                                                                               
00204a   0e14     MOVLW     0x14                                                                                            
00204c   c01d     MOVFF     0x1d,0xfdb                                                                                      
00204e   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002050   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002052   50db     MOVF      0xdb,0x0,0x0                                                                                    
002054   e005     BZ        0x2060                                                                                          
002056   0e13     MOVLW     0x13                                                                                            
002058   ec5a     CALL      0x28b4,0x0                                                                                      
00205a   f014                                                                                                               
00205c   e201     BC        0x2060                                                                                          
00205e   db6a     RCALL     0x2734                         n = precision;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002734   0e05     MOVLW     0x5                                                                                             
002736   50db     MOVF      0xdb,0x0,0x0                                                                                    
002738   6ee6     MOVWF     0xe6,0x0                                                                                        
00273a   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00273c   0f13     ADDLW     0x13                                                                                            
00273e   d901     RCALL     0x2942                                                                                          
002740   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002742   50e7     MOVF      0xe7,0x0,0x0                                                                                    
002744   6eee     MOVWF     0xee,0x0                                                                                        
002746   6aed     CLRF      0xed,0x0                                                                                        
002748   0012     RETURN    0x0                                                                                             
002060   ec7e     CALL      0x28fc,0x0                   if (width < (unsigned char) n)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002062   f014                                                                                                               
002064   e202     BC        0x206a                                                                                          
0028fc   0e13     MOVLW     0x13                                                                                            
0028fe   50db     MOVF      0xdb,0x0,0x0                                                                                    
002900   6ef3     MOVWF     0xf3,0x0                                                                                        
002902   0e04     MOVLW     0x4                                                                                             
002904   ef67     GOTO      0x26ce                                                                                          
002906   f013                                                                                                               
002066   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002068   db37     RCALL     0x26d8                                                                                          
00206a   ec41     CALL      0x2882,0x0                   space_cnt = width - (unsigned char) n;                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00206c   f014                                                                                                               
002882   0e04     MOVLW     0x4                                                                                             
002884   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002886   ffe6                                                                                                               
002888   0e13     MOVLW     0x13                                                                                            
00288a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00288c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00288e   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
002890   df9a     RCALL     0x27c6                                                                                          
002892   50db     MOVF      0xdb,0x0,0x0                 count += space_cnt;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002894   df04     RCALL     0x269e                                                                                          
                                                         /* we've already calculated the space count that the width         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00206e   e006     BZ        0x207c                       if (have_precision && precision < width)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002070   0e04     MOVLW     0x4                                                                                             
002072   ec5a     CALL      0x28b4,0x0                                                                                      
002074   f014                                                                                                               
002076   e202     BC        0x207c                                                                                          
002896   0e06     MOVLW     0x6                                                                                             
002898   50db     MOVF      0xdb,0x0,0x0                                                                                    
00289a   0012     RETURN    0x0                                                                                             
002078   0e05     MOVLW     0x5                            width = precision;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00207a   db2e     RCALL     0x26d8                                                                                          
                                                         /* if right justified, we print the spaces before the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00207c   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00207e   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
002080   d005     BRA       0x208c                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002082   dafc     RCALL     0x267c                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002084   e001     BZ        0x2088                                                                                          
002086   d2d9     BRA       0x263a                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002088   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00208a   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00208c   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00208e   6adb     CLRF      0xdb,0x0                                                                                        
002090   0e0e     MOVLW     0xe                          for (c = *romstring; c && cval < width; c = *++romstring)          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002092   cfdb     MOVFF     0xfdb,0xff6                                                                                     
002094   fff6                                                                                                               
002096   0e0f     MOVLW     0xf                                                                                             
002098   cfdb     MOVFF     0xfdb,0xff7                                                                                     
00209a   fff7                                                                                                               
00209c   0e10     MOVLW     0x10                                                                                            
00209e   cfdb     MOVFF     0xfdb,0xff8                                                                                     
0020a0   fff8                                                                                                               
0020a2   0008     TBLRD                                                                                                     
0020a4   50f5     MOVF      0xf5,0x0,0x0                                                                                    
0020a6   6edf     MOVWF     0xdf,0x0                                                                                        
0020a8   50df     MOVF      0xdf,0x0,0x0                                                                                    
0020aa   e014     BZ        0x20d4                                                                                          
0020ac   ec84     CALL      0x2908,0x0                                                                                      
0020ae   f014                                                                                                               
0020b0   e211     BC        0x20d4                                                                                          
0020c8   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0020ca   0f0e     ADDLW     0xe                                                                                             
0020cc   6ee9     MOVWF     0xe9,0x0                                                                                        
0020ce   0e00     MOVLW     0x0                                                                                             
0020d0   dbcb     RCALL     0x2868                                                                                          
0020d2   d7e7     BRA       0x20a2                                                                                          
002908   0e04     MOVLW     0x4                                                                                             
00290a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00290c   6ef3     MOVWF     0xf3,0x0                                                                                        
00290e   0e09     MOVLW     0x9                                                                                             
002910   ef67     GOTO      0x26ce                                                                                          
002912   f013                                                                                                               
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020b2   ec93     CALL      0x2926,0x0                       if (putc (c, handle) == EOF)                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020b4   f014                                                                                                               
0020b6   e103     BNZ       0x20be                                                                                          
0020b8   1c2c     COMF      0x2c,0x0,0x0                                                                                    
0020ba   e101     BNZ       0x20be                                                                                          
0020bc   d2be     BRA       0x263a                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020be   dbbb     RCALL     0x2836                           ++count;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020c0   e301     BNC       0x20c4                                                                                          
0020c2   2adb     INCF      0xdb,0x1,0x0                                                                                    
0020c4   0e09     MOVLW     0x9                              ++cval;                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020c6   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020d4   dad3     RCALL     0x267c                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020d6   e101     BNZ       0x20da                                                                                          
0020d8   d2b6     BRA       0x2646                                                                                          
0020da   d2af     BRA       0x263a                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 's':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020dc   dac6     RCALL     0x266a                       ramstring = va_arg (ap, char *);                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020de   0e11     MOVLW     0x11                                                                                            
0020e0   cfee     MOVFF     0xfee,0xfdb                                                                                     
0020e2   ffdb                                                                                                               
0020e4   0e12     MOVLW     0x12                                                                                            
0020e6   cfed     MOVFF     0xfed,0xfdb                                                                                     
0020e8   ffdb                                                                                                               
0020ea   0e11     MOVLW     0x11                         n = strlen (ramstring);                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0020ec   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0020ee   ffe6                                                                                                               
0020f0   0e12     MOVLW     0x12                                                                                            
0020f2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0020f4   ffe6                                                                                                               
0020f6   ecb9     CALL      0x6172,0x0                                                                                      
0020f8   f030                                                                                                               
0020fa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0020fc   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0020fe   0e13     MOVLW     0x13                                                                                            
002100   cff3     MOVFF     0xff3,0xfdb                                                                                     
002102   ffdb                                                                                                               
002104   0e14     MOVLW     0x14                                                                                            
002106   cff4     MOVFF     0xff4,0xfdb                                                                                     
002108   ffdb                                                                                                               
                                                         /* Normalize the width based on the length of the actual           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string and the precision. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00210a   0e06     MOVLW     0x6                          if (have_precision && precision < (unsigned char) n)               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00210c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00210e   e004     BZ        0x2118                                                                                          
002110   0e13     MOVLW     0x13                                                                                            
002112   dbd0     RCALL     0x28b4                                                                                          
002114   e201     BC        0x2118                                                                                          
002116   db0e     RCALL     0x2734                         n = precision;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002118   ec7e     CALL      0x28fc,0x0                   if (width < (unsigned char) n)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00211a   f014                                                                                                               
00211c   e202     BC        0x2122                                                                                          
00211e   0e13     MOVLW     0x13                           width = n;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002120   dadb     RCALL     0x26d8                                                                                          
002122   dbaf     RCALL     0x2882                       space_cnt = width - (unsigned char) n;                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0027c6   6ee7     MOVWF     0xe7,0x0                                                                                        
0027c8   0e08     MOVLW     0x8                                                                                             
0027ca   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0027cc   ffdb                                                                                                               
0027ce   0012     RETURN    0x0                                                                                             
                                                         count += space_cnt;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* we've already calculated the space count that the width         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            will require. now we want the width field to have the           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            number of character to display from the string itself,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limited by the length of the actual string and the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specified precision. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002124   e005     BZ        0x2130                       if (have_precision && precision < width)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002126   0e04     MOVLW     0x4                                                                                             
002128   dbc5     RCALL     0x28b4                                                                                          
00212a   e202     BC        0x2130                                                                                          
0028b4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0028b6   6ef3     MOVWF     0xf3,0x0                                                                                        
0028b8   0e05     MOVLW     0x5                                                                                             
0028ba   ef67     GOTO      0x26ce                                                                                          
0028bc   f013                                                                                                               
00212c   0e05     MOVLW     0x5                            width = precision;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00212e   dad4     RCALL     0x26d8                                                                                          
0026d8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0026da   6ee7     MOVWF     0xe7,0x0                                                                                        
0026dc   0e04     MOVLW     0x4                                                                                             
0026de   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0026e0   ffdb                                                                                                               
0026e2   0012     RETURN    0x0                                                                                             
                                                         /* if right justified, we print the spaces before the              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            string */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002130   0e03     MOVLW     0x3                          if (!(flags & _FLAG_MINUS))                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002132   b0db     BTFSC     0xdb,0x0,0x0                                                                                    
002134   d005     BRA       0x2140                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002136   daa2     RCALL     0x267c                           if (s_put_n_chars (handle, space_cnt, ' '))                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002138   e001     BZ        0x213c                                                                                          
00213a   d27f     BRA       0x263a                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00213c   0e08     MOVLW     0x8                              space_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00213e   6adb     CLRF      0xdb,0x0                                                                                        
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002140   0e09     MOVLW     0x9                          cval = 0;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002142   6adb     CLRF      0xdb,0x0                                                                                        
002144   0e11     MOVLW     0x11                         for (c = *ramstring; c && cval < width; c = *++ramstring)          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002146   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002148   ffe9                                                                                                               
00214a   0e12     MOVLW     0x12                                                                                            
00214c   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00214e   ffea                                                                                                               
002150   cfef     MOVFF     0xfef,0xfdf                                                                                     
002152   ffdf                                                                                                               
002154   50df     MOVF      0xdf,0x0,0x0                                                                                    
002156   e014     BZ        0x2180                                                                                          
002158   dbd7     RCALL     0x2908                                                                                          
00215a   e212     BC        0x2180                                                                                          
002170   0e11     MOVLW     0x11                                                                                            
002172   2adb     INCF      0xdb,0x1,0x0                                                                                    
002174   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002176   ffe9                                                                                                               
002178   0e12     MOVLW     0x12                                                                                            
00217a   e3e8     BNC       0x214c                                                                                          
00217c   2adb     INCF      0xdb,0x1,0x0                                                                                    
00217e   d7e6     BRA       0x214c                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00215c   dbe4     RCALL     0x2926                           if (putc (c, handle) == EOF)                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00215e   e103     BNZ       0x2166                                                                                          
002160   1c2c     COMF      0x2c,0x0,0x0                                                                                    
002162   e101     BNZ       0x2166                                                                                          
002164   d26a     BRA       0x263a                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002166   db67     RCALL     0x2836                           ++count;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002168   e301     BNC       0x216c                                                                                          
00216a   2adb     INCF      0xdb,0x1,0x0                                                                                    
00216c   0e09     MOVLW     0x9                              ++cval;                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00216e   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* If there are spaces left, it's left justified.                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            Either way, calling the function unconditionally                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            is smaller code. */                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002180   da7d     RCALL     0x267c                       if (s_put_n_chars (handle, space_cnt, ' '))                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002182   e101     BNZ       0x2186                                                                                          
002184   d260     BRA       0x2646                                                                                          
002186   d259     BRA       0x263a                         return EOF;                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'd':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'i':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002188   0e03     MOVLW     0x3                          flags |= _FLAG_SIGNED;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00218a   8edb     BSF       0xdb,0x7,0x0                                                                                    
                                                         /* fall through */                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'o':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'u':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'x':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'X':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'b':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'B':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* This is a bit of a sneaky trick. The 'l' and 'hh' size          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            specifiers are valid only for the integer conversions,          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            not the 'p' or 'P' conversions, and are ignored for the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            latter. By jumping over the additional size specifier           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            checks here we get the best code size since we can              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                            limit the size checks in the remaining code. */                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00218c   0e07     MOVLW     0x7                          if (size == _FMT_LONG)                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00218e   04db     DECF      0xdb,0x0,0x0                                                                                    
002190   e110     BNZ       0x21b2                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002192   db95     RCALL     0x28be                           larg = va_arg (ap, long int);                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002194   0e04     MOVLW     0x4                                                                                             
002196   db5a     RCALL     0x284c                                                                                          
002198   0e0a     MOVLW     0xa                                                                                             
00219a   cfee     MOVFF     0xfee,0xfdb                                                                                     
00219c   ffdb                                                                                                               
00219e   0e0b     MOVLW     0xb                                                                                             
0021a0   cfee     MOVFF     0xfee,0xfdb                                                                                     
0021a2   ffdb                                                                                                               
0021a4   0e0c     MOVLW     0xc                                                                                             
0021a6   cfee     MOVFF     0xfee,0xfdb                                                                                     
0021a8   ffdb                                                                                                               
0021aa   0e0d     MOVLW     0xd                                                                                             
0021ac   cfee     MOVFF     0xfee,0xfdb                                                                                     
0021ae   ffdb                                                                                                               
0021b0   d06c     BRA       0x228a                           goto _do_integer_conversion;                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0021b2   0e07     MOVLW     0x7                          else if (size == _FMT_BYTE)                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0021b4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0021b6   0803     SUBLW     0x3                                                                                             
0021b8   e12c     BNZ       0x2212                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0021ba   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0021bc   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
0021be   d00d     BRA       0x21da                                                                                          
0021c0   dab2     RCALL     0x2726                             larg = (signed char) va_arg (ap, int);                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0021c2   0e02     MOVLW     0x2                                                                                             
0021c4   da76     RCALL     0x26b2                                                                                          
0021c6   cfef     MOVFF     0xfef,0x2b                                                                                      
0021c8   f02b                                                                                                               
0021ca   6a2c     CLRF      0x2c,0x0                                                                                        
0021cc   6a2d     CLRF      0x2d,0x0                                                                                        
0021ce   6a2e     CLRF      0x2e,0x0                                                                                        
0021d0   ae2b     BTFSS     0x2b,0x7,0x0                                                                                    
0021d2   d039     BRA       0x2246                                                                                          
0021d4   682c     SETF      0x2c,0x0                                                                                        
0021d6   682d     SETF      0x2d,0x0                                                                                        
0021d8   d035     BRA       0x2244                           else                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0021da   0ef7     MOVLW     0xf7                               larg = (unsigned char) va_arg (ap, unsigned int);            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0021dc   cfdb     MOVFF     0xfdb,0x2c                                                                                      
0021de   f02c                                                                                                               
0021e0   0ef8     MOVLW     0xf8                                                                                            
0021e2   cfdb     MOVFF     0xfdb,0x2d                                                                                      
0021e4   f02d                                                                                                               
0021e6   0e02     MOVLW     0x2                                                                                             
0021e8   5e2c     SUBWF     0x2c,0x1,0x0                                                                                    
0021ea   0e00     MOVLW     0x0                                                                                             
0021ec   5a2d     SUBWFB    0x2d,0x1,0x0                                                                                    
0021ee   0ef7     MOVLW     0xf7                                                                                            
0021f0   c02c     MOVFF     0x2c,0xfdb                                                                                      
0021f2   ffdb                                                                                                               
0021f4   0ef8     MOVLW     0xf8                                                                                            
0021f6   c02d     MOVFF     0x2d,0xfdb                                                                                      
0021f8   ffdb                                                                                                               
0021fa   c02c     MOVFF     0x2c,0xfe9                                                                                      
0021fc   ffe9                                                                                                               
0021fe   c02d     MOVFF     0x2d,0xfea                                                                                      
002200   ffea                                                                                                               
002202   cfef     MOVFF     0xfef,0x2b                                                                                      
002204   f02b                                                                                                               
002206   0e0a     MOVLW     0xa                                                                                             
002208   c02b     MOVFF     0x2b,0xfdb                                                                                      
00220a   ffdb                                                                                                               
00220c   0e0b     MOVLW     0xb                                                                                             
00220e   6adb     CLRF      0xdb,0x0                                                                                        
002210   d038     BRA       0x2282                           goto _do_integer_conversion;                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* fall through */                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'p':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'P':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002212   0e07     MOVLW     0x7                          if (size == _FMT_SHLONG)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002214   50db     MOVF      0xdb,0x0,0x0                                                                                    
002216   0802     SUBLW     0x2                                                                                             
002218   e109     BNZ       0x222c                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00221a   0e03     MOVLW     0x3                              if (flags & _FLAG_SIGNED)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00221c   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
00221e   d004     BRA       0x2228                                                                                          
002220   db59     RCALL     0x28d4                             larg = va_arg (ap, short long int);                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002222   ae2d     BTFSS     0x2d,0x7,0x0                                                                                    
002224   d010     BRA       0x2246                                                                                          
0027d0   cfee     MOVFF     0xfee,0x2b                                                                                      
0027d2   f02b                                                                                                               
0027d4   cfee     MOVFF     0xfee,0x2c                                                                                      
0027d6   f02c                                                                                                               
0027d8   cfef     MOVFF     0xfef,0x2d                                                                                      
0027da   f02d                                                                                                               
0027dc   6a2e     CLRF      0x2e,0x0                                                                                        
0027de   0012     RETURN    0x0                                                                                             
0028d4   df28     RCALL     0x2726                                                                                          
0028d6   0e03     MOVLW     0x3                                                                                             
0028d8   deec     RCALL     0x26b2                                                                                          
0028da   efe8     GOTO      0x27d0                                                                                          
0028dc   f013                                                                                                               
002226   d00e     BRA       0x2244                           else                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002228   db55     RCALL     0x28d4                             larg = va_arg (ap, unsigned short long int);                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00222a   d00d     BRA       0x2246                       else if (flags & _FLAG_SIGNED)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00222c   0e03     MOVLW     0x3                                                                                             
00222e   aedb     BTFSS     0xdb,0x7,0x0                                                                                    
002230   d012     BRA       0x2256                                                                                          
002232   da79     RCALL     0x2726                         larg = va_arg (ap, int);                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002234   0e02     MOVLW     0x2                                                                                             
002236   da3d     RCALL     0x26b2                                                                                          
002238   daf9     RCALL     0x282c                                                                                          
00223a   6a2d     CLRF      0x2d,0x0                                                                                        
00223c   6a2e     CLRF      0x2e,0x0                                                                                        
00223e   ae2c     BTFSS     0x2c,0x7,0x0                                                                                    
002240   d002     BRA       0x2246                                                                                          
002242   682d     SETF      0x2d,0x0                                                                                        
002244   682e     SETF      0x2e,0x0                                                                                        
002246   dae2     RCALL     0x280c                                                                                          
002248   0e0c     MOVLW     0xc                                                                                             
00224a   c02d     MOVFF     0x2d,0xfdb                                                                                      
00224c   ffdb                                                                                                               
00224e   0e0d     MOVLW     0xd                                                                                             
002250   c02e     MOVFF     0x2e,0xfdb                                                                                      
002252   ffdb                                                                                                               
0026b2   5e2f     SUBWF     0x2f,0x1,0x0                                                                                    
0026b4   0e00     MOVLW     0x0                                                                                             
0026b6   5a30     SUBWFB    0x30,0x1,0x0                                                                                    
0026b8   0ef7     MOVLW     0xf7                                                                                            
0026ba   c02f     MOVFF     0x2f,0xfdb                                                                                      
0026bc   ffdb                                                                                                               
0026be   0ef8     MOVLW     0xf8                                                                                            
0026c0   c030     MOVFF     0x30,0xfdb                                                                                      
0026c2   ffdb                                                                                                               
0026c4   c02f     MOVFF     0x2f,0xfe9                                                                                      
0026c6   ffe9                                                                                                               
0026c8   c030     MOVFF     0x30,0xfea                                                                                      
0026ca   ffea                                                                                                               
0026cc   0012     RETURN    0x0                                                                                             
002726   0ef7     MOVLW     0xf7                                                                                            
002728   cfdb     MOVFF     0xfdb,0x2f                                                                                      
00272a   f02f                                                                                                               
00272c   0ef8     MOVLW     0xf8                                                                                            
00272e   cfdb     MOVFF     0xfdb,0x30                                                                                      
002730   f030                                                                                                               
002732   0012     RETURN    0x0                                                                                             
00280c   0e0a     MOVLW     0xa                                                                                             
00280e   c02b     MOVFF     0x2b,0xfdb                                                                                      
002810   ffdb                                                                                                               
002812   0e0b     MOVLW     0xb                                                                                             
002814   c02c     MOVFF     0x2c,0xfdb                                                                                      
002816   ffdb                                                                                                               
002818   0012     RETURN    0x0                                                                                             
00282c   cfee     MOVFF     0xfee,0x2b                                                                                      
00282e   f02b                                                                                                               
002830   cfef     MOVFF     0xfef,0x2c                                                                                      
002832   f02c                                                                                                               
002834   0012     RETURN    0x0                                                                                             
002254   d01a     BRA       0x228a                       else                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002256   0ef7     MOVLW     0xf7                           larg = va_arg (ap, unsigned int);                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002258   cfdb     MOVFF     0xfdb,0x2d                                                                                      
00225a   f02d                                                                                                               
00225c   0ef8     MOVLW     0xf8                                                                                            
00225e   cfdb     MOVFF     0xfdb,0x2e                                                                                      
002260   f02e                                                                                                               
002262   0e02     MOVLW     0x2                                                                                             
002264   5e2d     SUBWF     0x2d,0x1,0x0                                                                                    
002266   0e00     MOVLW     0x0                                                                                             
002268   5a2e     SUBWFB    0x2e,0x1,0x0                                                                                    
00226a   0ef7     MOVLW     0xf7                                                                                            
00226c   c02d     MOVFF     0x2d,0xfdb                                                                                      
00226e   ffdb                                                                                                               
002270   0ef8     MOVLW     0xf8                                                                                            
002272   c02e     MOVFF     0x2e,0xfdb                                                                                      
002274   ffdb                                                                                                               
002276   c02d     MOVFF     0x2d,0xfe9                                                                                      
002278   ffe9                                                                                                               
00227a   c02e     MOVFF     0x2e,0xfea                                                                                      
00227c   ffea                                                                                                               
00227e   dad6     RCALL     0x282c                                                                                          
002280   dac5     RCALL     0x280c                                                                                          
002282   0e0c     MOVLW     0xc                                                                                             
002284   6adb     CLRF      0xdb,0x0                                                                                        
002286   0e0d     MOVLW     0xd                                                                                             
002288   6adb     CLRF      0xdb,0x0                                                                                        
                                                       _do_integer_conversion:                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* default precision is 1 */                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00228a   0e06     MOVLW     0x6                          if (!have_precision)                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00228c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00228e   e105     BNZ       0x229a                                                                                          
002290   0e01     MOVLW     0x1                            precision = 1;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002292   6ef3     MOVWF     0xf3,0x0                                                                                        
002294   0e05     MOVLW     0x5                                                                                             
002296   cff3     MOVFF     0xff3,0xfdb                                                                                     
002298   ffdb                                                                                                               
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         {                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00229a   0e15     MOVLW     0x15                           unsigned char digit_cnt = 0;                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00229c   6adb     CLRF      0xdb,0x0                                                                                        
00229e   0e16     MOVLW     0x16                           unsigned char prefix_cnt = 0;                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022a0   6adb     CLRF      0xdb,0x0                                                                                        
                                                           unsigned char sign_char;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* A 32 bit number will require at most 32 digits in the         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              string representation (binary format). */                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           char buf[33];                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* Start storing digits least-significant first */               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022a2   50d9     MOVF      0xd9,0x0,0x0                   char *q = &buf[31];                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022a4   0f37     ADDLW     0x37                                                                                            
0022a6   6e2b     MOVWF     0x2b,0x0                                                                                        
0022a8   0e00     MOVLW     0x0                                                                                             
0022aa   20da     ADDWFC    0xda,0x0,0x0                                                                                    
0022ac   6e2c     MOVWF     0x2c,0x0                                                                                        
0022ae   0e39     MOVLW     0x39                                                                                            
0022b0   c02b     MOVFF     0x2b,0xfdb                                                                                      
0022b2   ffdb                                                                                                               
0022b4   0e3a     MOVLW     0x3a                                                                                            
0022b6   c02c     MOVFF     0x2c,0xfdb                                                                                      
0022b8   ffdb                                                                                                               
                                                           /* null terminate the string */                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022ba   0e38     MOVLW     0x38                           buf[32] = '\0';                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022bc   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022be   0e08     MOVLW     0x8                            space_cnt = 0;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022c0   6adb     CLRF      0xdb,0x0                                                                                        
0022c2   0e0a     MOVLW     0xa                            size = 10;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022c4   daae     RCALL     0x2822                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022c6   50df     MOVF      0xdf,0x0,0x0                   switch (c)                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022c8   0a78     XORLW     0x78                                                                                            
0022ca   e012     BZ        0x22f0                                                                                          
0022cc   0a20     XORLW     0x20                                                                                            
0022ce   e010     BZ        0x22f0                                                                                          
0022d0   0a28     XORLW     0x28                                                                                            
0022d2   e00c     BZ        0x22ec                                                                                          
0022d4   0a20     XORLW     0x20                                                                                            
0022d6   e00a     BZ        0x22ec                                                                                          
0022d8   0a3f     XORLW     0x3f                                                                                            
0022da   e006     BZ        0x22e8                                                                                          
0022dc   0a0d     XORLW     0xd                                                                                             
0022de   e002     BZ        0x22e4                                                                                          
0022e0   0a20     XORLW     0x20                                                                                            
0022e2   e108     BNZ       0x22f4                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'b':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'B':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022e4   0e02     MOVLW     0x2                                size = 2;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022e6   d005     BRA       0x22f2                             break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'o':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022e8   0e08     MOVLW     0x8                                size = 8;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022ea   d003     BRA       0x22f2                             break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'p':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'P':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               /* from here on out, treat 'p' conversions just              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  like 'x' conversions. */                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022ec   0e08     MOVLW     0x8                                c += 'x' - 'p';                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022ee   26df     ADDWF     0xdf,0x1,0x0                                                                                    
                                                               /* fall through */                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'x':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             case 'X':                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022f0   0e10     MOVLW     0x10                               size = 16;                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022f2   da97     RCALL     0x2822                                                                                          
002822   6ef3     MOVWF     0xf3,0x0                                                                                        
002824   0e07     MOVLW     0x7                                                                                             
002826   cff3     MOVFF     0xff3,0xfdb                                                                                     
002828   ffdb                                                                                                               
00282a   0012     RETURN    0x0                                                                                             
                                                               break;                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's an unsigned conversion, we should ignore the          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              ' ' and '+' flags */                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022f4   0e03     MOVLW     0x3                            if (!(flags & _FLAG_SIGNED))                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022f6   bedb     BTFSC     0xdb,0x7,0x0                                                                                    
0022f8   d002     BRA       0x22fe                                                                                          
0022fa   92db     BCF       0xdb,0x1,0x0                     flags &= ~(_FLAG_PLUS | _FLAG_SPACE);                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022fc   94db     BCF       0xdb,0x2,0x0                                                                                    
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if it's a negative value, we need to negate the               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned version before we convert to text. Using             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              unsigned for this allows us to (ab)use the 2's                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              complement system to avoid overflow and be able to            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              adequately handle LONG_MIN.                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              We'll figure out what sign character to print, if             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              any, here as well. */                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0022fe   50db     MOVF      0xdb,0x0,0x0                   if (flags & _FLAG_SIGNED && ((long) larg < 0))                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002300   0b80     ANDLW     0x80                                                                                            
002302   e026     BZ        0x2350                                                                                          
002304   da8a     RCALL     0x281a                                                                                          
002306   0e03     MOVLW     0x3                                                                                             
002308   50eb     MOVF      0xeb,0x0,0x0                                                                                    
00230a   0a00     XORLW     0x0                                                                                             
00230c   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
00230e   d002     BRA       0x2314                                                                                          
002310   90d8     BCF       0xd8,0x0,0x0                                                                                    
002312   d008     BRA       0x2324                                                                                          
002314   0e00     MOVLW     0x0                                                                                             
002316   5cee     SUBWF     0xee,0x0,0x0                                                                                    
002318   0e00     MOVLW     0x0                                                                                             
00231a   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
00231c   0e00     MOVLW     0x0                                                                                             
00231e   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
002320   0e00     MOVLW     0x0                                                                                             
002322   58ee     SUBWFB    0xee,0x0,0x0                                                                                    
002324   e215     BC        0x2350                                                                                          
00281a   50d9     MOVF      0xd9,0x0,0x0                                                                                    
00281c   0f0a     ADDLW     0xa                                                                                             
00281e   efa1     GOTO      0x2942                                                                                          
002820   f014                                                                                                               
002942   6ee9     MOVWF     0xe9,0x0                                                                                        
002944   0e00     MOVLW     0x0                                                                                             
002946   20da     ADDWFC    0xda,0x0,0x0                                                                                    
002948   6eea     MOVWF     0xea,0x0                                                                                        
00294a   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002326   da11     RCALL     0x274a                             larg = -(long) larg;                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002328   6820     SETF      0x20,0x0                                                                                        
00232a   6821     SETF      0x21,0x0                                                                                        
00232c   6822     SETF      0x22,0x0                                                                                        
00232e   6823     SETF      0x23,0x0                                                                                        
002330   ec78     CALL      0x62f0,0x0                                                                                      
002332   f031                                                                                                               
002334   0e0a     MOVLW     0xa                                                                                             
002336   c017     MOVFF     0x17,0xfdb                                                                                      
002338   ffdb                                                                                                               
00233a   0e0b     MOVLW     0xb                                                                                             
00233c   c018     MOVFF     0x18,0xfdb                                                                                      
00233e   ffdb                                                                                                               
002340   0e0c     MOVLW     0xc                                                                                             
002342   c019     MOVFF     0x19,0xfdb                                                                                      
002344   ffdb                                                                                                               
002346   0e0d     MOVLW     0xd                                                                                             
002348   c01a     MOVFF     0x1a,0xfdb                                                                                      
00234a   ffdb                                                                                                               
00274a   0e0a     MOVLW     0xa                                                                                             
00274c   cfdb     MOVFF     0xfdb,0x1b                                                                                      
00274e   f01b                                                                                                               
002750   0e0b     MOVLW     0xb                                                                                             
002752   cfdb     MOVFF     0xfdb,0x1c                                                                                      
002754   f01c                                                                                                               
002756   0e0c     MOVLW     0xc                                                                                             
002758   cfdb     MOVFF     0xfdb,0x1d                                                                                      
00275a   f01d                                                                                                               
00275c   0e0d     MOVLW     0xd                                                                                             
00275e   cfdb     MOVFF     0xfdb,0x1e                                                                                      
002760   f01e                                                                                                               
002762   0012     RETURN    0x0                                                                                             
00234c   0e2d     MOVLW     0x2d                               sign_char = '-';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00234e   d008     BRA       0x2360                         else if (flags & _FLAG_PLUS)                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002350   0e03     MOVLW     0x3                                                                                             
002352   a2db     BTFSS     0xdb,0x1,0x0                                                                                    
002354   d002     BRA       0x235a                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002356   0e2b     MOVLW     0x2b                               sign_char = '+';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002358   d003     BRA       0x2360                         else if (flags & _FLAG_SPACE)                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00235a   a4db     BTFSS     0xdb,0x2,0x0                                                                                    
00235c   d008     BRA       0x236e                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00235e   0e20     MOVLW     0x20                               sign_char = ' ';                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002360   6ef3     MOVWF     0xf3,0x0                                                                                        
002362   0e17     MOVLW     0x17                                                                                            
002364   cff3     MOVFF     0xff3,0xfdb                                                                                     
002366   ffdb                                                                                                               
002368   0e15     MOVLW     0x15                               ++digit_cnt;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00236a   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00236c   d002     BRA       0x2372                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00236e   0e17     MOVLW     0x17                             sign_char = '\0';                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002370   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* get the digits for the actual number. If the                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision is zero and the value is zero, the result           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is no characters. */                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002372   0e05     MOVLW     0x5                            if (precision || larg)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002374   50db     MOVF      0xdb,0x0,0x0                                                                                    
002376   e103     BNZ       0x237e                                                                                          
002378   d9b5     RCALL     0x26e4                                                                                          
00237a   e101     BNZ       0x237e                                                                                          
00237c   d089     BRA       0x2490                                                                                          
0026e4   0e0a     MOVLW     0xa                                                                                             
0026e6   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0026e8   f02b                                                                                                               
0026ea   0e0b     MOVLW     0xb                                                                                             
0026ec   cfdb     MOVFF     0xfdb,0x2c                                                                                      
0026ee   f02c                                                                                                               
0026f0   0e0c     MOVLW     0xc                                                                                             
0026f2   cfdb     MOVFF     0xfdb,0x2d                                                                                      
0026f4   f02d                                                                                                               
0026f6   0e0d     MOVLW     0xd                                                                                             
0026f8   cfdb     MOVFF     0xfdb,0x2e                                                                                      
0026fa   f02e                                                                                                               
0026fc   502b     MOVF      0x2b,0x0,0x0                                                                                    
0026fe   102c     IORWF     0x2c,0x0,0x0                                                                                    
002700   102d     IORWF     0x2d,0x0,0x0                                                                                    
002702   102e     IORWF     0x2e,0x0,0x0                                                                                    
002704   0012     RETURN    0x0                                                                                             
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                               do                                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                 {                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00237e   0ece     MOVLW     0xce                                   cval = s_digits[larg % size];                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002380   6e2b     MOVWF     0x2b,0x0                                                                                        
002382   0e66     MOVLW     0x66                                                                                            
002384   6e2c     MOVWF     0x2c,0x0                                                                                        
002386   0e00     MOVLW     0x0                                                                                             
002388   6e2d     MOVWF     0x2d,0x0                                                                                        
00238a   0e07     MOVLW     0x7                                                                                             
00238c   cfdb     MOVFF     0xfdb,0x2e                                                                                      
00238e   f02e                                                                                                               
002390   6a2f     CLRF      0x2f,0x0                                                                                        
002392   6a30     CLRF      0x30,0x0                                                                                        
002394   6a31     CLRF      0x31,0x0                                                                                        
002396   c02e     MOVFF     0x2e,0x20                                                                                       
002398   f020                                                                                                               
00239a   c02f     MOVFF     0x2f,0x21                                                                                       
00239c   f021                                                                                                               
00239e   c030     MOVFF     0x30,0x22                                                                                       
0023a0   f022                                                                                                               
0023a2   c031     MOVFF     0x31,0x23                                                                                       
0023a4   f023                                                                                                               
0023a6   d9d1     RCALL     0x274a                                                                                          
0023a8   ec78     CALL      0x64f0,0x0                                                                                      
0023aa   f032                                                                                                               
0023ac   502b     MOVF      0x2b,0x0,0x0                                                                                    
0023ae   2417     ADDWF     0x17,0x0,0x0                                                                                    
0023b0   6ef3     MOVWF     0xf3,0x0                                                                                        
0023b2   502c     MOVF      0x2c,0x0,0x0                                                                                    
0023b4   2018     ADDWFC    0x18,0x0,0x0                                                                                    
0023b6   6ef4     MOVWF     0xf4,0x0                                                                                        
0023b8   502d     MOVF      0x2d,0x0,0x0                                                                                    
0023ba   2019     ADDWFC    0x19,0x0,0x0                                                                                    
0023bc   6ef8     MOVWF     0xf8,0x0                                                                                        
0023be   cff4     MOVFF     0xff4,0xff7                                                                                     
0023c0   fff7                                                                                                               
0023c2   cff3     MOVFF     0xff3,0xff6                                                                                     
0023c4   fff6                                                                                                               
0023c6   0008     TBLRD                                                                                                     
0023c8   0e09     MOVLW     0x9                                                                                             
0023ca   cff5     MOVFF     0xff5,0xfdb                                                                                     
0023cc   ffdb                                                                                                               
0023ce   0e58     MOVLW     0x58                                   if (c == 'X' && cval >= 'a')                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0023d0   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
0023d2   e10f     BNZ       0x23f2                                                                                          
0023d4   0e61     MOVLW     0x61                                                                                            
0023d6   6ef3     MOVWF     0xf3,0x0                                                                                        
0023d8   0e09     MOVLW     0x9                                                                                             
0023da   d979     RCALL     0x26ce                                                                                          
0023dc   e30a     BNC       0x23f2                                                                                          
0026ce   cfdb     MOVFF     0xfdb,0xff4                                                                                     
0026d0   fff4                                                                                                               
0026d2   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0026d4   5cf4     SUBWF     0xf4,0x0,0x0                                                                                    
0026d6   0012     RETURN    0x0                                                                                             
0023de   0e20     MOVLW     0x20                                     cval -= 'a' - 'A';                                     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0023e0   6e2b     MOVWF     0x2b,0x0                                                                                        
0023e2   0e09     MOVLW     0x9                                                                                             
0023e4   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
0023e6   ffe7                                                                                                               
0023e8   502b     MOVF      0x2b,0x0,0x0                                                                                    
0023ea   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
0023ec   0e09     MOVLW     0x9                                                                                             
0023ee   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0023f0   ffdb                                                                                                               
0023f2   0e07     MOVLW     0x7                                    larg /= size;                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0023f4   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0023f6   f02b                                                                                                               
0023f8   6a2c     CLRF      0x2c,0x0                                                                                        
0023fa   6a2d     CLRF      0x2d,0x0                                                                                        
0023fc   6a2e     CLRF      0x2e,0x0                                                                                        
0023fe   da0d     RCALL     0x281a                                                                                          
002400   c02b     MOVFF     0x2b,0x20                                                                                       
002402   f020                                                                                                               
002404   c02c     MOVFF     0x2c,0x21                                                                                       
002406   f021                                                                                                               
002408   c02d     MOVFF     0x2d,0x22                                                                                       
00240a   f022                                                                                                               
00240c   c02e     MOVFF     0x2e,0x23                                                                                       
00240e   f023                                                                                                               
002410   cfee     MOVFF     0xfee,0x1b                                                                                      
002412   f01b                                                                                                               
002414   cfee     MOVFF     0xfee,0x1c                                                                                      
002416   f01c                                                                                                               
002418   cfee     MOVFF     0xfee,0x1d                                                                                      
00241a   f01d                                                                                                               
00241c   cfef     MOVFF     0xfef,0x1e                                                                                      
00241e   f01e                                                                                                               
002420   ec78     CALL      0x64f0,0x0                                                                                      
002422   f032                                                                                                               
002424   c01e     MOVFF     0x1e,0xfed                                                                                      
002426   ffed                                                                                                               
002428   c01d     MOVFF     0x1d,0xfed                                                                                      
00242a   ffed                                                                                                               
00242c   c01c     MOVFF     0x1c,0xfed                                                                                      
00242e   ffed                                                                                                               
002430   c01b     MOVFF     0x1b,0xfef                                                                                      
002432   ffef                                                                                                               
002434   0e39     MOVLW     0x39                                   *q-- = cval;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002436   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
002438   ffe9                                                                                                               
00243a   06db     DECF      0xdb,0x1,0x0                                                                                    
00243c   0e3a     MOVLW     0x3a                                                                                            
00243e   cfdb     MOVFF     0xfdb,0xfea                                                                                     
002440   ffea                                                                                                               
002442   e201     BC        0x2446                                                                                          
002444   06db     DECF      0xdb,0x1,0x0                                                                                    
002446   0e09     MOVLW     0x9                                                                                             
002448   cfdb     MOVFF     0xfdb,0xfef                                                                                     
00244a   ffef                                                                                                               
00244c   0e15     MOVLW     0x15                                   ++digit_cnt;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00244e   2adb     INCF      0xdb,0x1,0x0                                                                                    
                                                                 }                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002450   d949     RCALL     0x26e4                             while (larg);                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002452   e195     BNZ       0x237e                                                                                          
                                                               /* if the '#' flag was specified and we're dealing           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  with an 'o', 'b', 'B', 'x', or 'X' conversion,            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                  we need a bit more. */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002454   0e03     MOVLW     0x3                                if (flags & _FLAG_OCTO)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002456   a6db     BTFSS     0xdb,0x3,0x0                                                                                    
002458   d01d     BRA       0x2494                                                                                          
                                                                 {                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00245a   0e6f     MOVLW     0x6f                                   if (c == 'o')                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00245c   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00245e   e106     BNZ       0x246c                                                                                          
                                                                     {                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                       /* per the standard, for octal, the '#' flag         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          makes the precision be at least one more          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                          than the number of digits in the number */        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002460   d9bf     RCALL     0x27e0                                     if (precision <= digit_cnt)                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002462   e318     BNC       0x2494                                                                                          
0027e0   0e05     MOVLW     0x5                                                                                             
0027e2   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0027e4   f02b                                                                                                               
0027e6   0e15     MOVLW     0x15                                                                                            
0027e8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0027ea   80d8     BSF       0xd8,0x0,0x0                                                                                    
0027ec   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
0027ee   0012     RETURN    0x0                                                                                             
002464   0e15     MOVLW     0x15                                         precision = digit_cnt + 1;                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002466   28db     INCF      0xdb,0x0,0x0                                                                                    
002468   da59     RCALL     0x291c                                                                                          
                                                                     }                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00246a   d014     BRA       0x2494                                 else if (c == 'x'                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00246c   0e78     MOVLW     0x78                                                                                            
00246e   5cdf     SUBWF     0xdf,0x0,0x0                                    || c == 'X' || c == 'b' || c == 'B')            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002470   e009     BZ        0x2484                                                                                          
002472   0e58     MOVLW     0x58                                                                                            
002474   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002476   e006     BZ        0x2484                                                                                          
002478   0e62     MOVLW     0x62                                                                                            
00247a   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
00247c   e003     BZ        0x2484                                                                                          
00247e   0e42     MOVLW     0x42                                                                                            
002480   5cdf     SUBWF     0xdf,0x0,0x0                                                                                    
002482   e108     BNZ       0x2494                                                                                          
002484   0e02     MOVLW     0x2                                      prefix_cnt = 2;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002486   6ef3     MOVWF     0xf3,0x0                                                                                        
002488   0e16     MOVLW     0x16                                                                                            
00248a   cff3     MOVFF     0xff3,0xfdb                                                                                     
00248c   ffdb                                                                                                               
                                                                 }                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00248e   d002     BRA       0x2494                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002490   0e15     MOVLW     0x15                             digit_cnt = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002492   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* The leading zero count depends on whether the '0'             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              flag was specified or not. If it was not, then the            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count is the difference between the specified                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision and the number of digits (including the             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              sign character, if any) to be printed; otherwise,             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              it's as if the precision were equal to the max of             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the specified precision and the field width. If a             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              precision was specified, the '0' flag is ignored,             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              however. */                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002494   0e03     MOVLW     0x3                            if ((flags & _FLAG_ZERO) && (width > precision)                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002496   50db     MOVF      0xdb,0x0,0x0                                                                                    
002498   0b10     ANDLW     0x10                                                                                            
00249c   0e04     MOVLW     0x4                                                                                             
00249e   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0024a0   f02b                                                                                                               
0024a2   0e05     MOVLW     0x5                                                                                             
0024a4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0024a6   80d8     BSF       0xd8,0x0,0x0                                                                                    
0024a8   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
00249a   e00e     BZ        0x24b8                             && !have_precision)                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0024aa   e206     BC        0x24b8                                                                                          
0024ac   0e06     MOVLW     0x6                                                                                             
0024ae   50db     MOVF      0xdb,0x0,0x0                                                                                    
0024b0   e103     BNZ       0x24b8                                                                                          
0024b2   0e04     MOVLW     0x4                              precision = width;                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0024b4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0024b6   da32     RCALL     0x291c                                                                                          
                                                           /* for the rest of the processing, precision contains            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the leading zero count for the conversion. */                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0024b8   d993     RCALL     0x27e0                         if (precision > digit_cnt)                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0024ba   e20a     BC        0x24d0                                                                                          
0024bc   0e05     MOVLW     0x5                              precision -= digit_cnt;                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0024be   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
0024c0   ffe7                                                                                                               
0024c2   0e15     MOVLW     0x15                                                                                            
0024c4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0024c6   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
0024c8   0e05     MOVLW     0x5                                                                                             
0024ca   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
0024cc   ffdb                                                                                                               
0024ce   d002     BRA       0x24d4                         else                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0024d0   0e05     MOVLW     0x5                              precision = 0;                                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0024d2   6adb     CLRF      0xdb,0x0                                                                                        
                                                           /* the space count is the difference between the field           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              width and the digit count plus the leading zero               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              count. If the width is less than the digit count              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              plus the leading zero count, the space count is               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              zero. */                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0024d4   0e04     MOVLW     0x4                            if (width > precision + digit_cnt + prefix_cnt)                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0024d6   cfdb     MOVFF     0xfdb,0x2b                                                                                      
0024d8   f02b                                                                                                               
0024da   0e16     MOVLW     0x16                                                                                            
0024dc   d943     RCALL     0x2764                                                                                          
0024de   80d8     BSF       0xd8,0x0,0x0                                                                                    
0024e0   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
0024e2   e214     BC        0x250c                                                                                          
002764   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002766   ffe6                                                                                                               
002768   0e15     MOVLW     0x15                                                                                            
00276a   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00276c   ffe6                                                                                                               
00276e   0e05     MOVLW     0x5                                                                                             
002770   50db     MOVF      0xdb,0x0,0x0                                                                                    
002772   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002774   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
002776   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002778   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
00277a   0012     RETURN    0x0                                                                                             
                                                             space_cnt =                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0024e4   0e16     MOVLW     0x16                               width - precision - digit_cnt - prefix_cnt;                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0024e6   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0024e8   ffe6                                                                                                               
0024ea   0e15     MOVLW     0x15                                                                                            
0024ec   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0024ee   ffe6                                                                                                               
0024f0   0e04     MOVLW     0x4                                                                                             
0024f2   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0024f4   ffe6                                                                                                               
0024f6   0e05     MOVLW     0x5                                                                                             
0024f8   50db     MOVF      0xdb,0x0,0x0                                                                                    
0024fa   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0024fc   5ce7     SUBWF     0xe7,0x0,0x0                                                                                    
0024fe   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002500   80d8     BSF       0xd8,0x0,0x0                                                                                    
002502   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
002504   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002506   80d8     BSF       0xd8,0x0,0x0                                                                                    
002508   54e7     SUBFWB    0xe7,0x0,0x0                                                                                    
00250a   d95d     RCALL     0x27c6                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* for output, we check the justification, if it's               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              right justified and the space count is positive, we           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              emit the space characters first. */                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00250c   0e03     MOVLW     0x3                            if (!(flags & _FLAG_MINUS) && space_cnt)                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00250e   50db     MOVF      0xdb,0x0,0x0                                                                                    
002510   0b01     ANDLW     0x1                                                                                             
002512   e10b     BNZ       0x252a                                                                                          
002514   0e08     MOVLW     0x8                                                                                             
002516   50db     MOVF      0xdb,0x0,0x0                                                                                    
002518   e008     BZ        0x252a                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00251a   d8b0     RCALL     0x267c                             if (s_put_n_chars (handle, space_cnt, ' '))                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00251c   e001     BZ        0x2520                                                                                          
00251e   d08d     BRA       0x263a                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002520   0e08     MOVLW     0x8                                count += space_cnt;                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002522   50db     MOVF      0xdb,0x0,0x0                                                                                    
002524   d8bc     RCALL     0x269e                                                                                          
002526   0e08     MOVLW     0x8                                space_cnt = 0;                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002528   6adb     CLRF      0xdb,0x0                                                                                        
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a sign character to print, that comes              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              next */                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00252a   0e17     MOVLW     0x17                           if (sign_char)                                                   C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00252c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00252e   e007     BZ        0x253e                                                                                          
002530   d986     RCALL     0x283e                           if (putc (sign_char, handle) == EOF)                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002532   0e17     MOVLW     0x17                                                                                            
002534   d9ef     RCALL     0x2914                                                                                          
002536   e103     BNZ       0x253e                                                                                          
002538   1c2c     COMF      0x2c,0x0,0x0                                                                                    
00253a   e101     BNZ       0x253e                                                                                          
00253c   d07e     BRA       0x263a                                                                                          
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have a prefix (0b, 0B, 0x or 0X), that's next */        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00253e   0e16     MOVLW     0x16                           if (prefix_cnt)                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002540   50db     MOVF      0xdb,0x0,0x0                                                                                    
002542   e016     BZ        0x2570                                                                                          
                                                             {                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002544   d97c     RCALL     0x283e                             if (putc ('0', handle) == EOF)                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002546   0e30     MOVLW     0x30                                                                                            
002548   6ee6     MOVWF     0xe6,0x0                                                                                        
00254a   d89d     RCALL     0x2686                                                                                          
00254c   e102     BNZ       0x2552                                                                                          
00254e   1c2c     COMF      0x2c,0x0,0x0                                                                                    
002550   e074     BZ        0x263a                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002552   d975     RCALL     0x283e                             if (putc (c, handle) == EOF)                                 C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002554   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
002556   ffe6                                                                                                               
002558   ec36     CALL      0x626c,0x0                                                                                      
00255a   f031                                                                                                               
00255c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00255e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002560   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002562   cff4     MOVFF     0xff4,0x2c                                                                                      
002564   f02c                                                                                                               
002566   0100     MOVLB     0x0                                                                                             
002568   1cf3     COMF      0xf3,0x0,0x0                                                                                    
00256a   e102     BNZ       0x2570                                                                                          
00256c   1c2c     COMF      0x2c,0x0,0x0                                                                                    
00256e   e065     BZ        0x263a                                                                                          
                                                                 return EOF;                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                             }                                                              C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if we have leading zeros, they follow. the prefix, if any     C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              is included in the number of digits when determining how      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              many leading zeroes are needed. */                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002570   0e05     MOVLW     0x5                            if (precision > prefix_cnt)                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002572   cfdb     MOVFF     0xfdb,0x2b                                                                                      
002574   f02b                                                                                                               
002576   0e16     MOVLW     0x16                                                                                            
002578   50db     MOVF      0xdb,0x0,0x0                                                                                    
00257a   80d8     BSF       0xd8,0x0,0x0                                                                                    
00257c   542b     SUBFWB    0x2b,0x0,0x0                                                                                    
00257e   e209     BC        0x2592                                                                                          
002580   0e05     MOVLW     0x5                              precision -= prefix_cnt;                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002582   cfdb     MOVFF     0xfdb,0xfe7                                                                                     
002584   ffe7                                                                                                               
002586   0e16     MOVLW     0x16                                                                                            
002588   50db     MOVF      0xdb,0x0,0x0                                                                                    
00258a   5ee7     SUBWF     0xe7,0x1,0x0                                                                                    
00258c   0e05     MOVLW     0x5                                                                                             
00258e   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
002590   ffdb                                                                                                               
002592   0e30     MOVLW     0x30                           if (s_put_n_chars (handle, precision, '0'))                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002594   6ee6     MOVWF     0xe6,0x0                                                                                        
002596   0e05     MOVLW     0x5                                                                                             
002598   d9c9     RCALL     0x292c                                                                                          
00259a   e14f     BNZ       0x263a                                                                                          
0028de   ec95     CALL      0x1d2a,0x0                                                                                      
0028e0   f00e                                                                                                               
0028e2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0028e4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0028e6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0028e8   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0028ea   0900     IORLW     0x0                                                                                             
0028ec   0012     RETURN    0x0                                                                                             
00292c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00292e   ffe6                                                                                                               
002930   df86     RCALL     0x283e                                                                                          
002932   ef6f     GOTO      0x28de                                                                                          
002934   f014                                                                                                               
                                                             return EOF;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* print the actual number */                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00259c   0e39     MOVLW     0x39                           for (cval = *++q; cval; cval = *++q)                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00259e   2adb     INCF      0xdb,0x1,0x0                                                                                    
0025a0   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0025a2   ffe9                                                                                                               
0025a4   0e3a     MOVLW     0x3a                                                                                            
0025a6   e301     BNC       0x25aa                                                                                          
0025a8   2adb     INCF      0xdb,0x1,0x0                                                                                    
0025aa   cfdb     MOVFF     0xfdb,0xfea                                                                                     
0025ac   ffea                                                                                                               
0025ae   0e09     MOVLW     0x9                                                                                             
0025b0   cfef     MOVFF     0xfef,0xfdb                                                                                     
0025b2   ffdb                                                                                                               
0025b4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0025b6   e00e     BZ        0x25d4                                                                                          
0025c4   0e39     MOVLW     0x39                                                                                            
0025c6   2adb     INCF      0xdb,0x1,0x0                                                                                    
0025c8   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
0025ca   ffe9                                                                                                               
0025cc   0e3a     MOVLW     0x3a                                                                                            
0025ce   e3ed     BNC       0x25aa                                                                                          
0025d0   2adb     INCF      0xdb,0x1,0x0                                                                                    
0025d2   d7eb     BRA       0x25aa                                                                                          
0025b8   d942     RCALL     0x283e                           if (putc (cval, handle) == EOF)                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0025ba   0e09     MOVLW     0x9                                                                                             
0025bc   d9ab     RCALL     0x2914                                                                                          
0025be   e102     BNZ       0x25c4                                                                                          
0025c0   1c2c     COMF      0x2c,0x0,0x0                                                                                    
0025c2   e03b     BZ        0x263a                                                                                          
002914   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002916   ffe6                                                                                                               
002918   ef43     GOTO      0x2686                                                                                          
00291a   f013                                                                                                               
                                                               return EOF;                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           /* if there are any spaces left, they go to right-pad            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                              the field */                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0025d4   d853     RCALL     0x267c                         if (s_put_n_chars (handle, space_cnt, ' '))                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0025d6   e131     BNZ       0x263a                                                                                          
00267c   0e20     MOVLW     0x20                                                                                            
00267e   6ee6     MOVWF     0xe6,0x0                                                                                        
002680   0e08     MOVLW     0x8                                                                                             
002682   ef96     GOTO      0x292c                                                                                          
002684   f014                                                                                                               
00283e   0efc     MOVLW     0xfc                                                                                            
002840   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002842   ffe6                                                                                                               
002844   0efd     MOVLW     0xfd                                                                                            
002846   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
002848   ffe6                                                                                                               
00284a   0012     RETURN    0x0                                                                                             
                                                             return EOF;                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0025d8   0e16     MOVLW     0x16                           count += precision + digit_cnt + space_cnt + prefix_cnt;         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0025da   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0025dc   ffe6                                                                                                               
0025de   0e08     MOVLW     0x8                                                                                             
0025e0   d8c1     RCALL     0x2764                                                                                          
0025e2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0025e4   24e7     ADDWF     0xe7,0x0,0x0                                                                                    
0025e6   d85b     RCALL     0x269e                                                                                          
00269e   6e2b     MOVWF     0x2b,0x0                                                                                        
0026a0   6a2c     CLRF      0x2c,0x0                                                                                        
0026a2   50d9     MOVF      0xd9,0x0,0x0                                                                                    
0026a4   0f01     ADDLW     0x1                                                                                             
0026a6   d94d     RCALL     0x2942                                                                                          
0026a8   502b     MOVF      0x2b,0x0,0x0                                                                                    
0026aa   26ee     ADDWF     0xee,0x1,0x0                                                                                    
0026ac   502c     MOVF      0x2c,0x0,0x0                                                                                    
0026ae   22ed     ADDWFC    0xed,0x1,0x0                                                                                    
0026b0   0012     RETURN    0x0                                                                                             
                                                         }                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0025e8   d02e     BRA       0x2646                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       case 'n':                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0025ea   0e07     MOVLW     0x7                          switch (size)                                                      C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0025ec   50db     MOVF      0xdb,0x0,0x0                                                                                    
0025ee   0a03     XORLW     0x3                                                                                             
0025f0   e01c     BZ        0x262a                                                                                          
0025f2   0a01     XORLW     0x1                                                                                             
0025f4   e014     BZ        0x261e                                                                                          
0025f6   0a03     XORLW     0x3                                                                                             
0025f8   e007     BZ        0x2608                                                                                          
                                                           {                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_LONG:                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002608   d8f3     RCALL     0x27f0                           *(long *) va_arg (ap, long *) = count;                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00260a   6a30     CLRF      0x30,0x0                                                                                        
00260c   ae2e     BTFSS     0x2e,0x7,0x0                                                                                    
00260e   d002     BRA       0x2614                                                                                          
002610   682f     SETF      0x2f,0x0                                                                                        
002612   6830     SETF      0x30,0x0                                                                                        
002614   d82a     RCALL     0x266a                                                                                          
002616   d8ba     RCALL     0x278c                                                                                          
002618   c030     MOVFF     0x30,0xfee                                                                                      
00261a   ffee                                                                                                               
00278c   50ee     MOVF      0xee,0x0,0x0                                                                                    
00278e   cfef     MOVFF     0xfef,0xfea                                                                                     
002790   ffea                                                                                                               
002792   6ee9     MOVWF     0xe9,0x0                                                                                        
002794   c02d     MOVFF     0x2d,0xfee                                                                                      
002796   ffee                                                                                                               
002798   c02e     MOVFF     0x2e,0xfee                                                                                      
00279a   ffee                                                                                                               
00279c   c02f     MOVFF     0x2f,0xfee                                                                                      
00279e   ffee                                                                                                               
0027a0   0012     RETURN    0x0                                                                                             
0027f0   0e01     MOVLW     0x1                                                                                             
0027f2   cfdb     MOVFF     0xfdb,0x2d                                                                                      
0027f4   f02d                                                                                                               
0027f6   0e02     MOVLW     0x2                                                                                             
0027f8   cfdb     MOVFF     0xfdb,0x2e                                                                                      
0027fa   f02e                                                                                                               
0027fc   6a2f     CLRF      0x2f,0x0                                                                                        
0027fe   0012     RETURN    0x0                                                                                             
00261c   d014     BRA       0x2646                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_SHLONG:                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00261e   d8e8     RCALL     0x27f0                           *(short long *) va_arg (ap, short long *) = count;             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002620   be2e     BTFSC     0x2e,0x7,0x0                                                                                    
002622   682f     SETF      0x2f,0x0                                                                                        
002624   d822     RCALL     0x266a                                                                                          
002626   d8b2     RCALL     0x278c                                                                                          
002628   d00e     BRA       0x2646                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           case _FMT_BYTE:                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00262a   d961     RCALL     0x28ee                           *(signed char *) va_arg (ap, signed char *) = count;           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00262c   cfdb     MOVFF     0xfdb,0xfef                                                                                     
00262e   ffef                                                                                                               
002630   d00a     BRA       0x2646                           break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           default:                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0025fa   d979     RCALL     0x28ee                           *(int *) va_arg (ap, int *) = count;                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
0025fc   cfdb     MOVFF     0xfdb,0xfee                                                                                     
0025fe   ffee                                                                                                               
002600   0e02     MOVLW     0x2                                                                                             
002602   cfdb     MOVFF     0xfdb,0xfed                                                                                     
002604   ffed                                                                                                               
0028ee   debd     RCALL     0x266a                                                                                          
0028f0   50ee     MOVF      0xee,0x0,0x0                                                                                    
0028f2   cfef     MOVFF     0xfef,0xfea                                                                                     
0028f4   ffea                                                                                                               
0028f6   6ee9     MOVWF     0xe9,0x0                                                                                        
0028f8   0e01     MOVLW     0x1                                                                                             
0028fa   0012     RETURN    0x0                                                                                             
                                                             break;                                                         C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                           }                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002606   d01f     BRA       0x2646                       break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       default:                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         /* undefined behaviour. we do nothing */                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                         break;                                                             C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                       }                                                                    C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                 else                                                                       C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                   {                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002632   d979     RCALL     0x2926                   if (putc (c, handle) == EOF)                                           C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002634   e105     BNZ       0x2640                                                                                          
002636   1c2c     COMF      0x2c,0x0,0x0                                                                                    
002638   e103     BNZ       0x2640                                                                                          
002686   ec36     CALL      0x626c,0x0                                                                                      
002688   f031                                                                                                               
00268a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00268c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00268e   52e5     MOVF      0xe5,0x1,0x0                                                                                    
002690   cff3     MOVFF     0xff3,0x2b                                                                                      
002692   f02b                                                                                                               
002694   cff4     MOVFF     0xff4,0x2c                                                                                      
002696   f02c                                                                                                               
002698   0100     MOVLB     0x0                                                                                             
00269a   1cf3     COMF      0xf3,0x0,0x0                                                                                    
00269c   0012     RETURN    0x0                                                                                             
0028cc   cfdf     MOVFF     0xfdf,0xfe6                                                                                     
0028ce   ffe6                                                                                                               
0028d0   ef43     GOTO      0x2686                                                                                          
0028d2   f013                                                                                                               
002926   df8b     RCALL     0x283e                                                                                          
002928   ef66     GOTO      0x28cc                                                                                          
00292a   f014                                                                                                               
00263a   68f3     SETF      0xf3,0x0                   return EOF;                                                          C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00263c   68f4     SETF      0xf4,0x0                                                                                        
00263e   d010     BRA       0x2660                                                                                          
002640   d8fa     RCALL     0x2836                   ++count;                                                               C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002642   e301     BNC       0x2646                                                                                          
002644   2adb     INCF      0xdb,0x1,0x0                                                                                    
002836   0e01     MOVLW     0x1                                                                                             
002838   2adb     INCF      0xdb,0x1,0x0                                                                                    
00283a   0e02     MOVLW     0x2                                                                                             
00283c   0012     RETURN    0x0                                                                                             
                                                   }                                                                        C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00264c   0e01     MOVLW     0x1              return count;                                                                  C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
00264e   cfdb     MOVFF     0xfdb,0x2b                                                                                      
002650   f02b                                                                                                               
002652   0e02     MOVLW     0x2                                                                                             
002654   cfdb     MOVFF     0xfdb,0x2c                                                                                      
002656   f02c                                                                                                               
002658   c02b     MOVFF     0x2b,0xff3                                                                                      
00265a   fff3                                                                                                               
00265c   c02c     MOVFF     0x2c,0xff4                                                                                      
00265e   fff4                                                                                                               
002660   cfd9     MOVFF     0xfd9,0xfe1    }                                                                                C:\mcc18\src\TRADIT~1\stdclib\vfprintf.c
002662   ffe1                                                                                                               
002664   cfda     MOVFF     0xfda,0xfe2                                                                                     
002666   ffe2                                                                                                               
002668   d0cb     BRA       0x2800                                                                                          
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006606   0eff     MOVLW     0xff                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006608   24e1     ADDWF     0xe1,0x0,0x0             addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00660a   6ee9     MOVWF     0xe9,0x0                 movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00660c   0eff     MOVLW     0xff                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00660e   20e2     ADDWFC    0xe2,0x0,0x0             addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006610   6eea     MOVWF     0xea,0x0                 movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006616   0e2f     MOVLW     0x2f                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006618   64ef     CPFSGT    0xef,0x0                 cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00661a   d004     BRA       0x6624                 bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00661c   0e3a     MOVLW     0x3a                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00661e   60ef     CPFSLT    0xef,0x0                 cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006620   d001     BRA       0x6624                 bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; @name isdigit                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;The {\bf isdigit} function tests the value of {\bf c} to determine if it        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;is a digit character. A digit character is defined as any decimal digit         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;character (0, 1, 2, 3, 4, 5, 6, 7, 8, 9).                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; int isdigit (int c);                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           CTYPE CODE                                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           isdigit                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             global isdigit                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ; Proceedure: Use FSR0 as pointer to 'c'                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           ;         Return with result in PROD                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Clear out result                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
006602   6af3     CLRF      0xf3,0x0                 clrf      PRODL, ACCESS                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
006604   6af4     CLRF      0xf4,0x0       	  clrf      PRODH, ACCESS                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           	                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Set FSR0 = FSR1 - 2 ( location of 'c')                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     StkSetPtrToOffset FSR0L,-1                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
006612   66ed     TSTFSZ    0xed,0x0                 tstfsz    POSTDEC0,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
006614   d007     BRA       0x6624                   bra       jNoMatch            ; upper byte must be 0 to match          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             ; Test for condition                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFleL   INDF0,ACCESS,'0'-1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                     jmpFgeL   INDF0,ACCESS,'9'+1,jNoMatch                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jMatch:                                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
006622   2af3     INCF      0xf3,0x1,0x0             incf      PRODL,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           jNoMatch:                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
006624   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\isdigit.asm
                                           #include <stdio.h>                                                               C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int _user_putc (char c);                                                         C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int _usart_putc (char c);                                                        C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                           int                                                                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
00626c   cfd9     MOVFF     0xfd9,0xfe6    putc (char c, FILE * f)                                                          C:\mcc18\src\TRADIT~1\stdclib\putc.c
00626e   ffe6                                                                                                               
006270   cfda     MOVFF     0xfda,0xfe6                                                                                     
006272   ffe6                                                                                                               
006274   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
006276   ffd9                                                                                                               
006278   cfe2     MOVFF     0xfe2,0xfda                                                                                     
00627a   ffda                                                                                                               
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                             /* if the handle > 0 then it's a pointer to a string buffer address.           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                specifically, a pointer to a pointer referencing the next available         C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                byte in the buffer, to which the character will be stored. */               C:\mcc18\src\TRADIT~1\stdclib\putc.c
00627c   0efb     MOVLW     0xfb             if ((int) f >= 0)                                                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
00627e   cfdb     MOVFF     0xfdb,0x2b                                                                                      
006280   f02b                                                                                                               
006282   0efc     MOVLW     0xfc                                                                                            
006284   cfdb     MOVFF     0xfdb,0x2c                                                                                      
006286   f02c                                                                                                               
006288   0100     MOVLB     0x0                                                                                             
00628a   0e80     MOVLW     0x80                                                                                            
00628c   142c     ANDWF     0x2c,0x0,0x0                                                                                    
00628e   e11a     BNZ       0x62c4                                                                                          
006290   0efb     MOVLW     0xfb               return (unsigned char) (*(*(char **) f)++ = c);                              C:\mcc18\src\TRADIT~1\stdclib\putc.c
006292   cfdb     MOVFF     0xfdb,0xfe9                                                                                     
006294   ffe9                                                                                                               
006296   0efc     MOVLW     0xfc                                                                                            
006298   cfdb     MOVFF     0xfdb,0xfea                                                                                     
00629a   ffea                                                                                                               
00629c   cfee     MOVFF     0xfee,0xff3                                                                                     
00629e   fff3                                                                                                               
0062a0   cfed     MOVFF     0xfed,0xff4                                                                                     
0062a2   fff4                                                                                                               
0062a4   2aee     INCF      0xee,0x1,0x0                                                                                    
0062a6   0e00     MOVLW     0x0                                                                                             
0062a8   22ef     ADDWFC    0xef,0x1,0x0                                                                                    
0062aa   cff3     MOVFF     0xff3,0xfe9                                                                                     
0062ac   ffe9                                                                                                               
0062ae   cff4     MOVFF     0xff4,0xfea                                                                                     
0062b0   ffea                                                                                                               
0062b2   0efd     MOVLW     0xfd                                                                                            
0062b4   cfdb     MOVFF     0xfdb,0xfef                                                                                     
0062b6   ffef                                                                                                               
0062b8   50ef     MOVF      0xef,0x0,0x0                                                                                    
0062ba   6a2c     CLRF      0x2c,0x0                                                                                        
0062bc   6ef3     MOVWF     0xf3,0x0                                                                                        
0062be   c02c     MOVFF     0x2c,0xff4                                                                                      
0062c0   fff4                                                                                                               
0062c2   d010     BRA       0x62e4                                                                                          
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
0062c4   0efb     MOVLW     0xfb             if ((signed char) f == (signed char) _H_USART)                                 C:\mcc18\src\TRADIT~1\stdclib\putc.c
0062c6   50db     MOVF      0xdb,0x0,0x0                                                                                    
0062c8   08fe     SUBLW     0xfe                                                                                            
0062ca   e106     BNZ       0x62d8                                                                                          
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the USART function is direct, as it's our             C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    default value and we want it to work without needing any                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    direct initialization from the user */                                  C:\mcc18\src\TRADIT~1\stdclib\putc.c
0062cc   0efd     MOVLW     0xfd                 return _usart_putc (c);                                                    C:\mcc18\src\TRADIT~1\stdclib\putc.c
0062ce   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0062d0   ffe6                                                                                                               
0062d2   ec44     CALL      0x6688,0x0                                                                                      
0062d4   f033                                                                                                               
0062d6   d005     BRA       0x62e2                                                                                          
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                             else                                                                           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                               {                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                 /* the invocation of the user function is direct, not via a                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. We just put an empty definition of the                C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function in the library and if the user specifies their own             C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    version it will be found first and the library definition will          C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    be ignored. We do it this way because it's generally better to          C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    spend 2 bytes of program memory for the RETURN instruction of           C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    the empty function than three bytes of data memory for the              C:\mcc18\src\TRADIT~1\stdclib\putc.c
                                                    function pointer. */                                                    C:\mcc18\src\TRADIT~1\stdclib\putc.c
0062d8   0efd     MOVLW     0xfd                 return _user_putc (c);                                                     C:\mcc18\src\TRADIT~1\stdclib\putc.c
0062da   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0062dc   ffe6                                                                                                               
0062de   ec03     CALL      0x806,0x0                                                                                       
0062e0   f004                                                                                                               
0062e2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                               }                                                                            C:\mcc18\src\TRADIT~1\stdclib\putc.c
0062e4   52e5     MOVF      0xe5,0x1,0x0   }                                                                                C:\mcc18\src\TRADIT~1\stdclib\putc.c
0062e6   cfe5     MOVFF     0xfe5,0xfda                                                                                     
0062e8   ffda                                                                                                               
0062ea   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0062ec   ffd9                                                                                                               
0062ee   0012     RETURN    0x0                                                                                             
                                             include <P18CXXX.INC>                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F8520.INC
                                                                                                                            C:\MCC18\MPASM\P18F8520.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F8520.INC
                                           ;  $Id: P18F8520.INC,v 1.11 2004/10/12 21:31:37 curtiss Exp $                    C:\MCC18\MPASM\P18F8520.INC
                                           ;  MPASM PIC18F8520 processor include                                            C:\MCC18\MPASM\P18F8520.INC
                                           ;                                                                                C:\MCC18\MPASM\P18F8520.INC
                                           ;  (c) Copyright 1999-2004 Microchip Technology, All rights reserved             C:\MCC18\MPASM\P18F8520.INC
                                           ;==========================================================================      C:\MCC18\MPASM\P18F8520.INC
                                                                                                                            C:\MCC18\MPASM\P18F8520.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18F8520.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1220                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __18F1320                                                                 C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #define __USE_PORTB 1                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                             GLOBAL _usart_putc                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           STDIO CODE                                                                       C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           _usart_putc                                                                      C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
006688   0eff     MOVLW     0xff                         MOVLW     0xff                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00668a   50e3     MOVF      0xe3,0x0,0x0                 MOVF      PLUSW1, w                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00668c   baac     BTFSC     0xac,0x5,0x0                 BTFSC     TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00668e   d004     BRA       0x6698                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
006690   6aaf     CLRF      0xaf,0x0                     CLRF      SPBRG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
006692   8eab     BSF       0xab,0x7,0x0                 BSF       RCSTA, 0x7                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
006694   8aac     BSF       0xac,0x5,0x0                 BSF       TXSTA, 0x5                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #ifdef __USE_PORTB                                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                         BCF       TRISB, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
006696   9c94     BCF       0x94,0x6,0x0                 BCF       TRISC, 0x6                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
006698   a2ac     BTFSS     0xac,0x1,0x0   loop:         BTFSS     TXSTA, 0x1                                               C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00669a   d7fe     BRA       0x6698                       BRA       loop                                                     C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00669c   6ead     MOVWF     0xad,0x0                     MOVWF     TXREG                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
00669e   6ef3     MOVWF     0xf3,0x0                     MOVWF     PRODL                                                    C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0066a0   6af4     CLRF      0xf4,0x0                     CLRF      PRODL + 1                                                C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
0066a2   0012     RETURN    0x0                          RETURN                                                             C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                               END                                                                          C:\MCC18\SRC\TRADIT~1\PMC\USART\_usartpc.asm
                                           /* this default version should not do anything. it is entirely a                 C:\mcc18\src\TRADIT~1\stdclib\_user_putc.c
                                              placeholder symbol. To keep code size at a minimum, it is declared            C:\mcc18\src\TRADIT~1\stdclib\_user_putc.c
                                              without a return value or parameters. The caller will still clean up          C:\mcc18\src\TRADIT~1\stdclib\_user_putc.c
                                              the stack frame correctly.                                                    C:\mcc18\src\TRADIT~1\stdclib\_user_putc.c
                                                                                                                            C:\mcc18\src\TRADIT~1\stdclib\_user_putc.c
                                              When using the _H_USER stream, the function will be implemented in            C:\mcc18\src\TRADIT~1\stdclib\_user_putc.c
                                              application code with the prototype:                                          C:\mcc18\src\TRADIT~1\stdclib\_user_putc.c
                                               int _user_putc (char c);                                                     C:\mcc18\src\TRADIT~1\stdclib\_user_putc.c
                                             */                                                                             C:\mcc18\src\TRADIT~1\stdclib\_user_putc.c
                                           void                                                                             C:\mcc18\src\TRADIT~1\stdclib\_user_putc.c
                                           _user_putc (void)                                                                C:\mcc18\src\TRADIT~1\stdclib\_user_putc.c
                                           {                                                                                C:\mcc18\src\TRADIT~1\stdclib\_user_putc.c
000806   0012     RETURN    0x0            }                                                                                C:\mcc18\src\TRADIT~1\stdclib\_user_putc.c
                                           ; $Id: slenpgm.asm,v 1.3 2004/04/01 17:25:11 kuhrtt Exp $                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #include "P18CXXX.INC"                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                   LIST                                                                     C:\MCC18\MPASM\P18CXXX.INC
                                           ; P18CXXX.INC  Standard Header File, Version 1.00   Microchip Technology, Inc.   C:\MCC18\MPASM\P18CXXX.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                           ; P18C452.INC  Standard Header File, Version 0.12   Microchip Technology, Inc.   C:\MCC18\MPASM\P18C452.INC
                                                   LIST                                                                     C:\MCC18\MPASM\P18C452.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F242                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F242.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F248                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F248.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F252                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F252.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F258                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F258.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F442                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F442.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F448                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F448.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F452                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F452.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F458                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F458.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C601                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C601.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C658                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C658.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C801                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C801.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18C858                                                                 C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18C858.INC>                                                       C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F1320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F1320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4220                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4220.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4320                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4320.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8720                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8720.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4439                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4439.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4539                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4539.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8621                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8621.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4331                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4331.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4431                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4431.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4515                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4515.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4525                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4525.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4610                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4610.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4620                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4620.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8490                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8490.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4585                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4585.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4680                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4680.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4681                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4681.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4510                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4510.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4520                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4520.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4455                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4455.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4550                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4550.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4410                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4410.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4420                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4420.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F2580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F2580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4480                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4480.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F4580                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F4580.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8310                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8310.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8390                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8390.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F6722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F6722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8627                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8627.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F8722                                                                C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F8722.INC>                                                      C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F64J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F64J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F65J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F65J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F66J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F66J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F67J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F67J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F84J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F84J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F85J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F85J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F86J15                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F86J15.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                             IFDEF __18F87J10                                                               C:\MCC18\MPASM\P18CXXX.INC
                                                INCLUDE <P18F87J10.INC>                                                     C:\MCC18\MPASM\P18CXXX.INC
                                             ENDIF                                                                          C:\MCC18\MPASM\P18CXXX.INC
                                           #include "P18MACRO.INC"                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; $Id: p18macro.inc,v 1.1 2003/12/16 21:50:10 GrosbaJ Exp $                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;         MACROS                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;==========================================================================      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   LIST                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkSetPtrToOffset macro Ptr,Offset                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Set pointer Ptr to argument in stack frame at Offset.                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr,ACCESS                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     Ptr+1                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkPushPtrToOffset macro Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Push pointer onto stack to point to Offset location in stack.                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Offset defined before push.                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     INDF1,ACCESS                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(Offset&0xFFFF)                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,W,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movwf     PREINC1,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTINC1,F,ACCESS     ; increment FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           StkAddStackPtr macro N                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add N to FSR1                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(N)                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     FSR1L,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     HIGH(N&0xFFFF)                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    FSR1H,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR0 and push on stack.  FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR0 and push on stack. FSR0, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR0 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR0 and push on stack. FSR0, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from FSR2 and push on stack.  FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from FSR2 and push on stack. FSR2, WREG unchanged.             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromFSR2 macro                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from FSR2 and push on stack. FSR2, WREG unchanged.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,POSTINC1                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get one byte from Reg and push on stack.  WREG unchanged.                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get two bytes from Reg and push on stack.  WREG unchanged.                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PushFromReg macro Reg                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Get three bytes from Reg and push on stack.  WREG unchanged.                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,POSTINC1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,POSTINC1                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR0 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR0 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR0 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR0 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS     ; restore FSR0                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at FSR2 without exposing stack.           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at FSR2 without exposing stack.        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToFSR2 macro                                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at FSR2 without exposing stack.      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFD                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFE                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS     ; restore FSR2                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop one byte from stack and put it at Reg without exposing stack.            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Ptr                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop two bytes from stack and put them at Reg without exposing stack.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3PopToReg macro Reg                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Pop three bytes from stack and put them at Reg without exposing stack.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed.                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00618e   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006190   cfe3     MOVFF     0xfe3,0xff8              movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006192   fff8                                                                                                               
006194   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006196   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
006198   cfe3     MOVFF     0xfe3,0xff7              movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00619a   fff7                                                                                                               
00619c   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
00619e   0eff     MOVLW     0xff                     movlw     0xFF                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061a0   cfe3     MOVFF     0xfe3,0xff6              movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061a2   fff6                                                                                                               
0061a4   52e5     MOVF      0xe5,0x1,0x0             movf      POSTDEC1,F,ACCESS     ; decrement FSR1                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR0                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF0                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR0                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR0 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC0                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to FSR2                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,INDF2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to FSR2                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from stack frame at Offset to FSR2                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; WREG changed, FSR2 unchanged.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTINC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+3)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,POSTDEC2                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from stack frame at Offset to Reg                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from stack frame at Offset to Reg                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyToReg macro Offset,Reg                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from stack frame at Offset to Reg                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061c4   0efd     MOVLW     0xfd                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061c6   cfe3     MOVFF     0xfe3,0x1c               movff     PLUSW1,Reg                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061c8   f01c                                                                                                               
0061ca   0efe     MOVLW     0xfe                     movlw     LOW(Offset+1)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061cc   cfe3     MOVFF     0xfe3,0x1d               movff     PLUSW1,Reg+1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061ce   f01d                                                                                                               
0061d0   0eff     MOVLW     0xff                     movlw     LOW(Offset+2)                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061d2   cfe3     MOVFF     0xfe3,0x1e               movff     PLUSW1,Reg+2                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061d4   f01e                                                                                                               
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR0 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF0,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR0 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from FSR0 to stack frame at Offset                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR0 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR0 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC0,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from FSR2 to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     INDF2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from FSR2 to stack frame at Offset                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4CpyFromFSR2 macro Offset                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy four bytes from FSR2 to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTINC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     POSTDEC2,PLUSW1                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy one byte from Reg to stack frame at Offset                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     LOW(Offset)                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy two bytes from Reg to stack frame at Offset                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3CpyFromReg macro Reg,Offset                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Copy three bytes from Reg to stack frame at Offset                           C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg,PLUSW1                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+1,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movff     Reg+2,PLUSW1                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc     STATUS,Z                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Inc macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Increment 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061b2   0efd     MOVLW     0xfd                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061b4   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061b6   e105     BNZ       0x61c2                   bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061b8   0efe     MOVLW     0xfe                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061ba   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061bc   e102     BNZ       0x61c2                   bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061be   0eff     MOVLW     0xff                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
0061c0   2ae3     INCF      0xe3,0x1,0x0             incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement byte in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 2 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3Dec macro Offset                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Decrement 3 bytes in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bc        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 1 byte at Offset.  Branch if zero.  Returns 0 in WREG if zero.          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 2 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3TestForZero macro Offset,jZero                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Test 3 bytes at Offset.  Branch if zero.  Returns 0 in WREG if zero.         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local     jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jContinue                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bz        jZero                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jContinue                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR0. Pointer FSR0 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF0,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR0.  Pointer FSR0 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR0 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR0. Pointer FSR0 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC0,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 1 byte in stack at Offset to byte at FSR2. Pointer FSR2 unchanged.       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 2 bytes in stack at Offset to 2 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk3AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 3 bytes in stack at Offset to 3 bytes at FSR2.  Pointer FSR2 unchanged.  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4AddToFSR2 macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Add 4 bytes in stack at Offset to 4 bytes at FSR2. Pointer FSR2 unchanged.   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwf     POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      PLUSW1,W,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     addwfc    POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 1 byte in stack at Offset                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 2 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4ShiftLeft macro Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Shift left 4 bytes in stack at Offset                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bcf       STATUS,C                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     rlcf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte in stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytesin stack at Offset                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk4Negate macro Offset                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 4 bytes in stack at Offset                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     local jEnd                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+1                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+2                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     bnz       jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     Offset+3                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      PLUSW1,F,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jEnd:                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk1NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 1 byte at FSR2.  FSR2 unchanged.                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           Stk2NegateFSR2 macro                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                             ; Negate 2 bytes at FSR2.  FSR2 unchanged.                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     incf      POSTINC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     btfsc     STATUS,Z                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     decf      INDF2,F,ACCESS                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     comf      POSTDEC2,F,ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                            endm                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           ;====== These branches are short ==============                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWeqZ macro   Label        ; jmp if W == 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      WREG,F,ACCESS                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpWneZ macro   Label        ; jmp if W != 0                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   tstfsz    WREG,ACCESS                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     endm                                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneZ macro   Reg,Acc,Label                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   movf      Reg,F,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg,W,Acc                                                    C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFleL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfsgt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFgeL macro   Reg,Acc,bVal,Label                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movlw     bVal                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     cpfslt    Reg,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFeqF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bz        Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpFneF macro   Reg1,Acc1,Reg2,Acc2,Label                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     movf      Reg1,W,Acc1                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                     subwf     Reg2,W,Acc2                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bnz       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpClr  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfss   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                           jmpSet  macro Reg,Bit,Acc,Label                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   btfsc   Reg,Bit,Acc                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   bra       Label                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                   endm                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\P18MACRO.INC
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; @name strlenpgm                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;``The {\bf strlenpgm} function computes the length of the string pointed        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;to by {\bf s}.''                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@param s pointer to the string                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;@return ``The {\bf strlenpgm} function returns the number of characters         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;that precede the terminating null character.''                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ;                                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; sizerom_t strlenpgm (const rom char *s);                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             extern AARGB2                                                                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           STRING CODE                                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           strlenpgm                                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             global strlenpgm                                                               C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __SMALL__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - SMALL"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; AARGB0:AARGB1:AARGB2.                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk2PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTDEC1,ACCESS    ; provide extra byte below stack          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, AARGB2                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #ifdef __LARGE__                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            messg "strlenpgm - LARGE"                                                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; Procedure: Use TBLPTR for 's' and create 'n' on stack.  Return 'n' in          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           ; AARGB0:AARGB1:AARGB2.                                                          C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Load TBLPTR by POPing 's' off stack.                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3PopToReg TBLPTRL                                                   C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Push 3 bytes of 0 onto stack. This is initial value of 'n'.                  C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0061a6   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0061a8   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0061aa   6ae6     CLRF      0xe6,0x0                 clrf      POSTINC1,ACCESS                                              C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Scan for '\0' while counting.                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jLoop:                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Test for '\0'                                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0061ac   0009     TBLRDPOSTINC                       tblrd     *+                  ; read & increment                       C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0061ae   52f5     MOVF      0xf5,0x1,0x0             movf      TABLAT, F, ACCESS                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0061b0   e009     BZ        0x61c4                   bz        jEnd                                                         C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             ; Count it                                                                     C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3Inc   -3                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0061c2   d7f4     BRA       0x61ac                   bra       jLoop                                                        C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           jEnd                                                                             C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                     Stk3CpyToReg -3, AARGB2                                                C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
0061d6   0012     RETURN    0x0                      return                                                                 C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #else                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                            error "No Model Specified"                                                      C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                           #endif                                                                           C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                             end                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
                                                                                                                            C:\MCC18\SRC\TRADIT~1\STDCLIB\slenpgm.asm
